{
    "pipes": [],
    "interfaces": [
        {
            "name": "AzureAdState",
            "id": "interface-AzureAdState-845988a9d9c29e7922599ec7622dedecc4748e9961feb68d77ad34bcbe3ec29e4cbb1671fafc7c05cb151f8b2ead5faa4cf29c7e342fdfccafb38825eb42f825",
            "file": "projects/core/src/lib/store/azureAd/azureAd.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IAzureAdConfiguration } from \"./azureAd.models\";\r\n\r\nexport interface AzureAdState extends IAzureAdConfiguration {\r\n\r\n}",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "IAzureAdConfiguration"
        },
        {
            "name": "ConfigurationState",
            "id": "interface-ConfigurationState-07303a7b9638b72b4ca9213d0fe17c9d9cd3051639bb4871f348cbe8c2b0d784c352fc0caa876cada9f6c5e2963bef6ce99e9988e075cd08b88904794fcc4ed2",
            "file": "projects/core/src/lib/store/configuration/configuration.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IConfiguration } from \"./configuration.models\";\r\n\r\nexport interface ConfigurationState  extends IConfiguration{\r\n\r\n}",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "IConfiguration"
        },
        {
            "name": "IAzureAdConfiguration",
            "id": "interface-IAzureAdConfiguration-ff6d161a2fd9fd3720c54cc3ee904d676b862a3f36621dd1869f1d639501fbea4b47c0840c2c3f5eb2e1df042e0ca2d361281200877381a9b891a417d1c7b015",
            "file": "projects/core/src/lib/store/azureAd/azureAd.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IAzureAdConfiguration {\r\n    clientId: string | null;\r\n    instanceId: string | null;\r\n    tenantId: string | null;\r\n    redirectUri: string | null;\r\n}",
            "properties": [
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "instanceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "redirectUri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "tenantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IConfiguration",
            "id": "interface-IConfiguration-5eb1b92f79755f0bac4944138dd31975d6d54baa9d7d3d9044172330e79ae92af35dcbd74821f47a9fbcc36fe1d9818e1746ccf48fecf9bfdd51ec8f13169fa5",
            "file": "projects/core/src/lib/store/configuration/configuration.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IConfiguration {\r\n    logoUrl: string | null;\r\n}",
            "properties": [
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "signInPageState",
            "id": "interface-signInPageState-9eeb40ac257ed99b1288c990c791970d0c0d19f632b4ea147d57a31b87abae9153589b794e685749ddc586c5fad1d218fffd2af6c18ca4c166fc87a0c04c74c3",
            "file": "projects/core/src/lib/store/signIn/signInPage.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface signInPageState {\r\n    \r\n}",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AzureAdConfigurationService",
            "id": "injectable-AzureAdConfigurationService-7f849f7c094f1820711af453858a040eaa3b5760fde4739b11ad8577d81c91cbb9a22379453a267cf8f7df2bbd6936e0452cd1beddc16490ad7c03b70701c300",
            "file": "projects/core/src/lib/store/azureAd/azureAdConfigurationService.ts",
            "properties": [
                {
                    "name": "azureAdConfig",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAzureAdConfiguration | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "http",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient | null",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IAzureAdConfiguration } from \"./azureAd.models\";\r\nimport { map } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class AzureAdConfigurationService {\r\n    azureAdConfig: IAzureAdConfiguration | null = null;\r\n    private http: HttpClient | null = null;\r\n\r\n    constructor(private readonly httpHandler: HttpBackend){\r\n        this.http = new HttpClient(httpHandler);\r\n    }\r\n\r\n    init(endpoint: string): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            this.http?.get(endpoint).pipe(map(res => res))\r\n            .subscribe(value => {\r\n                this.azureAdConfig = <IAzureAdConfiguration>value;\r\n                resolve(true);\r\n            },\r\n            (error) => {\r\n                reject(error);\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CoreService",
            "id": "injectable-CoreService-c02152c508dac826dd8168894c0768e13b5f5b2d27af2c9e2664ad08df8fa9a15ce94f19c186d1e7c156f1bbd008457df49b67faf9dd3b587d115a87737999b0",
            "file": "projects/core/src/lib/core.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-66ee955e4e173c0ae49933deed15897ad8aea213f9fb44a1313e962ab94d0f730a6da5b122734bfd74eee6ae8d3274a1f778fd92ebdb9a5e5035da1ecea089a1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'techfabric-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "signIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'techfabric-angular';\r\n  constructor(private authService: MsalService){}\r\n\r\n  signIn(){\r\n    this.authService.loginRedirect();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f8e59b712909852d98eef0f3105db6386bd4815ef9ddd1361329a2d8ff29fdff96a8d58e415d86a265d8c813465013b6a5a76d3d4174f1fa992154455b9ef1a3",
            "file": "projects/core/src/lib/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "ButtonType.Basic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ButtonType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { ButtonType } from './button.models'; \r\n\r\n@Component({\r\n  selector: 'tf-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() type: ButtonType = ButtonType.Basic;\r\n  @Input() text: string = '';\r\n  @Input() disabled: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get buttonClassName(): string {\r\n    switch(this.type){\r\n      case ButtonType.Basic: return 'basic';\r\n      case ButtonType.Ghost: return 'ghost';\r\n      case ButtonType.Primary: return 'primary';\r\n      default: return 'basic';\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: inline-block;\r\n    button {\r\n        padding: 10px 14px;\r\n        border-radius: 6px;\r\n        box-sizing: content-box;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        &.basic {\r\n            background-color: transparent;\r\n            border: 1px solid $grey;\r\n            color: $primary;\r\n            font-style: medium;\r\n        }\r\n        &.primary {\r\n            background-color: $primary;\r\n            color: $white;\r\n            border: none;\r\n        }\r\n        &.ghost {\r\n            background-color: $white;\r\n            color: $primary;\r\n            border: none;\r\n            font-weight: 500;\r\n        }\r\n\r\n        &[disabled] {\r\n            cursor: not-allowed;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "buttonClassName": {
                    "name": "buttonClassName",
                    "getSignature": {
                        "name": "buttonClassName",
                        "type": "string",
                        "returnType": "string",
                        "line": 18
                    }
                }
            },
            "templateData": "<button class=\"{{buttonClassName}}\" [disabled]=\"disabled\">\r\n  <ng-content></ng-content>\r\n</button>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-bcc51e78c5568bc6de24b482ff623afc900e31ad4e7dae248c267ec9abb27e9b254558e66571dcf3adaeca8ac027b388cd82b0fe78c2c20e1d9fc3addb640e6a",
            "file": "projects/core/src/lib/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasTopBar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'content'"
                        }
                    ]
                },
                {
                    "name": "footer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'footer'"
                        }
                    ]
                },
                {
                    "name": "header",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'header'"
                        }
                    ]
                },
                {
                    "name": "well",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'well'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "doesElementHaveContent",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldDisplayContent",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayFooter",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayHeader",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayWell",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewChecked, AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent {\n  @Input() hasTopBar: boolean = false;\n\n  @ViewChild('header') header: any = null;\n  @ViewChild('well') well: any = null;\n  @ViewChild('content') content: any = null;\n  @ViewChild('footer') footer: any = null;\n  constructor() { }\n\n  shouldDisplayHeader(): boolean {\n    return this.doesElementHaveContent(this.header);\n  }\n  shouldDisplayWell(): boolean {\n    return this.doesElementHaveContent(this.well);\n  }\n  shouldDisplayContent(): boolean {\n    return this.doesElementHaveContent(this.content);\n  }\n  shouldDisplayFooter(): boolean {\n    return this.doesElementHaveContent(this.footer);\n  }\n\n  private doesElementHaveContent(element: any): boolean{\n    try{\n      return element.nativeElement.children.length > 0 || element.nativeElement.innerText != \"\";\n    }\n    catch(ex){\n      return false;\n    }\n  }\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n:host{\r\n    display: block;\r\n    border-radius: 8px;\r\n    overflow-y: hidden;\r\n    box-shadow: $box-shadow;\r\n    section {\r\n        padding: 20px;\r\n\r\n        &.bar {\r\n            height: 12px;\r\n            padding: 0px;\r\n            background-color: $primary;\r\n        }\r\n\r\n        &.header {\r\n\r\n        }\r\n\r\n        &.well {\r\n            border-top: 1px solid $grey-light;\r\n            background-color: $grey-light;\r\n        }\r\n\r\n        &.content {\r\n            border-top: 1px solid $grey-light;\r\n        }\r\n\r\n        &.footer {\r\n            border-top: 1px solid $grey-light;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "templateData": "<section class=\"bar\" *ngIf=\"hasTopBar\"></section>\n<section #header class=\"header\" [style.display]=\"shouldDisplayHeader() ? 'block': 'none'\">\n  <ng-content select=\"[header]\"></ng-content>\n</section>\n<section #well class=\"well\" [style.display]=\"shouldDisplayWell() ? 'block': 'none'\">\n  <ng-content select=\"[well]\"></ng-content>\n</section>\n<section #content class=\"content\" [style.display]=\"shouldDisplayContent() ? 'block': 'none'\">\n  <ng-content select=\"[content]\"></ng-content>\n</section>\n<section #footer class=\"footer\" [style.display]=\"shouldDisplayFooter() ? 'block': 'none'\">\n  <ng-content select=\"[footer]\"></ng-content>\n</section>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-bd9f9da237ed606fc3d887b137cfbdd554be7442217cfc4d8b29bc4ba08ec33e0d882e1aa0fa3b73e61a1b1618df7b9ee4c0a739a8f061c9c567f9f30169fe1e",
            "file": "projects/core/src/lib/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "16",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "icon",
                    "defaultValue": "faCheck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'tf-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  @Input() size: number = 16;\r\n  @Input() value: boolean = false;\r\n  @Output() valueChange = new EventEmitter<boolean>();\r\n  @Input() disabled: boolean = false;\r\n  icon = faCheck;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toggle(){\r\n    if(!this.disabled){\r\n      this.value = !this.value;\r\n      this.valueChange.emit(this.value);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host{\r\n    display:inline-block;\r\n    box-sizing: border-box;\r\n    div {\r\n        border-radius: 2px;\r\n\r\n        line-height: 1px;\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: $white;\r\n        border: 1px solid $grey;\r\n        box-sizing: border-box;\r\n        &.checked{\r\n            background-color: $primary;\r\n            border: 1px solid $primary;\r\n            &:hover{\r\n                background-color: $primary;\r\n            }\r\n\r\n            fa-icon{\r\n                opacity: 1;\r\n            }\r\n            &.disabled {\r\n                background-color: $primary;\r\n            }\r\n        }\r\n\r\n        fa-icon {\r\n            display: inline-block;\r\n            opacity: 0;\r\n        }\r\n        &:hover{\r\n            background-color: $grey-light;\r\n            cursor: pointer;\r\n        }\r\n        &:active{\r\n            background-color: $primary-lighter;\r\n        }\r\n\r\n        &.disabled{\r\n            background-color: $grey-light;\r\n            &:hover{\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngStyle]=\"{'height.px': size, 'width.px': size}\" [ngClass]=\"{'checked': value, 'disabled': disabled}\" (click)=\"toggle()\">\r\n  <fa-icon [icon]=\"icon\" [ngStyle]=\"{'font-size.px': size}\"></fa-icon>\r\n</div>"
        },
        {
            "name": "CoreComponent",
            "id": "component-CoreComponent-b75af259bbff922755f1bd68335f3c1df547e3fa1d4c4bc88c9242e6818a9f9f84281000c9933decf3b240261f2c15677a4d68cb32c26ac389fbe641ceb745e3",
            "file": "projects/core/src/lib/core.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-core",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  core works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-core',\r\n  template: `\r\n    <p>\r\n      core works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class CoreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ExpanderComponent",
            "id": "component-ExpanderComponent-24790373e5f15de0d0baf2907ed30cf8a728e65a605a7d81aa1f0f16df9243a2542d010c22abe00899841a74a1e780a0c23b85a3480fbadbee4faaa22036a1bd",
            "file": "projects/core/src/lib/components/expander/expander.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-expander",
            "styleUrls": [
                "./expander.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expander.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayPreview",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasPrimaryBanner",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "headerText",
                    "defaultValue": "'Header'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelectable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isSelectedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "content"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getContentMaxHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { faMinus, faPlus} from '@fortawesome/free-solid-svg-icons'\n\n@Component({\n  selector: 'tf-expander',\n  templateUrl: './expander.component.html',\n  styleUrls: ['./expander.component.scss']\n})\nexport class ExpanderComponent implements OnInit {\n  @Input() isOpen: boolean = true;\n  @Input() headerText: string = 'Header';\n  @Input() displayPreview: boolean = false;\n  @Input() hasPrimaryBanner: boolean = false;\n  @Input() isSelectable: boolean = false;\n  @Input() isSelected: boolean = false;\n  @Output() isSelectedChange = new EventEmitter<boolean>();\n\n  @ViewChild(`content`) contentElement : any = null;\n  constructor() { \n  }\n\n  ngOnInit() {\n  }\n\n  get expandedIcon(): any {\n    return this.isOpen ? faMinus : faPlus;\n  }\n  \n\n  toggle(){\n    this.isOpen = !this.isOpen;\n    if(this.isSelectable){\n      this.isSelected = this.isOpen;\n    }\n  }\n  \n  getContentMaxHeight(){\n    let maxHeight = 0;\n    try{\n      let children  = [...this.contentElement?.nativeElement.children];\n      for(let elem of children){\n        maxHeight += elem.clientHeight;\n      }\n    }\n    catch(ex){\n\n    }\n    return maxHeight;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host{\r\n    display: block;\r\n    border-radius: 8px;\r\n    box-shadow: 0px 3px 10px rgba(0,0,0,0.16) !important;\r\n    overflow: hidden;\r\n\r\n    .hidden {\r\n        display: none;\r\n    }\r\n\r\n    section {\r\n        display: block;\r\n    }\r\n\r\n    content {\r\n        display: inline-block;\r\n    }\r\n\r\n    .primaryBanner {\r\n        display: block;\r\n        height: 8px;\r\n        background-color: $primary;\r\n    }\r\n\r\n    .header {\r\n        #iconWrapper {\r\n            display: inline-block;\r\n            background-color: $primary;\r\n            padding: 24px 14px;\r\n            cursor: pointer;\r\n            fa-icon{\r\n                color: white;\r\n            }\r\n\r\n            \r\n        }\r\n        #title {\r\n            padding-left: 22px;\r\n            padding-right: 46px; \r\n            display: inline-block;\r\n            font-size: 24px;\r\n            color: $secondary-light;\r\n            font-weight: 500;\r\n        }\r\n        #headerContent {\r\n            display: inline-block;\r\n        }\r\n\r\n\r\n        &.selectable {\r\n            #iconWrapper {\r\n                background-color: $white;\r\n            }   \r\n            #title {\r\n                padding-left: 12px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .preview {\r\n        padding: 20px;\r\n        background-color: $grey-light;\r\n    }\r\n    .content {\r\n        transition: padding linear .3s, height linear .3s;\r\n        padding: 0px 20px 0px 20px;\r\n        &.open{\r\n            padding: 20px 20px 20px 20px;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./expander.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "expandedIcon": {
                    "name": "expandedIcon",
                    "getSignature": {
                        "name": "expandedIcon",
                        "type": "any",
                        "returnType": "any",
                        "line": 26
                    }
                }
            },
            "templateData": "<section class=\"primaryBanner\" *ngIf=\"hasPrimaryBanner\">\n\n</section>\n<section class=\"header\" [ngClass]=\"{'selectable': isSelectable}\">\n  <div id=\"iconWrapper\" (click)=\"toggle()\" >\n    <tf-checkbox \n      *ngIf=\"isSelectable\" \n      [size]=\"24\" \n      [(value)]=\"isSelected\">\n    </tf-checkbox>\n    <fa-icon \n      [icon]=\"expandedIcon\" \n      *ngIf=\"!isSelectable\">\n    </fa-icon>\n  </div>\n  <div id=\"title\">\n    {{headerText}}\n  </div>\n  <div id=\"headerContent\">\n    <ng-content select=\"[header]\">\n\n    </ng-content>\n  </div>\n</section>\n<section class=\"preview\" [ngClass]=\"{'hidden': !displayPreview}\">\n  <ng-content select=\"[preview]\">\n\n  </ng-content>\n</section>\n<section class=\"content\" \n  #content \n  [ngStyle]=\"{'height.px': isOpen ? getContentMaxHeight() : 0}\" \n  [ngClass]=\"{'open': isOpen}\">\n  <ng-content select=\"[content]\">\n  </ng-content>\n</section>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-1c5d6b2a95133169fb4c27dae55562a8c09ea04842f274260dd5f68db9f1b004efedfb564274f3bfc4942723019b63d1cf2e211d11224956b8a36bf5f644ed71",
            "file": "projects/core/src/lib/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tf-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n:host {\r\n    display: block;\r\n    height: 60px;\r\n    background-color: $grey-darker;\r\n}",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-84f04bc993dbe9c45c4e53f625257b8e3084abf6852cc4373158e1915d4773ba0913a65016cd33602d77000193ce30bc45e9962c99e934dd9d15e1e22ac6ebc7",
            "file": "projects/core/src/lib/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string | number | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<string | number | null>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n@Component({\r\n  selector: 'tf-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss'],\r\n})\r\nexport class InputComponent implements OnInit {\r\n  @Input() label: string = '';\r\n  @Input() value: string | number | null = null;\r\n  @Output() valueChange: EventEmitter<string | number | null> = new EventEmitter<string | number | null>();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: block;\r\n    position: relative;\r\n    input {\r\n        width: 100%;\r\n        border: 1px solid $grey;\r\n        border-radius: 4px;\r\n        line-height: 30px;\r\n        font-size: 16px;\r\n        padding: 10px 12px;\r\n        transition: border-color linear .3s;\r\n\r\n        &:hover {\r\n            border-color: $grey-darker;\r\n        }\r\n\r\n        &:active, &:focus-visible{\r\n            border-color: $primary;\r\n            outline: none;\r\n            &::placeholder{\r\n                visibility: hidden;\r\n            }\r\n            + label {\r\n                visibility: visible;\r\n                color: $primary;\r\n                top: -12px;\r\n            }\r\n        }\r\n    }\r\n    label {\r\n        transition: color linear .3s, top linear .3s;\r\n        //visibility: hidden;\r\n        position: absolute;\r\n        left: 8px;\r\n        top: 12px;\r\n        pointer-events: none;\r\n\r\n        \r\n        background-color: $white;\r\n        display: block;\r\n        padding: 0px 4px;\r\n        color: $grey;\r\n\r\n        &.hasValue {\r\n            visibility: visible;\r\n            top: -12px;\r\n        }\r\n    }\r\n    \r\n}",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n    <input type=\"text\"  [(ngModel)]=\"value\"/>\r\n    <label [ngClass]=\"{'hasValue': value !== null && value !== ''}\">{{label}}</label>"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-0c7d5b7a33ce6d0bff9259696e46a1066273536ce9e9c4be6f3abec8fcb4ba969ab6d3e250916f1269d670c7ee93ad526a5d9e1967151a4cbba2e7627c4720f7",
            "file": "projects/core/src/lib/components/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hamburgerIcon",
                    "defaultValue": "faBars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'tf-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  @Input() logoUrl: string = '';\n  @Input() displayName: string = '';\n  hamburgerIcon: any = faBars;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n:host{\r\n    display: flex;\r\n    align-items: center;;\r\n    width: 100%;\r\n    box-shadow: $box-shadow;\r\n\r\n    .hamburgerWrapper {\r\n        padding: 10px 10px 10px 20px;\r\n        cursor: pointer;\r\n    }\r\n    .logo {\r\n        padding: 20px 10px;\r\n        img {\r\n            height: 32px;\r\n        }\r\n    }\r\n    .profile {\r\n        padding: 20px;\r\n        margin-left: auto;\r\n    }\r\n}",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"hamburgerWrapper d-sm-none\">\n  <fa-icon [icon]=\"hamburgerIcon\"></fa-icon>\n</div>\n<div class=\"logo\">\n  <img  [src]=\"logoUrl\" />\n</div>\n<div class=\"profile\">\n  {{displayName}}\n</div>"
        },
        {
            "name": "SignInFormComponent",
            "id": "component-SignInFormComponent-26ba6bf5be58bce305c7f8c0b08eb25dd87ec778a3bc7b41666095d659a15d0a54a51c7230e3f3ac693e78b55e3d02c1fda3203361d0287c80db573f1f5afb63",
            "file": "projects/core/src/lib/components/signInForm/signInForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signInForm",
            "styleUrls": [
                "./signInForm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signInForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBackButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "microsoftIcon",
                    "defaultValue": "faMicrosoft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons';\r\n\r\n@Component({\r\n  selector: 'tf-signInForm',\r\n  templateUrl: './signInForm.component.html',\r\n  styleUrls: ['./signInForm.component.scss']\r\n})\r\nexport class SignInFormComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  @Input() showLegacyLogin: boolean = true;\r\n  @Input() showMicrosoftLogin: boolean = false;\r\n  @Input() showBackButton: boolean = true;\r\n\r\n  microsoftIcon: any = faMicrosoft;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    .logoContainer {\r\n        display: flex;\r\n        text-align: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        img {\r\n            width: 60%;\r\n            margin: 20px 0px;\r\n        }\r\n    }\r\n    .customSignIn > * {\r\n        margin-top: 16px;\r\n    }\r\n\r\n    .buttonContainer {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: flex-end;\r\n        align-content: flex-end;\r\n        tf-button {\r\n            margin-left: 16px;\r\n        }\r\n    }\r\n\r\n    .ssoIntegrationWrapper {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    \r\n\r\n    .orDividerContainer {\r\n        position: relative;\r\n        margin: 20px 0px;\r\n        text-align: center;\r\n        .orDivider {\r\n            height: 1px;\r\n            background-color: $grey;;\r\n        }\r\n        .or {\r\n            background-color: $white;\r\n            padding: 0px 10px;\r\n            position: absolute;\r\n            top: -13px;\r\n            left: calc(50% - 50px)\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./signInForm.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"logoContainer\" *ngIf=\"logoUrl !== ''\">\r\n  <img [src]=\"logoUrl\" />\r\n</div>\r\n<div class=\"customSignIn\" *ngIf=\"showLegacyLogin\">\r\n  <tf-input label=\"Username\"></tf-input>\r\n  <tf-input label=\"Password\"></tf-input>\r\n  <div class=\"buttonContainer\">\r\n    <tf-button [type]=\"1\" *ngIf=\"showBackButton\">Back</tf-button>\r\n    <tf-button [type]=\"2\">Sign In</tf-button>\r\n  </div>\r\n  \r\n</div>\r\n\r\n<div class=\"orDividerContainer\" *ngIf=\"showMicrosoftLogin\">\r\n  <div class=\"orDivider\"></div>\r\n  <div class=\"or\">Sign In With</div>\r\n</div>\r\n\r\n<div class=\"ssoIntegrationWrapper\">\r\n  <div *ngIf=\"showMicrosoftLogin\">\r\n    <tf-button><fa-icon [icon]=\"microsoftIcon\" style=\"color: #00a2ed\"></fa-icon> Microsoft</tf-button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignInPageComponent",
            "id": "component-SignInPageComponent-96320333ce117acb7e3cc13be8bfd18daceb058b54b0cc2c3d19dceb38fca135ae8ba60c6f31b24319d49c4d31bc6469cbc9bf2bbde831825530e0d35b80d433",
            "file": "projects/core/src/lib/pages/signInPage/signInPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signInPage",
            "styleUrls": [
                "./signInPage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signInPage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tf-signInPage',\r\n  templateUrl: './signInPage.component.html',\r\n  styleUrls: ['./signInPage.component.scss']\r\n})\r\nexport class SignInPageComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  @Input() showLegacyLogin: boolean = true;\r\n  @Input() showMicrosoftLogin: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-content: space-between;\r\n    tf-signInForm{\r\n        justify-self: center;\r\n        align-self: center;\r\n    }\r\n}",
                    "styleUrl": "./signInPage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\r\n    <tf-signInForm [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n\r\n    </tf-signInForm>\r\n</tf-unauthorizedLayout>"
        },
        {
            "name": "SignUpFormComponent",
            "id": "component-SignUpFormComponent-686a8ff43f9950fc9f0b57219515f675330eb33aedb786619f2745714c15dca37845b5ee384abbd2cf6a2cf38df6d45a18d1f2d3af1a8d4072aa349be051ce12",
            "file": "projects/core/src/lib/components/signUpForm/signUpForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signUpForm",
            "styleUrls": [
                "./signUpForm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signUpForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBackButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "microsoftIcon",
                    "defaultValue": "faMicrosoft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons';\r\n\r\n@Component({\r\n  selector: 'tf-signUpForm',\r\n  templateUrl: './signUpForm.component.html',\r\n  styleUrls: ['./signUpForm.component.scss']\r\n})\r\nexport class SignUpFormComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  @Input() showLegacyLogin: boolean = true;\r\n  @Input() showMicrosoftLogin: boolean = false;\r\n  @Input() showBackButton: boolean = true;\r\n\r\n  microsoftIcon: any = faMicrosoft;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    .logoContainer {\r\n        display: flex;\r\n        text-align: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        img {\r\n            width: 60%;\r\n            margin: 20px 0px;\r\n        }\r\n    }\r\n    .customSignIn > * {\r\n        margin-top: 16px;\r\n    }\r\n\r\n    .buttonContainer {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: flex-end;\r\n        align-content: flex-end;\r\n        tf-button {\r\n            margin-left: 16px;\r\n        }\r\n    }\r\n\r\n    .ssoIntegrationWrapper {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    \r\n\r\n    .orDividerContainer {\r\n        position: relative;\r\n        margin: 20px 0px;\r\n        text-align: center;\r\n        .orDivider {\r\n            height: 1px;\r\n            background-color: $grey;;\r\n        }\r\n        .or {\r\n            background-color: $white;\r\n            padding: 0px 10px;\r\n            position: absolute;\r\n            top: -13px;\r\n            left: calc(50% - 50px)\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./signUpForm.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"logoContainer\" *ngIf=\"logoUrl !== ''\">\r\n  <img [src]=\"logoUrl\" />\r\n</div>\r\n<div class=\"customSignIn\" *ngIf=\"showLegacyLogin\">\r\n  <tf-input label=\"Username\"></tf-input>\r\n  <tf-input label=\"Password\"></tf-input>\r\n  <tf-input label=\"Confirm Password\"></tf-input>\r\n  <div class=\"buttonContainer\">\r\n    <tf-button [type]=\"1\" *ngIf=\"showBackButton\">Back</tf-button>\r\n    <tf-button [type]=\"2\">Sign Up</tf-button>\r\n  </div>\r\n  \r\n</div>\r\n\r\n<div class=\"orDividerContainer\" *ngIf=\"showMicrosoftLogin\">\r\n  <div class=\"orDivider\"></div>\r\n  <div class=\"or\">Sign Up With</div>\r\n</div>\r\n\r\n<div class=\"ssoIntegrationWrapper\">\r\n  <div *ngIf=\"showMicrosoftLogin\">\r\n    <tf-button><fa-icon [icon]=\"microsoftIcon\" style=\"color: #00a2ed\"></fa-icon> Microsoft</tf-button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignUpPageComponent",
            "id": "component-SignUpPageComponent-ca859f2aaa3aaefa632fc2fbf78a6f110beee4ff4fa5e1718aea041ed2bd6256479b46e3c86280ceb361e75f96f5474665b7866b877456e75273d5feb8c388b0",
            "file": "projects/core/src/lib/pages/signUpPage/signUpPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signUpPage",
            "styleUrls": [
                "./signUpPage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signUpPage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tf-signUpPage',\r\n  templateUrl: './signUpPage.component.html',\r\n  styleUrls: ['./signUpPage.component.scss']\r\n})\r\nexport class SignUpPageComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  @Input() showLegacyLogin: boolean = true;\r\n  @Input() showMicrosoftLogin: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-content: space-between;\r\n    tf-signUpForm{\r\n        justify-self: center;\r\n        align-self: center;\r\n    }\r\n}",
                    "styleUrl": "./signUpPage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\r\n  <tf-signUpForm [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n\r\n  </tf-signUpForm>\r\n</tf-unauthorizedLayout>"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-d418be3b087b3065870a2ba2b623fb82c12f87008c66b0373088d9277f16715e197bf3dc820e2e51f74f993a1cd51365e562c24a4745941dd2f334c42eb0ea96",
            "file": "projects/core/src/lib/components/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-slider",
            "styleUrls": [
                "./slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "maxValue",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "percentageValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backgroundElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'background'"
                        }
                    ]
                },
                {
                    "name": "circleElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'circle'"
                        }
                    ]
                },
                {
                    "name": "isDragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "position",
                    "defaultValue": "'test'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "onDragMoved",
                    "args": [
                        {
                            "name": "$event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { CdkDragStart, CdkDragEnd, CdkDragMove } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'tf-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent {\n  @Input() value: number = 0;\n  @Input() percentageValue: number = 0;\n  @Input() maxValue: number = 100;\n  constructor() { }\n\n  @ViewChild('background') backgroundElement: any;\n  @ViewChild('circle') circleElement: any;\n\n  private isDragging: boolean = false;\n  position: string = 'test';\n\n  onDragMoved($event: CdkDragMove){\n    this.percentageValue = ($event.pointerPosition.x - this.backgroundElementPosition.x) / (this.backgroundElementWidth) * 100;\n  }\n\n  get backgroundElementPosition(){\n    return {x: this.backgroundElement.nativeElement.offsetLeft, y: this.backgroundElement.nativeElement.offsetTop};\n  }\n\n  get backgroundElementWidth(){\n    return this.backgroundElement.nativeElement.offsetWidth;\n  }\n\n  get mousePosition(){\n    return {x: (<any>window)?.event?.clientX, y: (<any>window)?.event?.clientY};\n  }\n\n  get circlePosition(){\n    return {x: this.circleElement.nativeElement.offsetLeft, y: this.circleElement.nativeElement.offsetTop};\n  }\n\n  get circleRelativePosition(){\n    try{\n      let transform = this.circleElement.nativeElement.style.transform.replace('translate3d(', '').replace(')').replace('px', '');\n      let transformValues = transform.split(',');\n      return {x: parseInt(transformValues[0]), y: parseInt(transformValues[1])};\n    }\n    catch(ex) {\n      return {x: 0, y: 0};\n    }\n    \n    \n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: block;\r\n    height: 32px;\r\n    .background {\r\n        position: relative;\r\n        left: 0px;\r\n        right: 0px;\r\n        background-color: $grey;\r\n        height: 8px;\r\n        top: 12px;\r\n        border-radius: 8px;\r\n    }\r\n    .highlightBackground {\r\n        position: relative;\r\n        left: 0px;\r\n        background-color: $primary;\r\n        height: 8px;\r\n        top: 4px;\r\n        border-radius: 8px;\r\n    }\r\n    .circle {\r\n        position: absolute;\r\n        background-color: black;\r\n        box-shadow: $box-shadow;\r\n        width: 12px;\r\n        height: 12px;\r\n        border: 10px solid $white;\r\n        top: 16px;\r\n        border-radius: 80px;\r\n        cursor: pointer;\r\n    }\r\n}",
                    "styleUrl": "./slider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "accessors": {
                "backgroundElementPosition": {
                    "name": "backgroundElementPosition",
                    "getSignature": {
                        "name": "backgroundElementPosition",
                        "type": "",
                        "returnType": "",
                        "line": 25
                    }
                },
                "backgroundElementWidth": {
                    "name": "backgroundElementWidth",
                    "getSignature": {
                        "name": "backgroundElementWidth",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                },
                "mousePosition": {
                    "name": "mousePosition",
                    "getSignature": {
                        "name": "mousePosition",
                        "type": "",
                        "returnType": "",
                        "line": 33
                    }
                },
                "circlePosition": {
                    "name": "circlePosition",
                    "getSignature": {
                        "name": "circlePosition",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                },
                "circleRelativePosition": {
                    "name": "circleRelativePosition",
                    "getSignature": {
                        "name": "circleRelativePosition",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                }
            },
            "templateData": "<div class=\"sliderContainer\">\n  <div class=\"background\" #background></div>\n  <div class=\"highlightBackground\" \n    [style.width.%]=\"percentageValue\">\n  </div>\n  <div class=\"circle\" #circle \n    cdkDrag\n    cdkDragLockAxis=\"x\"\n    cdkDragBoundary=\".sliderContainer\" \n    (cdkDragMoved)=\"onDragMoved($event)\">\n  </div>\n</div>"
        },
        {
            "name": "UnauthorizedLayoutComponent",
            "id": "component-UnauthorizedLayoutComponent-d57576ed7a6643ff71b7086a8758f6412697f991cc93c92d986645fd59fdc09447304a74d05e3785d204d3593a83555dfd58dcd3c58353bb41d187c4ea25a33b",
            "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-unauthorizedLayout",
            "styleUrls": [
                "./unauthorizedLayout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./unauthorizedLayout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tf-unauthorizedLayout',\r\n  templateUrl: './unauthorizedLayout.component.html',\r\n  styleUrls: ['./unauthorizedLayout.component.scss']\r\n})\r\nexport class UnauthorizedLayoutComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n}",
                    "styleUrl": "./unauthorizedLayout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<tf-navbar [logoUrl]=\"logoUrl\"></tf-navbar>\r\n<ng-content></ng-content>\r\n<tf-footer></tf-footer>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-01e358b6d74153f54b1423c407efe4992c1a6c5b2349aba42a5ab7f0fba293faf1df55f88604032e969641631b649d576b6feebeae71a911a3972677ac14ea9c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TechfabricModule } from '../../projects/core/src/lib/core.module';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { AzureAdModule } from '../../projects/core/src/lib/store/azureAd/azureAd.module';\r\nimport { MsalModule } from '@azure/msal-angular';\r\nimport { InteractionType, PublicClientApplication } from '@azure/msal-browser';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    TechfabricModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot({}),\r\n    RouterModule.forRoot([]),\r\n    AzureAdModule.forRoot(\"https://localhost:7073/Configuration/AzureAdConfiguration\"),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AzureAdModule"
                        },
                        {
                            "name": "TechfabricModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AzureAdModule",
            "id": "module-AzureAdModule-68edd1f2661b283240b4d9bc1547d002296f9bb2e3b9126e396d559f32c51fc206797cc6ab81199c8648028b1716a6d648a24fc60ea58b105f4c3de190d4272f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [
                        {
                            "name": "identityServiceUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ ngModule: typeof AzureAdModule; providers: {}; }",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "identityServiceUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { NgModule, InjectionToken, APP_INITIALIZER } from \"@angular/core\";\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { azureAdFeatureKey, azureAdReducer } from \"./azureAd.reducers\";\r\nimport { MsalModule, MSAL_INSTANCE, MSAL_BROADCAST_CONFIG, MSAL_GUARD_CONFIG, MSAL_INTERCEPTOR_CONFIG, MsalService } from \"@azure/msal-angular\";\r\nimport { AzureAdConfigurationService } from \"./azureAdConfigurationService\";\r\nimport { Configuration, InteractionType, PublicClientApplication } from \"@azure/msal-browser\";\r\n\r\n\r\n\r\nconst IDENTITY_SERVICE_URL = new InjectionToken<string>('IDENTITY_SERVICE_URL');\r\n\r\n\r\nexport function msalConfigFactory(azureAdConfigService: AzureAdConfigurationService) : any{\r\n\r\n}\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n@NgModule({\r\n    providers: [\r\n\r\n    ],\r\n    imports: [  \r\n        StoreModule.forFeature(azureAdFeatureKey, azureAdReducer),\r\n        MsalModule\r\n    ]\r\n})\r\nexport class AzureAdModule {\r\n    static forRoot(identityServiceUrl: string){\r\n        return {\r\n            ngModule: AzureAdModule,\r\n            providers: [\r\n                AzureAdConfigurationService,\r\n                { provide: IDENTITY_SERVICE_URL, useValue: identityServiceUrl},\r\n                { provide: APP_INITIALIZER, useFactory: (azureAdConfigService: AzureAdConfigurationService) => azureAdConfigService.init(identityServiceUrl), deps: [AzureAdConfigurationService, IDENTITY_SERVICE_URL]},\r\n                {\r\n                    provide: MSAL_INSTANCE,\r\n                    useValue: new PublicClientApplication({\r\n                        auth: {\r\n                          clientId: 'fdc8b9bc-0bd2-4fae-b7b3-7d05b7596de0',\r\n                          authority: 'https://login.microsoftonline.com/a4aa9f35-9917-4518-b764-5fbbb893a6cd',\r\n                          redirectUri: 'http://localhost:4200'\r\n                        },\r\n                        cache: {\r\n                          cacheLocation: 'localStorage',\r\n                          storeAuthStateInCookie: isIE\r\n                        }\r\n                      })\r\n                },\r\n                {\r\n                    provide: MSAL_GUARD_CONFIG,\r\n                    useValue: {\r\n                        interactionType: InteractionType.Redirect, \r\n                        authRequest: {\r\n                          scopes: ['user.read']\r\n                        }\r\n                      }\r\n                },\r\n                {\r\n                    provide: MSAL_INTERCEPTOR_CONFIG,\r\n                    useValue: {\r\n                        interactionType: InteractionType.Redirect,\r\n                        protectedResourceMap: new Map([\r\n                          ['Enter_the_graph_endpoint_Here/v1.0/me', ['user.read']]\r\n                        ])\r\n                      }\r\n                },\r\n                MsalService\r\n            ],\r\n        }\r\n    }\r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ConfigurationModule",
            "id": "module-ConfigurationModule-91a17fd9cb8c8e6a5ef0d7f7cd6caec90dc16206053ef098c63d90d0d9ea2228b22a777dff64bd2ed15bedc34825c91ae7763286fe07164a447f614f04f5cf2e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/store/configuration/configuration.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [],
                    "optional": false,
                    "returnType": "{ ngModule: typeof ConfigurationModule; providers: {}; }",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { configurationFeatureKey, configurationReducer } from \"./configuration.reducers\";\r\n\r\n@NgModule({\r\n    providers: [],\r\n    imports: [\r\n        StoreModule.forFeature(configurationFeatureKey, configurationReducer)\r\n    ]\r\n})\r\nexport class ConfigurationModule {\r\n    static forRoot(){\r\n        return {\r\n            ngModule: ConfigurationModule,\r\n            providers: [\r\n            ]\r\n        }\r\n    }\r\n    \r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TechfabricModule",
            "id": "module-TechfabricModule-7a90292dfff28c4ec0cc6f2dfdb686ddc4c2c9895e759074c4436af54717a791f3d727fe191935c49c9ae2b49a5ca0724c4fce66f3f0bc55e2023468090115da",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/core.module.ts",
            "methods": [],
            "sourceCode": "import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AzureAdModule } from '../public-api';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { CardComponent } from './components/card/card.component';\r\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\r\nimport { ExpanderComponent } from './components/expander/expander.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { InputComponent } from './components/input/input.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { SignInFormComponent } from './components/signInForm/signInForm.component';\r\nimport { SignUpFormComponent } from './components/signUpForm/signUpForm.component';\r\nimport { SliderComponent } from './components/slider/slider.component';\r\nimport { UnauthorizedLayoutComponent } from './layouts/unauthorizedLayout/unauthorizedLayout.component';\r\nimport { SignInPageComponent } from './pages/signInPage/signInPage.component';\r\nimport { SignUpPageComponent } from './pages/signUpPage/signUpPage.component';\r\nimport { ConfigurationModule } from './store/configuration/configuration.module';\r\n\r\n\r\n\r\n\r\nlet components = [\r\n  ButtonComponent,\r\n  CardComponent,\r\n  CheckboxComponent,\r\n  ExpanderComponent,\r\n  SliderComponent,\r\n  NavbarComponent,\r\n  SignInFormComponent,\r\n  SignInPageComponent,\r\n  InputComponent,\r\n  FooterComponent,\r\n  SignUpFormComponent,\r\n  SignUpPageComponent,\r\n  UnauthorizedLayoutComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: components,\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    DragDropModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ConfigurationModule,\r\n    RouterModule.forChild([\r\n      {path: 'signIn', component: SignInPageComponent},\r\n      {path: 'signUp', component: SignUpPageComponent}\r\n    ])\r\n  ],\r\n  exports: components\r\n})\r\nexport class TechfabricModule {\r\n  \r\n } \r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ExpanderComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "SignInFormComponent"
                        },
                        {
                            "name": "SignInPageComponent"
                        },
                        {
                            "name": "SignUpFormComponent"
                        },
                        {
                            "name": "SignUpPageComponent"
                        },
                        {
                            "name": "SliderComponent"
                        },
                        {
                            "name": "UnauthorizedLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ConfigurationModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ExpanderComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "SignInFormComponent"
                        },
                        {
                            "name": "SignInPageComponent"
                        },
                        {
                            "name": "SignUpFormComponent"
                        },
                        {
                            "name": "SignUpPageComponent"
                        },
                        {
                            "name": "SliderComponent"
                        },
                        {
                            "name": "UnauthorizedLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "azureAdFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'azureAd'"
            },
            {
                "name": "azureAdReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(AzureAdActions.setConfig, (state, config) => ({\r\n        ...state,\r\n        clientId: config.clientId,\r\n        instanceId: config.instanceId,\r\n        tenantId: config.tenantId,\r\n        redirectUri: config.redirectUri\r\n    }))\r\n)"
            },
            {
                "name": "ButtonInEverySection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "ButtonInPreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        \r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "ButtonInTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        test\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "ButtonInTitleAndPreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/core.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  ButtonComponent,\r\n  CardComponent,\r\n  CheckboxComponent,\r\n  ExpanderComponent,\r\n  SliderComponent,\r\n  NavbarComponent,\r\n  SignInFormComponent,\r\n  SignInPageComponent,\r\n  InputComponent,\r\n  FooterComponent,\r\n  SignUpFormComponent,\r\n  SignUpPageComponent,\r\n  UnauthorizedLayoutComponent\r\n]"
            },
            {
                "name": "configurationFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tf-configuration'"
            },
            {
                "name": "configurationReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(ConfigurationActions.setConfiguration, (state, config) => ({\r\n        ...state,\r\n        ...config\r\n    }))\r\n)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ButtonComponent, CheckboxComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignUpFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                    </div>\r\n                    <div preview>\r\n                        test\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n\r\n    },\r\n    template: ` <tf-footer>\r\n                </tf-footer>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-navbar [logoUrl]=\"logoUrl\" [displayName]=\"displayName\">\r\n                </tf-navbar>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-signInForm [logoUrl]=\"logoUrl\">\r\n                </tf-signInForm>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-signUpForm [logoUrl]=\"logoUrl\">\r\n                </tf-signUpForm>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\r\n                </tf-unauthorizedLayout>`,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-signInPage [logoUrl]=\"logoUrl\">\r\n                </tf-signInPage>`,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-signUpPage [logoUrl]=\"logoUrl\">\r\n                </tf-signUpPage>`,\r\n})"
            },
            {
                "name": "DefaultBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n  },\r\n  template: ` <tf-button>\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultNoContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "DefaultNoFooter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "DefaultNoHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "DefaultNoWell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "DefaultPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Primary\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultWithTopBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"true\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DisabledGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DisabledPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Basic,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "IDENTITY_SERVICE_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<string>('IDENTITY_SERVICE_URL')"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IConfiguration",
                "defaultValue": "{\r\n    logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IAzureAdConfiguration",
                "defaultValue": "{\r\n    clientId: null,\r\n    instanceId: null,\r\n    tenantId: null,\r\n    redirectUri: null\r\n}"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signInForm>`\r\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signUpForm>`\r\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signInPage [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signInPage>`,\r\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signUpPage>`,\r\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signInForm>`\r\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signUpForm>`\r\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signInPage [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n              </tf-signInPage>`,\r\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n              </tf-signUpPage>`,\r\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SelectableWithBanner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n        isSelectable: true,\r\n        isSelected: true,\r\n        hasPrimaryBanner: true\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview [isSelectable]=\"isSelectable\" [(isSelected)]=\"isSelected\" [hasPrimaryBanner]=\"hasPrimaryBanner\">\r\n                    <div header>\r\n                    </div>\r\n                    <div preview>\r\n                        Preview Text\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "selectAzureAdConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AzureAdState>(azureAdFeatureKey)"
            },
            {
                "name": "selectConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IConfiguration>(azureAdFeatureKey)"
            },
            {
                "name": "setConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[AzureAd] setConfig',\r\n    props<IAzureAdConfiguration>()\r\n)"
            },
            {
                "name": "setConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Configuration] setConfiguration',\r\n    props<IConfiguration>()\r\n)"
            },
            {
                "name": "signInLegacy",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[SignIn Page] SignIn',\r\n    props<{ username: string, password: string}>()\r\n)"
            },
            {
                "name": "signInWithAd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[SignIn Page] SignInWithMicrosoft'\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpanderComponent>",
                "defaultValue": "(args: ExpanderComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FooterComponent>",
                "defaultValue": "(args: FooterComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NavbarComponent>",
                "defaultValue": "(args: NavbarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignInFormComponent>",
                "defaultValue": "(args: SignInFormComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignUpFormComponent>",
                "defaultValue": "(args: SignUpFormComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SliderComponent>",
                "defaultValue": "(args: SliderComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UnauthorizedLayoutComponent>",
                "defaultValue": "(args: UnauthorizedLayoutComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignInPageComponent>",
                "defaultValue": "(args: SignInPageComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignUpPageComponent>",
                "defaultValue": "(args: SignUpPageComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [
            {
                "name": "msalConfigFactory",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "azureAdConfigService",
                        "type": "AzureAdConfigurationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "azureAdConfigService",
                        "type": "AzureAdConfigurationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ButtonType",
                "childs": [
                    {
                        "name": "Basic",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Ghost",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Primary",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/core/src/lib/components/button/button.models.ts"
            }
        ],
        "groupedVariables": {
            "projects/core/src/lib/store/azureAd/azureAd.reducers.ts": [
                {
                    "name": "azureAdFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'azureAd'"
                },
                {
                    "name": "azureAdReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(AzureAdActions.setConfig, (state, config) => ({\r\n        ...state,\r\n        clientId: config.clientId,\r\n        instanceId: config.instanceId,\r\n        tenantId: config.tenantId,\r\n        redirectUri: config.redirectUri\r\n    }))\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAzureAdConfiguration",
                    "defaultValue": "{\r\n    clientId: null,\r\n    instanceId: null,\r\n    tenantId: null,\r\n    redirectUri: null\r\n}"
                }
            ],
            "projects/core/src/lib/components/expander/expander.stories.ts": [
                {
                    "name": "ButtonInEverySection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "ButtonInPreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        \r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "ButtonInTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        test\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "ButtonInTitleAndPreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ButtonComponent, CheckboxComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                    </div>\r\n                    <div preview>\r\n                        test\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "SelectableWithBanner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n        isSelectable: true,\r\n        isSelected: true,\r\n        hasPrimaryBanner: true\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview [isSelectable]=\"isSelectable\" [(isSelected)]=\"isSelected\" [hasPrimaryBanner]=\"hasPrimaryBanner\">\r\n                    <div header>\r\n                    </div>\r\n                    <div preview>\r\n                        Preview Text\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpanderComponent>",
                    "defaultValue": "(args: ExpanderComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/core.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/core.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  ButtonComponent,\r\n  CardComponent,\r\n  CheckboxComponent,\r\n  ExpanderComponent,\r\n  SliderComponent,\r\n  NavbarComponent,\r\n  SignInFormComponent,\r\n  SignInPageComponent,\r\n  InputComponent,\r\n  FooterComponent,\r\n  SignUpFormComponent,\r\n  SignUpPageComponent,\r\n  UnauthorizedLayoutComponent\r\n]"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.reducers.ts": [
                {
                    "name": "configurationFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tf-configuration'"
                },
                {
                    "name": "configurationReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(ConfigurationActions.setConfiguration, (state, config) => ({\r\n        ...state,\r\n        ...config\r\n    }))\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IConfiguration",
                    "defaultValue": "{\r\n    logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/core/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/core/src/lib/components/button/button.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "DefaultBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n  },\r\n  template: ` <tf-button>\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DefaultGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DefaultPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Primary\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Basic,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/card/card.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultNoContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultNoFooter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultNoHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultNoWell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultWithTopBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"true\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/footer/footer.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n\r\n    },\r\n    template: ` <tf-footer>\r\n                </tf-footer>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FooterComponent>",
                    "defaultValue": "(args: FooterComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/navbar/navbar.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-navbar [logoUrl]=\"logoUrl\" [displayName]=\"displayName\">\r\n                </tf-navbar>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NavbarComponent>",
                    "defaultValue": "(args: NavbarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/signInForm/signInForm.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-signInForm [logoUrl]=\"logoUrl\">\r\n                </tf-signInForm>`\r\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signInForm>`\r\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signInForm>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignInFormComponent>",
                    "defaultValue": "(args: SignInFormComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-signUpForm [logoUrl]=\"logoUrl\">\r\n                </tf-signUpForm>`\r\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signUpForm>`\r\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signUpForm>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignUpFormComponent>",
                    "defaultValue": "(args: SignUpFormComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\r\n                </tf-unauthorizedLayout>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UnauthorizedLayoutComponent>",
                    "defaultValue": "(args: UnauthorizedLayoutComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/pages/signInPage/signInPage.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-signInPage [logoUrl]=\"logoUrl\">\r\n                </tf-signInPage>`,\r\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signInPage [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signInPage>`,\r\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signInPage [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n              </tf-signInPage>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignInPageComponent>",
                    "defaultValue": "(args: SignInPageComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignUpFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-signUpPage [logoUrl]=\"logoUrl\">\r\n                </tf-signUpPage>`,\r\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signUpPage>`,\r\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n              </tf-signUpPage>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignUpPageComponent>",
                    "defaultValue": "(args: SignUpPageComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/input/input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/slider/slider.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SliderComponent>",
                    "defaultValue": "(args: SliderComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.module.ts": [
                {
                    "name": "IDENTITY_SERVICE_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<string>('IDENTITY_SERVICE_URL')"
                },
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.selectors.ts": [
                {
                    "name": "selectAzureAdConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AzureAdState>(azureAdFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.selectors.ts": [
                {
                    "name": "selectConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IConfiguration>(azureAdFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.actions.ts": [
                {
                    "name": "setConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[AzureAd] setConfig',\r\n    props<IAzureAdConfiguration>()\r\n)"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.actions.ts": [
                {
                    "name": "setConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Configuration] setConfiguration',\r\n    props<IConfiguration>()\r\n)"
                }
            ],
            "projects/core/src/lib/store/signIn/signInPage.action.ts": [
                {
                    "name": "signInLegacy",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[SignIn Page] SignIn',\r\n    props<{ username: string, password: string}>()\r\n)"
                },
                {
                    "name": "signInWithAd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[SignIn Page] SignInWithMicrosoft'\r\n)"
                }
            ]
        },
        "groupedFunctions": {
            "projects/core/src/lib/store/azureAd/azureAd.module.ts": [
                {
                    "name": "msalConfigFactory",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "azureAdConfigService",
                            "type": "AzureAdConfigurationService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "azureAdConfigService",
                            "type": "AzureAdConfigurationService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "projects/core/src/lib/components/button/button.models.ts": [
                {
                    "name": "ButtonType",
                    "childs": [
                        {
                            "name": "Basic",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Ghost",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Primary",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/core/src/lib/components/button/button.models.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/core/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoFooter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoWell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultWithTopBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpanderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInEverySection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInPreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInTitleAndPreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectableWithBanner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/core.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/core.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/core.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CoreService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnauthorizedLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAzureAdConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "msalConfigFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IDENTITY_SERVICE_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azureAdFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azureAdReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAzureAdConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AzureAdState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAdConfigurationService.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AzureAdConfigurationService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configurationFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configurationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ConfigurationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInLegacy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInWithAd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "signInPageState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}