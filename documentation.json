{
    "pipes": [],
    "interfaces": [
        {
            "name": "AdConfig",
            "id": "interface-AdConfig-fc5f38526fcfc03c6c64e030480a6db75d1e72f09e55c3e01edf6aea65d724c23fbb6a00dce577b322a496dd8d22a730ad5e055a99e247cebd1084ce4a7dfb3e",
            "file": "projects/msal/src/lib/msal.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from \"@angular/core\";\n\nexport interface AdConfigWrapper {\n    azureAd: AdConfig\n}\nexport interface AdConfig {\n    redirectUrl: string,\n    clientId: string,\n    tenantId: string\n}\n\n\nexport const MSAL_CONFIG_TOKEN = new InjectionToken<AdConfig>('TF_MSAL_CONFIG');\n\n// export const MSAL_CONFIG = {\n//     redirectUrl: env.azureAd.redirectUrl,\n//     clientId: env.azureAd.clientId,\n//     tenantId: env.azureAd.tenantId\n// }\n\n// export const MsalConfigProvider = [\n//     {\n//         provide: MSAL_CONFIG_TOKEN,\n//         useValue: MSAL_CONFIG\n//     }\n// ];",
            "properties": [
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "redirectUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "tenantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AdConfigWrapper",
            "id": "interface-AdConfigWrapper-fc5f38526fcfc03c6c64e030480a6db75d1e72f09e55c3e01edf6aea65d724c23fbb6a00dce577b322a496dd8d22a730ad5e055a99e247cebd1084ce4a7dfb3e",
            "file": "projects/msal/src/lib/msal.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from \"@angular/core\";\n\nexport interface AdConfigWrapper {\n    azureAd: AdConfig\n}\nexport interface AdConfig {\n    redirectUrl: string,\n    clientId: string,\n    tenantId: string\n}\n\n\nexport const MSAL_CONFIG_TOKEN = new InjectionToken<AdConfig>('TF_MSAL_CONFIG');\n\n// export const MSAL_CONFIG = {\n//     redirectUrl: env.azureAd.redirectUrl,\n//     clientId: env.azureAd.clientId,\n//     tenantId: env.azureAd.tenantId\n// }\n\n// export const MsalConfigProvider = [\n//     {\n//         provide: MSAL_CONFIG_TOKEN,\n//         useValue: MSAL_CONFIG\n//     }\n// ];",
            "properties": [
                {
                    "name": "azureAd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdConfig",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AzureAdState",
            "id": "interface-AzureAdState-286753d70e84862fa4668bab98437b2fd8b02ced347327168982924c21f059212e1653e132383e6c9fd1f356534cbc6afb6cea752d49f256e4585f21a9c62c76",
            "file": "projects/core/src/lib/store/azureAd/azureAd.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IAzureAdConfiguration } from \"./azureAd.models\";\n\nexport interface AzureAdState extends IAzureAdConfiguration {\n\n}",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "IAzureAdConfiguration"
        },
        {
            "name": "ConfigurationState",
            "id": "interface-ConfigurationState-947efa4a30ce6e85c883f61df270616565c587a8e96fe2c2178611fe3e6aefc66053c5719c852f22a2040f0d5b8c0605441f348f8898baa24557ad327ec6b66a",
            "file": "projects/core/src/lib/store/configuration/configuration.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IConfiguration } from \"./configuration.models\";\n\nexport interface ConfigurationState  extends IConfiguration{\n\n}",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "IConfiguration"
        },
        {
            "name": "IAzureAdConfiguration",
            "id": "interface-IAzureAdConfiguration-db4f9f7fff61d7c5d788f7269ff412cc7f6c5ac8428e04c2918a95715dcaf6ecbbfc8b1042348429917789dc27888dfd7ac5b842fc574563dbb2bdabd5d1f251",
            "file": "projects/core/src/lib/store/azureAd/azureAd.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IAzureAdConfiguration {\n    clientId: string | null;\n    instanceId: string | null;\n    tenantId: string | null;\n    redirectUri: string | null;\n}",
            "properties": [
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "instanceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "redirectUri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "tenantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IConfiguration",
            "id": "interface-IConfiguration-fe34aa9343db9adf759a3fbf2601e82a2792d64b195b5f0025ab3a29804bcc63559128adac6356bdbb01af163006c061e3424ba8a41bfb3ca38577b5f2277756",
            "file": "projects/core/src/lib/store/configuration/configuration.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IConfiguration {\n    logoUrl: string | null;\n}",
            "properties": [
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MsalState",
            "id": "interface-MsalState-cd180b46e429b78fc5f87de7be32f35e3df2fce611c677e7e76863cea745592130ef13a3d3dbecdd7e5c02a8f4c819d082a148a9cec259bd9ba9ac5afc27355b",
            "file": "projects/msal/src/lib/store/msal.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AccountInfo, AuthenticationResult } from \"@azure/msal-browser\";\n\nexport interface MsalState {\n    authResult: AuthenticationResult | null;\n    error: string | null;\n    loading: boolean;\n    loaded: boolean;\n}",
            "properties": [
                {
                    "name": "authResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationResult | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SignInPageState",
            "id": "interface-SignInPageState-9a793f404229c152d618edaf5083aa432d3cf34ada3812d12fc62111e9439b72b6ba30b6801d14405899396462546223fc27d99f1552fa1151c7b130c6198e84",
            "file": "projects/core/src/lib/store/signIn/signInPage.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SignInPageState {\n    showLegacySignIn: boolean;\n    showMicrosoftSignIn: boolean;\n    username: string;\n    password: string;\n}",
            "properties": [
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "showLegacySignIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "showMicrosoftSignIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AzureAdConfigurationService",
            "id": "injectable-AzureAdConfigurationService-af9907a5ab592a6bb786c983c3453ca63dcc3679c1649bd96559b9d795864568a3888a797ec2395855b74173e38b3102f4b367d96adedec273d6a4d98d704624",
            "file": "projects/core/src/lib/store/azureAd/azureAdConfigurationService.ts",
            "properties": [
                {
                    "name": "azureAdConfig",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAzureAdConfiguration | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "http",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient | null",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { IAzureAdConfiguration } from \"./azureAd.models\";\nimport { map } from \"rxjs\";\n\n@Injectable({ providedIn: 'root'})\nexport class AzureAdConfigurationService {\n    azureAdConfig: IAzureAdConfiguration | null = null;\n    private http: HttpClient | null = null;\n\n    constructor(private readonly httpHandler: HttpBackend){\n        this.http = new HttpClient(httpHandler);\n    }\n\n    init(endpoint: string): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.http?.get(endpoint).pipe(map(res => res))\n            .subscribe(value => {\n                this.azureAdConfig = <IAzureAdConfiguration>value;\n                resolve(true);\n            },\n            (error) => {\n                reject(error);\n            })\n        });\n    }\n\n\n\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AzureAdEffects",
            "id": "injectable-AzureAdEffects-a02f21da44a602aab4c2c0aaba68e9a658ab19cf7b48256dc3b97e3db7e9602ff02bd486f5b1940de71ad540d97767b4c1091b8d7af39723635f584eb7d7c3b0",
            "file": "projects/core/src/lib/store/azureAd/azureAd.effects.ts",
            "properties": [
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "loadMovies$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n        ofType(SIGN_IN),\n        mergeMap(() => this.msalService.signIn()\n          .pipe(\n            map(movies => signInSuccess({})),\n            catchError(() => EMPTY)\n          ))\n        )\n      )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { EMPTY } from 'rxjs';\nimport {map, mergeMap, catchError} from 'rxjs/operators';\nimport { signInSuccess, SIGN_IN } from './azureAd.actions';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MsalServiceCustom {\n    constructor(private http: HttpClient, private authService: MsalService){\n\n    }\n    signIn() {\n        console.log('triggered')\n        this.authService.loginRedirect();\n        return this.http.get('');\n    }\n}\n\n@Injectable()\nexport class AzureAdEffects {\n    http: HttpClient;\n\n    constructor(\n        private actions$: Actions,\n        private readonly httpHandler: HttpBackend,\n        private authService: MsalService,\n        private msalService: MsalServiceCustom\n    ){\n        this.http = new HttpClient(httpHandler);\n    }\n    loadMovies$ = createEffect(() => this.actions$.pipe(\n        ofType(SIGN_IN),\n        mergeMap(() => this.msalService.signIn()\n          .pipe(\n            map(movies => signInSuccess({})),\n            catchError(() => EMPTY)\n          ))\n        )\n      );\n\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msalService",
                        "type": "MsalServiceCustom",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msalService",
                        "type": "MsalServiceCustom",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CoreService",
            "id": "injectable-CoreService-21d9dc0c3922ce03e3fe568273bb433aa5e1bae6e5bad113c29d58f012ad7e8897bfeb424c5a96a7852035482844e803c43bcf1727e5c7bd3f086fc374c56002",
            "file": "projects/core/src/lib/core.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "MsalAuthService",
            "id": "injectable-MsalAuthService-59e0802b51baf45bb59cfd6b322dd29f6f30464042e4a637b159f09f67809b8047dfc1a0bf30e6adc737e623b19bcacafa05c6932bf6fe6d4aa8abc829ab80e0",
            "file": "projects/msal/src/lib/msalAuth.service.ts",
            "properties": [
                {
                    "name": "userAgentApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PublicClientApplication",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "acquireTokenPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "acquireTokenSilent",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loginPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loginRedirect",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logoutPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logoutRedirect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\nimport { MSAL_CONFIG_TOKEN } from './msal.config';\nimport { AuthenticationResult, PublicClientApplication } from '@azure/msal-browser';\nimport { from } from 'rxjs';\nimport { MsalNgrxModule } from './msal.module';\nimport { loginSuccessful } from '../public-api';\nimport { Store } from '@ngrx/store';\n\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MsalAuthService {\n  private userAgentApplication: PublicClientApplication;\n\n  constructor(\n    @Inject(MSAL_CONFIG_TOKEN) private msalConfig: any, private store: Store\n  ) {\n    this.userAgentApplication = new PublicClientApplication({\n      auth: {\n        clientId: this.msalConfig.clientId,\n        authority: `https://login.microsoftonline.com/${this.msalConfig.tenantId}`,\n        redirectUri: this.msalConfig.redirectUri\n      },\n      cache: {\n        cacheLocation: 'localStorage',\n        storeAuthStateInCookie: isIE\n      }\n    })\n    this.userAgentApplication.handleRedirectPromise().then( (authResult) => {\n      let result = <AuthenticationResult>authResult;\n      this.store.dispatch(loginSuccessful({authResult: result}));\n    })\n  }\n\n\n  logoutRedirect() {\n    this.userAgentApplication.logoutRedirect()\n  }\n\n  logoutPopup(){\n    this.userAgentApplication.logoutPopup();\n  }\n\n  loginPopup(){\n    return from (\n      this.userAgentApplication.loginPopup()\n    );\n  }\n\n  loginRedirect(){\n    return from(\n      this.userAgentApplication.loginRedirect()\n    );\n  }\n\n  acquireTokenSilent() {\n    return from(\n      this.userAgentApplication.acquireTokenSilent(\n        this.msalConfig.consentScopes\n      )\n    );\n  }\n\n  acquireTokenPopup(){\n    return from(\n      this.userAgentApplication.acquireTokenPopup(this.msalConfig.consentScopes)\n    );\n  }\n\n  get user(){\n    return this.userAgentApplication.getActiveAccount();\n  }\n\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "msalConfig",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "msalConfig",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "user": {
                    "name": "user",
                    "getSignature": {
                        "name": "user",
                        "type": "",
                        "returnType": "",
                        "line": 72
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "MsalEffects",
            "id": "injectable-MsalEffects-dad92507ebec42d7bf73e98164a4c479dae66a717689bb48b16195eb2cdb5d0b820532759b0cee5edfa14ee9a2d55f83e905434e9649cb86e5f610e5ca74a1e6",
            "file": "projects/msal/src/lib/store/msal.effects.ts",
            "properties": [
                {
                    "name": "msalLoginPopup$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n        ofType(MsalActions.loginPopup.type),\n        switchMap(() => \n            this.msalAuthService.loginPopup().pipe(\n                map(\n                    (authResult) => {\n                        return MsalActions.loginSuccessful({ authResult })\n                    }\n                ),\n                catchError(error => {\n                    return of(MsalActions.loginFail({ error }))\n                })\n            )\n        )\n    ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "msalLoginRedirect$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n        ofType(MsalActions.loginRedirect),\n        switchMap(() => this.msalAuthService.loginRedirect())\n        )\n    , {dispatch: false})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { MsalService } from \"@azure/msal-angular\";\nimport { AccountInfo, AuthenticationResult } from \"@azure/msal-browser\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\nimport { MsalAuthService } from \"../msalAuth.service\";\n\nimport * as MsalActions from './msal.actions';\n\n@Injectable()\nexport class MsalEffects {\n    \n    constructor(\n        private actions$: Actions,\n        private msalAuthService: MsalAuthService){\n    }\n\n    msalLoginPopup$ = createEffect(() => this.actions$.pipe(\n        ofType(MsalActions.loginPopup.type),\n        switchMap(() => \n            this.msalAuthService.loginPopup().pipe(\n                map(\n                    (authResult) => {\n                        return MsalActions.loginSuccessful({ authResult })\n                    }\n                ),\n                catchError(error => {\n                    return of(MsalActions.loginFail({ error }))\n                })\n            )\n        )\n    ));\n\n    msalLoginRedirect$ = createEffect(() => this.actions$.pipe(\n        ofType(MsalActions.loginRedirect),\n        switchMap(() => this.msalAuthService.loginRedirect())\n        )\n    , {dispatch: false});\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msalAuthService",
                        "type": "MsalAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msalAuthService",
                        "type": "MsalAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MsalServiceCustom",
            "id": "injectable-MsalServiceCustom-a02f21da44a602aab4c2c0aaba68e9a658ab19cf7b48256dc3b97e3db7e9602ff02bd486f5b1940de71ad540d97767b4c1091b8d7af39723635f584eb7d7c3b0",
            "file": "projects/core/src/lib/store/azureAd/azureAd.effects.ts",
            "properties": [],
            "methods": [
                {
                    "name": "signIn",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { EMPTY } from 'rxjs';\nimport {map, mergeMap, catchError} from 'rxjs/operators';\nimport { signInSuccess, SIGN_IN } from './azureAd.actions';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MsalServiceCustom {\n    constructor(private http: HttpClient, private authService: MsalService){\n\n    }\n    signIn() {\n        console.log('triggered')\n        this.authService.loginRedirect();\n        return this.http.get('');\n    }\n}\n\n@Injectable()\nexport class AzureAdEffects {\n    http: HttpClient;\n\n    constructor(\n        private actions$: Actions,\n        private readonly httpHandler: HttpBackend,\n        private authService: MsalService,\n        private msalService: MsalServiceCustom\n    ){\n        this.http = new HttpClient(httpHandler);\n    }\n    loadMovies$ = createEffect(() => this.actions$.pipe(\n        ofType(SIGN_IN),\n        mergeMap(() => this.msalService.signIn()\n          .pipe(\n            map(movies => signInSuccess({})),\n            catchError(() => EMPTY)\n          ))\n        )\n      );\n\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MsalTransformService",
            "id": "injectable-MsalTransformService-7dbb96620da62f3ce4fd29016f74ac08add62df02d29e1faccdd287e1df730dc608ba49ea58f862cb660746cc68cd4b97ee8db5b5eecc7609a5203d18a52bb43",
            "file": "projects/core/src/lib/store/azureAd/msalTransformService.ts",
            "properties": [
                {
                    "name": "azureAdConfig",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAzureAdConfiguration | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "http",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient | null",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { IAzureAdConfiguration } from \"./azureAd.models\";\nimport { filter, map } from \"rxjs\";\nimport { MsalBroadcastService } from \"@azure/msal-angular\";\nimport { EventMessage } from \"@azure/msal-browser\";\n\n@Injectable({ providedIn: 'root'})\nexport class MsalTransformService {\n    azureAdConfig: IAzureAdConfiguration | null = null;\n    private http: HttpClient | null = null;\n\n    constructor(private backgroundService: MsalBroadcastService){\n        console.log('called transform service')\n    }\n\n    init(){\n        console.log('called transform service')\n    }\n\n\n\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "backgroundService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "backgroundService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TechfabricAngularControlsService",
            "id": "injectable-TechfabricAngularControlsService-47cb5496b86a4527719dff5564412d81703bd6bf29a91a49b488ae055e3eed2ca8c3d3289124dd8b4a79ae650ac0afb70d3fe8a6ccacadfa6f97dd1b2f052095",
            "file": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechfabricAngularControlsService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-72bf169edc3b2f7e2986299ca61c675e09f73b52b32365a4f9ac5e618c8e94592a2caffaae6e243ed0224479a331ba2f01af4853820096f3f1b40fce45163933",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'techfabric-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "signIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'techfabric-angular';\n  constructor(){}\n\n  signIn(){\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-35f88e3953aa59fa5268a84838bb913461dd3e02ef85508a5459a7edc2281c11f0265c2e5a216509d2eeca12ce3a5f748b3377aec5de621fd7bfe32949dc5844",
            "file": "projects/core/src/lib/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "ButtonType.Basic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ButtonType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ButtonType } from './button.models'; \n\n@Component({\n  selector: 'tf-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() type: ButtonType = ButtonType.Basic;\n  @Input() text: string = '';\n  @Input() disabled: boolean = false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get buttonClassName(): string {\n    switch(this.type){\n      case ButtonType.Basic: return 'basic';\n      case ButtonType.Ghost: return 'ghost';\n      case ButtonType.Primary: return 'primary';\n      default: return 'basic';\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host {\n    display: inline-block;\n    button {\n        padding: 10px 14px;\n        border-radius: 6px;\n        box-sizing: content-box;\n        font-weight: 500;\n        cursor: pointer;\n        &.basic {\n            background-color: transparent;\n            border: 1px solid $grey;\n            color: $primary;\n            font-style: medium;\n        }\n        &.primary {\n            background-color: $primary;\n            color: $white;\n            border: none;\n        }\n        &.ghost {\n            background-color: $white;\n            color: $primary;\n            border: none;\n            font-weight: 500;\n        }\n\n        &[disabled] {\n            cursor: not-allowed;\n        }\n    }\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "buttonClassName": {
                    "name": "buttonClassName",
                    "getSignature": {
                        "name": "buttonClassName",
                        "type": "string",
                        "returnType": "string",
                        "line": 18
                    }
                }
            },
            "templateData": "<button class=\"{{buttonClassName}}\" [disabled]=\"disabled\">\n  <ng-content></ng-content>\n</button>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-bcc51e78c5568bc6de24b482ff623afc900e31ad4e7dae248c267ec9abb27e9b254558e66571dcf3adaeca8ac027b388cd82b0fe78c2c20e1d9fc3addb640e6a",
            "file": "projects/core/src/lib/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasTopBar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'content'"
                        }
                    ]
                },
                {
                    "name": "footer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'footer'"
                        }
                    ]
                },
                {
                    "name": "header",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'header'"
                        }
                    ]
                },
                {
                    "name": "well",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'well'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "doesElementHaveContent",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldDisplayContent",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayFooter",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayHeader",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayWell",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewChecked, AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent {\n  @Input() hasTopBar: boolean = false;\n\n  @ViewChild('header') header: any = null;\n  @ViewChild('well') well: any = null;\n  @ViewChild('content') content: any = null;\n  @ViewChild('footer') footer: any = null;\n  constructor() { }\n\n  shouldDisplayHeader(): boolean {\n    return this.doesElementHaveContent(this.header);\n  }\n  shouldDisplayWell(): boolean {\n    return this.doesElementHaveContent(this.well);\n  }\n  shouldDisplayContent(): boolean {\n    return this.doesElementHaveContent(this.content);\n  }\n  shouldDisplayFooter(): boolean {\n    return this.doesElementHaveContent(this.footer);\n  }\n\n  private doesElementHaveContent(element: any): boolean{\n    try{\n      return element.nativeElement.children.length > 0 || element.nativeElement.innerText != \"\";\n    }\n    catch(ex){\n      return false;\n    }\n  }\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n:host{\n    display: block;\n    border-radius: 8px;\n    overflow-y: hidden;\n    box-shadow: $box-shadow;\n    section {\n        padding: 20px;\n\n        &.bar {\n            height: 12px;\n            padding: 0px;\n            background-color: $primary;\n        }\n\n        &.header {\n\n        }\n\n        &.well {\n            border-top: 1px solid $grey-light;\n            background-color: $grey-light;\n        }\n\n        &.content {\n            border-top: 1px solid $grey-light;\n        }\n\n        &.footer {\n            border-top: 1px solid $grey-light;\n        }\n    }\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "templateData": "<section class=\"bar\" *ngIf=\"hasTopBar\"></section>\n<section #header class=\"header\" [style.display]=\"shouldDisplayHeader() ? 'block': 'none'\">\n  <ng-content select=\"[header]\"></ng-content>\n</section>\n<section #well class=\"well\" [style.display]=\"shouldDisplayWell() ? 'block': 'none'\">\n  <ng-content select=\"[well]\"></ng-content>\n</section>\n<section #content class=\"content\" [style.display]=\"shouldDisplayContent() ? 'block': 'none'\">\n  <ng-content select=\"[content]\"></ng-content>\n</section>\n<section #footer class=\"footer\" [style.display]=\"shouldDisplayFooter() ? 'block': 'none'\">\n  <ng-content select=\"[footer]\"></ng-content>\n</section>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-14c336db3113257b752a1a46df6d0c7ed7da6d82dc7a0595d5c14d0d430eb0b53f2dd7986d01151eab155da3122c98aab729100a25e502ca077207c483385c45",
            "file": "projects/core/src/lib/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "16",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "icon",
                    "defaultValue": "faCheck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'tf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n  @Input() size: number = 16;\n  @Input() value: boolean = false;\n  @Output() valueChange = new EventEmitter<boolean>();\n  @Input() disabled: boolean = false;\n  icon = faCheck;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggle(){\n    if(!this.disabled){\n      this.value = !this.value;\n      this.valueChange.emit(this.value);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host{\n    display:inline-block;\n    box-sizing: border-box;\n    div {\n        border-radius: 2px;\n\n        line-height: 1px;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        color: $white;\n        border: 1px solid $grey;\n        box-sizing: border-box;\n        &.checked{\n            background-color: $primary;\n            border: 1px solid $primary;\n            &:hover{\n                background-color: $primary;\n            }\n\n            fa-icon{\n                opacity: 1;\n            }\n            &.disabled {\n                background-color: $primary;\n            }\n        }\n\n        fa-icon {\n            display: inline-block;\n            opacity: 0;\n        }\n        &:hover{\n            background-color: $grey-light;\n            cursor: pointer;\n        }\n        &:active{\n            background-color: $primary-lighter;\n        }\n\n        &.disabled{\n            background-color: $grey-light;\n            &:hover{\n                cursor: not-allowed;\n            }\n        }\n    }\n}",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngStyle]=\"{'height.px': size, 'width.px': size}\" [ngClass]=\"{'checked': value, 'disabled': disabled}\" (click)=\"toggle()\">\n  <fa-icon [icon]=\"icon\" [ngStyle]=\"{'font-size.px': size}\"></fa-icon>\n</div>"
        },
        {
            "name": "CoreComponent",
            "id": "component-CoreComponent-e94fe7c8eb76a869ad779a91ab3fc57c3f5341cd3eee2f009e4607ed354bf5e08cdd3e088c4cf0cfa2c607d32990ac3a193ad662593a7ad17507351f3b69056a",
            "file": "projects/core/src/lib/core.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-core",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  core works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-core',\n  template: `\n    <p>\n      core works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class CoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ExpanderComponent",
            "id": "component-ExpanderComponent-24790373e5f15de0d0baf2907ed30cf8a728e65a605a7d81aa1f0f16df9243a2542d010c22abe00899841a74a1e780a0c23b85a3480fbadbee4faaa22036a1bd",
            "file": "projects/core/src/lib/components/expander/expander.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-expander",
            "styleUrls": [
                "./expander.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expander.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayPreview",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasPrimaryBanner",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "headerText",
                    "defaultValue": "'Header'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelectable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isSelectedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "content"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getContentMaxHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { faMinus, faPlus} from '@fortawesome/free-solid-svg-icons'\n\n@Component({\n  selector: 'tf-expander',\n  templateUrl: './expander.component.html',\n  styleUrls: ['./expander.component.scss']\n})\nexport class ExpanderComponent implements OnInit {\n  @Input() isOpen: boolean = true;\n  @Input() headerText: string = 'Header';\n  @Input() displayPreview: boolean = false;\n  @Input() hasPrimaryBanner: boolean = false;\n  @Input() isSelectable: boolean = false;\n  @Input() isSelected: boolean = false;\n  @Output() isSelectedChange = new EventEmitter<boolean>();\n\n  @ViewChild(`content`) contentElement : any = null;\n  constructor() { \n  }\n\n  ngOnInit() {\n  }\n\n  get expandedIcon(): any {\n    return this.isOpen ? faMinus : faPlus;\n  }\n  \n\n  toggle(){\n    this.isOpen = !this.isOpen;\n    if(this.isSelectable){\n      this.isSelected = this.isOpen;\n    }\n  }\n  \n  getContentMaxHeight(){\n    let maxHeight = 0;\n    try{\n      let children  = [...this.contentElement?.nativeElement.children];\n      for(let elem of children){\n        maxHeight += elem.clientHeight;\n      }\n    }\n    catch(ex){\n\n    }\n    return maxHeight;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host{\n    display: block;\n    border-radius: 8px;\n    box-shadow: 0px 3px 10px rgba(0,0,0,0.16) !important;\n    overflow: hidden;\n\n    .hidden {\n        display: none;\n    }\n\n    section {\n        display: block;\n    }\n\n    content {\n        display: inline-block;\n    }\n\n    .primaryBanner {\n        display: block;\n        height: 8px;\n        background-color: $primary;\n    }\n\n    .header {\n        #iconWrapper {\n            display: inline-block;\n            background-color: $primary;\n            padding: 24px 14px;\n            cursor: pointer;\n            fa-icon{\n                color: white;\n            }\n\n            \n        }\n        #title {\n            padding-left: 22px;\n            padding-right: 46px; \n            display: inline-block;\n            font-size: 24px;\n            color: $secondary-light;\n            font-weight: 500;\n        }\n        #headerContent {\n            display: inline-block;\n        }\n\n\n        &.selectable {\n            #iconWrapper {\n                background-color: $white;\n            }   \n            #title {\n                padding-left: 12px;\n            }\n        }\n    }\n\n    .preview {\n        padding: 20px;\n        background-color: $grey-light;\n    }\n    .content {\n        transition: padding linear .3s, height linear .3s;\n        padding: 0px 20px 0px 20px;\n        &.open{\n            padding: 20px 20px 20px 20px;\n        }\n    }\n}",
                    "styleUrl": "./expander.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "expandedIcon": {
                    "name": "expandedIcon",
                    "getSignature": {
                        "name": "expandedIcon",
                        "type": "any",
                        "returnType": "any",
                        "line": 26
                    }
                }
            },
            "templateData": "<section class=\"primaryBanner\" *ngIf=\"hasPrimaryBanner\">\n\n</section>\n<section class=\"header\" [ngClass]=\"{'selectable': isSelectable}\">\n  <div id=\"iconWrapper\" (click)=\"toggle()\" >\n    <tf-checkbox \n      *ngIf=\"isSelectable\" \n      [size]=\"24\" \n      [(value)]=\"isSelected\">\n    </tf-checkbox>\n    <fa-icon \n      [icon]=\"expandedIcon\" \n      *ngIf=\"!isSelectable\">\n    </fa-icon>\n  </div>\n  <div id=\"title\">\n    {{headerText}}\n  </div>\n  <div id=\"headerContent\">\n    <ng-content select=\"[header]\">\n\n    </ng-content>\n  </div>\n</section>\n<section class=\"preview\" [ngClass]=\"{'hidden': !displayPreview}\">\n  <ng-content select=\"[preview]\">\n\n  </ng-content>\n</section>\n<section class=\"content\" \n  #content \n  [ngStyle]=\"{'height.px': isOpen ? getContentMaxHeight() : 0}\" \n  [ngClass]=\"{'open': isOpen}\">\n  <ng-content select=\"[content]\">\n  </ng-content>\n</section>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-1c5d6b2a95133169fb4c27dae55562a8c09ea04842f274260dd5f68db9f1b004efedfb564274f3bfc4942723019b63d1cf2e211d11224956b8a36bf5f644ed71",
            "file": "projects/core/src/lib/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tf-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n:host {\n    display: block;\n    height: 60px;\n    background-color: $grey-darker;\n}",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-8f15acd317b13663d9f6b7bae77911af46b6f5f9a75af2cbf578dd02c4c1c6cc1040d8aa2a225544911b2b45611cb707a0abbd150b5cf9dfefce3f21eedff282",
            "file": "projects/core/src/lib/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string | number | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<string | number | null>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n\nimport { FormsModule } from '@angular/forms';\n@Component({\n  selector: 'tf-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent implements OnInit {\n  @Input() label: string = '';\n  @Input() value: string | number | null = null;\n  @Output() valueChange: EventEmitter<string | number | null> = new EventEmitter<string | number | null>();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host {\n    display: block;\n    position: relative;\n    input {\n        width: 100%;\n        border: 1px solid $grey;\n        border-radius: 4px;\n        line-height: 30px;\n        font-size: 16px;\n        padding: 10px 12px;\n        transition: border-color linear .3s;\n\n        &:hover {\n            border-color: $grey-darker;\n        }\n\n        &:active, &:focus-visible{\n            border-color: $primary;\n            outline: none;\n            &::placeholder{\n                visibility: hidden;\n            }\n            + label {\n                visibility: visible;\n                color: $primary;\n                top: -12px;\n            }\n        }\n    }\n    label {\n        transition: color linear .3s, top linear .3s;\n        //visibility: hidden;\n        position: absolute;\n        left: 8px;\n        top: 12px;\n        pointer-events: none;\n\n        \n        background-color: $white;\n        display: block;\n        padding: 0px 4px;\n        color: $grey;\n\n        &.hasValue {\n            visibility: visible;\n            top: -12px;\n        }\n    }\n    \n}",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n    <input type=\"text\"  [(ngModel)]=\"value\"/>\n    <label [ngClass]=\"{'hasValue': value !== null && value !== ''}\">{{label}}</label>"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-0c7d5b7a33ce6d0bff9259696e46a1066273536ce9e9c4be6f3abec8fcb4ba969ab6d3e250916f1269d670c7ee93ad526a5d9e1967151a4cbba2e7627c4720f7",
            "file": "projects/core/src/lib/components/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hamburgerIcon",
                    "defaultValue": "faBars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'tf-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  @Input() logoUrl: string = '';\n  @Input() displayName: string = '';\n  hamburgerIcon: any = faBars;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n:host{\n    display: flex;\n    align-items: center;;\n    width: 100%;\n    box-shadow: $box-shadow;\n\n    .hamburgerWrapper {\n        padding: 10px 10px 10px 20px;\n        cursor: pointer;\n    }\n    .logo {\n        padding: 20px 10px;\n        img {\n            height: 32px;\n        }\n    }\n    .profile {\n        padding: 20px;\n        margin-left: auto;\n    }\n}",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"hamburgerWrapper d-sm-none\">\n  <fa-icon [icon]=\"hamburgerIcon\"></fa-icon>\n</div>\n<div class=\"logo\">\n  <img  [src]=\"logoUrl\" />\n</div>\n<div class=\"profile\">\n  {{displayName}}\n</div>"
        },
        {
            "name": "SignInFormComponent",
            "id": "component-SignInFormComponent-9d78633b5a77c8dad69dcb94c8edd3f4203826e89910cfc6c8eff051e23de468bc1c442f927925f394d7f58e06458167cb77cd5ba8509830ce76deaf209e1050",
            "file": "projects/core/src/lib/components/signInForm/signInForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signInForm",
            "styleUrls": [
                "./signInForm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signInForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBackButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickSignIn",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onClickSignInWithMicrosoft",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "microsoftIcon",
                    "defaultValue": "faMicrosoft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons';\n\n@Component({\n  selector: 'tf-signInForm',\n  templateUrl: './signInForm.component.html',\n  styleUrls: ['./signInForm.component.scss']\n})\nexport class SignInFormComponent implements OnInit {\n  @Input() logoUrl: string = '';\n  @Input() showLegacyLogin: boolean = true;\n  @Input() showMicrosoftLogin: boolean = false;\n  @Input() showBackButton: boolean = true;\n\n\n  @Output() onClickSignIn: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onClickSignInWithMicrosoft: EventEmitter<void> = new EventEmitter<void>();\n  \n\n  microsoftIcon: any = faMicrosoft;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host {\n    .logoContainer {\n        display: flex;\n        text-align: center;\n        justify-content: center;\n        width: 100%;\n        img {\n            width: 60%;\n            margin: 20px 0px;\n        }\n    }\n    .customSignIn > * {\n        margin-top: 16px;\n    }\n\n    .buttonContainer {\n        display: flex;\n        justify-content: flex-end;\n        align-items: flex-end;\n        align-content: flex-end;\n        tf-button {\n            margin-left: 16px;\n        }\n    }\n\n    .ssoIntegrationWrapper {\n        display: flex;\n        justify-content: center;\n    }\n    \n\n    .orDividerContainer {\n        position: relative;\n        margin: 20px 0px;\n        text-align: center;\n        .orDivider {\n            height: 1px;\n            background-color: $grey;;\n        }\n        .or {\n            background-color: $white;\n            padding: 0px 10px;\n            position: absolute;\n            top: -13px;\n            left: calc(50% - 50px)\n        }\n    }\n}",
                    "styleUrl": "./signInForm.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"logoContainer\" *ngIf=\"logoUrl !== ''\">\n  <img [src]=\"logoUrl\" />\n</div>\n<div class=\"customSignIn\" *ngIf=\"showLegacyLogin\">\n  <tf-input label=\"Username\"></tf-input>\n  <tf-input label=\"Password\"></tf-input>\n  <div class=\"buttonContainer\">\n    <tf-button [type]=\"1\" *ngIf=\"showBackButton\">Back</tf-button>\n    <tf-button [type]=\"2\">Sign In</tf-button>\n  </div>\n  \n</div>\n\n<div class=\"orDividerContainer\" *ngIf=\"showMicrosoftLogin\">\n  <div class=\"orDivider\"></div>\n  <div class=\"or\">Sign In With</div>\n</div>\n\n<div class=\"ssoIntegrationWrapper\">\n  <div *ngIf=\"showMicrosoftLogin\">\n    <tf-button (click)=\"onClickSignInWithMicrosoft.emit()\"><fa-icon [icon]=\"microsoftIcon\" style=\"color: #00a2ed\"></fa-icon> Microsoft</tf-button>\n  </div>\n</div>\n"
        },
        {
            "name": "SignInPageComponent",
            "id": "component-SignInPageComponent-3bae7b47c44d7c437e17b12a766cf3e04711282098f3728fa1a867c21f2b6a7dd667f8cad4708db1b3e317112dbfa16a360e8758c7a29c7cb35fbec52b9e47d7",
            "file": "projects/core/src/lib/pages/signInPage/signInPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signInPage",
            "styleUrls": [
                "./signInPage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signInPage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showLegacySignIn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftSignIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickSignInWithMicrosoft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { select, Store } from '@ngrx/store';\nimport { loginPopup, loginRedirect } from 'projects/msal/src/public-api';\nimport { SIGN_IN } from '../../store/azureAd/azureAd.actions';\n\nimport { selectLogoUrl } from '../../store/configuration/configuration.selectors';\nimport { signInWithAd } from '../../store/signIn/signInPage.actions';\nimport { selectSignInPageConfiguration } from '../../store/signIn/signInPage.selectors';\n\n@Component({\n  selector: 'tf-signInPage',\n  templateUrl: './signInPage.component.html',\n  styleUrls: ['./signInPage.component.scss']\n})\nexport class SignInPageComponent implements OnInit {\n  @Input() logoUrl: string = '';\n  @Input() showLegacySignIn: boolean = true;\n  @Input() showMicrosoftSignIn: boolean = false;\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.store.select(selectLogoUrl).subscribe(o => {\n      this.logoUrl = <string>o;\n    });\n    this.store.select(selectSignInPageConfiguration).subscribe(o => {\n      this.showLegacySignIn = o.showLegacySignIn;\n      this.showMicrosoftSignIn = o.showMicrosoftSignIn;\n    });\n  }\n\n\n  onClickSignInWithMicrosoft(): void {\n    console.log('login')\n    this.store.dispatch(loginRedirect());\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-content: space-between;\n    tf-signInForm{\n        justify-self: center;\n        align-self: center;\n    }\n}",
                    "styleUrl": "./signInPage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\n    <tf-signInForm [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftSignIn\" [showLegacyLogin]=\"showLegacySignIn\" (onClickSignInWithMicrosoft)=\"onClickSignInWithMicrosoft()\">\n\n    </tf-signInForm>\n</tf-unauthorizedLayout>"
        },
        {
            "name": "SignUpFormComponent",
            "id": "component-SignUpFormComponent-eac7c7e6984b06f17d6211edc511ad68e432453bea5de112becb40deb56b638a2028cc76bccfea26a7e44f6bc4832e289fb22e56d87740915e02220db8975e7d",
            "file": "projects/core/src/lib/components/signUpForm/signUpForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signUpForm",
            "styleUrls": [
                "./signUpForm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signUpForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBackButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "microsoftIcon",
                    "defaultValue": "faMicrosoft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons';\n\n@Component({\n  selector: 'tf-signUpForm',\n  templateUrl: './signUpForm.component.html',\n  styleUrls: ['./signUpForm.component.scss']\n})\nexport class SignUpFormComponent implements OnInit {\n  @Input() logoUrl: string = '';\n  @Input() showLegacyLogin: boolean = true;\n  @Input() showMicrosoftLogin: boolean = false;\n  @Input() showBackButton: boolean = true;\n\n  microsoftIcon: any = faMicrosoft;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host {\n    .logoContainer {\n        display: flex;\n        text-align: center;\n        justify-content: center;\n        width: 100%;\n        img {\n            width: 60%;\n            margin: 20px 0px;\n        }\n    }\n    .customSignIn > * {\n        margin-top: 16px;\n    }\n\n    .buttonContainer {\n        display: flex;\n        justify-content: flex-end;\n        align-items: flex-end;\n        align-content: flex-end;\n        tf-button {\n            margin-left: 16px;\n        }\n    }\n\n    .ssoIntegrationWrapper {\n        display: flex;\n        justify-content: center;\n    }\n    \n\n    .orDividerContainer {\n        position: relative;\n        margin: 20px 0px;\n        text-align: center;\n        .orDivider {\n            height: 1px;\n            background-color: $grey;;\n        }\n        .or {\n            background-color: $white;\n            padding: 0px 10px;\n            position: absolute;\n            top: -13px;\n            left: calc(50% - 50px)\n        }\n    }\n}",
                    "styleUrl": "./signUpForm.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"logoContainer\" *ngIf=\"logoUrl !== ''\">\n  <img [src]=\"logoUrl\" />\n</div>\n<div class=\"customSignIn\" *ngIf=\"showLegacyLogin\">\n  <tf-input label=\"Username\"></tf-input>\n  <tf-input label=\"Password\"></tf-input>\n  <tf-input label=\"Confirm Password\"></tf-input>\n  <div class=\"buttonContainer\">\n    <tf-button [type]=\"1\" *ngIf=\"showBackButton\">Back</tf-button>\n    <tf-button [type]=\"2\">Sign Up</tf-button>\n  </div>\n  \n</div>\n\n<div class=\"orDividerContainer\" *ngIf=\"showMicrosoftLogin\">\n  <div class=\"orDivider\"></div>\n  <div class=\"or\">Sign Up With</div>\n</div>\n\n<div class=\"ssoIntegrationWrapper\">\n  <div *ngIf=\"showMicrosoftLogin\">\n    <tf-button><fa-icon [icon]=\"microsoftIcon\" style=\"color: #00a2ed\"></fa-icon> Microsoft</tf-button>\n  </div>\n</div>\n"
        },
        {
            "name": "SignUpPageComponent",
            "id": "component-SignUpPageComponent-9fc38c7707b4fa463bf3f1f4e0d27952dd47842c9b543bebc0ca00b8edfd5dd846b6f794e1dff8ae999fc93a2f04160a8e558e474750f630db49ae59ac05bc46",
            "file": "projects/core/src/lib/pages/signUpPage/signUpPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signUpPage",
            "styleUrls": [
                "./signUpPage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signUpPage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tf-signUpPage',\n  templateUrl: './signUpPage.component.html',\n  styleUrls: ['./signUpPage.component.scss']\n})\nexport class SignUpPageComponent implements OnInit {\n  @Input() logoUrl: string = '';\n  @Input() showLegacyLogin: boolean = true;\n  @Input() showMicrosoftLogin: boolean = false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-content: space-between;\n    tf-signUpForm{\n        justify-self: center;\n        align-self: center;\n    }\n}",
                    "styleUrl": "./signUpPage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\n  <tf-signUpForm [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\n\n  </tf-signUpForm>\n</tf-unauthorizedLayout>"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-d418be3b087b3065870a2ba2b623fb82c12f87008c66b0373088d9277f16715e197bf3dc820e2e51f74f993a1cd51365e562c24a4745941dd2f334c42eb0ea96",
            "file": "projects/core/src/lib/components/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-slider",
            "styleUrls": [
                "./slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "maxValue",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "percentageValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backgroundElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'background'"
                        }
                    ]
                },
                {
                    "name": "circleElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'circle'"
                        }
                    ]
                },
                {
                    "name": "isDragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "position",
                    "defaultValue": "'test'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "onDragMoved",
                    "args": [
                        {
                            "name": "$event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { CdkDragStart, CdkDragEnd, CdkDragMove } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'tf-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent {\n  @Input() value: number = 0;\n  @Input() percentageValue: number = 0;\n  @Input() maxValue: number = 100;\n  constructor() { }\n\n  @ViewChild('background') backgroundElement: any;\n  @ViewChild('circle') circleElement: any;\n\n  private isDragging: boolean = false;\n  position: string = 'test';\n\n  onDragMoved($event: CdkDragMove){\n    this.percentageValue = ($event.pointerPosition.x - this.backgroundElementPosition.x) / (this.backgroundElementWidth) * 100;\n  }\n\n  get backgroundElementPosition(){\n    return {x: this.backgroundElement.nativeElement.offsetLeft, y: this.backgroundElement.nativeElement.offsetTop};\n  }\n\n  get backgroundElementWidth(){\n    return this.backgroundElement.nativeElement.offsetWidth;\n  }\n\n  get mousePosition(){\n    return {x: (<any>window)?.event?.clientX, y: (<any>window)?.event?.clientY};\n  }\n\n  get circlePosition(){\n    return {x: this.circleElement.nativeElement.offsetLeft, y: this.circleElement.nativeElement.offsetTop};\n  }\n\n  get circleRelativePosition(){\n    try{\n      let transform = this.circleElement.nativeElement.style.transform.replace('translate3d(', '').replace(')').replace('px', '');\n      let transformValues = transform.split(',');\n      return {x: parseInt(transformValues[0]), y: parseInt(transformValues[1])};\n    }\n    catch(ex) {\n      return {x: 0, y: 0};\n    }\n    \n    \n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host {\n    display: block;\n    height: 32px;\n    .background {\n        position: relative;\n        left: 0px;\n        right: 0px;\n        background-color: $grey;\n        height: 8px;\n        top: 12px;\n        border-radius: 8px;\n    }\n    .highlightBackground {\n        position: relative;\n        left: 0px;\n        background-color: $primary;\n        height: 8px;\n        top: 4px;\n        border-radius: 8px;\n    }\n    .circle {\n        position: absolute;\n        background-color: black;\n        box-shadow: $box-shadow;\n        width: 12px;\n        height: 12px;\n        border: 10px solid $white;\n        top: 16px;\n        border-radius: 80px;\n        cursor: pointer;\n    }\n}",
                    "styleUrl": "./slider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "accessors": {
                "backgroundElementPosition": {
                    "name": "backgroundElementPosition",
                    "getSignature": {
                        "name": "backgroundElementPosition",
                        "type": "",
                        "returnType": "",
                        "line": 25
                    }
                },
                "backgroundElementWidth": {
                    "name": "backgroundElementWidth",
                    "getSignature": {
                        "name": "backgroundElementWidth",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                },
                "mousePosition": {
                    "name": "mousePosition",
                    "getSignature": {
                        "name": "mousePosition",
                        "type": "",
                        "returnType": "",
                        "line": 33
                    }
                },
                "circlePosition": {
                    "name": "circlePosition",
                    "getSignature": {
                        "name": "circlePosition",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                },
                "circleRelativePosition": {
                    "name": "circleRelativePosition",
                    "getSignature": {
                        "name": "circleRelativePosition",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                }
            },
            "templateData": "<div class=\"sliderContainer\">\n  <div class=\"background\" #background></div>\n  <div class=\"highlightBackground\" \n    [style.width.%]=\"percentageValue\">\n  </div>\n  <div class=\"circle\" #circle \n    cdkDrag\n    cdkDragLockAxis=\"x\"\n    cdkDragBoundary=\".sliderContainer\" \n    (cdkDragMoved)=\"onDragMoved($event)\">\n  </div>\n</div>"
        },
        {
            "name": "TechfabricAngularControlsComponent",
            "id": "component-TechfabricAngularControlsComponent-fb5a8708420f93640ecc81741c02c240c23db55c3c32899c3d222466073f40223d6c618977825aa24515b4e3bbdf7e49ed5a0ac8e5ef801efcc7628085969536",
            "file": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-techfabricAngularControls",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  techfabric-angular-controls works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-techfabricAngularControls',\n  template: `\n    <p>\n      techfabric-angular-controls works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class TechfabricAngularControlsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "TfButtonComponent",
            "id": "component-TfButtonComponent-c7026a60d0de25a7506b24a3e8bb3ba8d95bca6fdb6e330fed18d5dbd7cc929ad04f923430a923b6cc9576201004ce46538af8aba3c3cd2c0df102fe65732486",
            "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-button",
            "styleUrls": [
                "./tf-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tf-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "ButtonType.Basic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ButtonType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ButtonType } from './tf-button.models';\n\n@Component({\n  selector: 'tf-button',\n  templateUrl: './tf-button.component.html',\n  styleUrls: ['./tf-button.component.scss']\n})\nexport class TfButtonComponent implements OnInit {\n  @Input() type: ButtonType = ButtonType.Basic;\n  @Input() text: string = '';\n  @Input() disabled: boolean = false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get buttonClassName(): string {\n    switch(this.type){\n      case ButtonType.Basic: return 'basic';\n      case ButtonType.Ghost: return 'ghost';\n      case ButtonType.Primary: return 'primary';\n      default: return 'basic';\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host {\n    display: inline-block;\n    button {\n        padding: 10px 14px;\n        border-radius: 6px;\n        box-sizing: content-box;\n        font-weight: 500;\n        cursor: pointer;\n        &.basic {\n            background-color: transparent;\n            border: 1px solid $grey;\n            color: $primary;\n            font-style: medium;\n        }\n        &.primary {\n            background-color: $primary;\n            color: $white;\n            border: none;\n        }\n        &.ghost {\n            background-color: $white;\n            color: $primary;\n            border: none;\n            font-weight: 500;\n        }\n\n        &[disabled] {\n            cursor: not-allowed;\n        }\n    }\n}",
                    "styleUrl": "./tf-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "buttonClassName": {
                    "name": "buttonClassName",
                    "getSignature": {
                        "name": "buttonClassName",
                        "type": "string",
                        "returnType": "string",
                        "line": 18
                    }
                }
            },
            "templateData": "<button class=\"{{buttonClassName}}\" [disabled]=\"disabled\">\n  <ng-content></ng-content>\n</button>"
        },
        {
            "name": "TfInputComponent",
            "id": "component-TfInputComponent-53087ceee68b68b32feb0eee7698ca41a26aad64c9c377e6aa5274c92ac3c6cfb0b862a08181a4ca078b5ef7942a589e3594e9de0cfd1669b1cff96e5ff55f34",
            "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-input",
            "styleUrls": [
                "./tf-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tf-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string | number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string | number | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<string | number | null>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'tf-input',\n  templateUrl: './tf-input.component.html',\n  styleUrls: ['./tf-input.component.scss']\n})\nexport class TfInputComponent implements OnInit {\n  @Input() label: string = '';\n  @Input() value: string | number | null = null;\n  @Output() valueChange: EventEmitter<string | number | null> = new EventEmitter<string | number | null>();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\n\n:host {\n    display: block;\n    position: relative;\n    input {\n        width: 100%;\n        border: 1px solid $grey;\n        border-radius: 4px;\n        line-height: 30px;\n        font-size: 16px;\n        padding: 10px 12px;\n        transition: border-color linear .3s;\n\n        &:hover {\n            border-color: $grey-darker;\n        }\n\n        &:active, &:focus-visible{\n            border-color: $primary;\n            outline: none;\n            &::placeholder{\n                visibility: hidden;\n            }\n            + label {\n                visibility: visible;\n                color: $primary;\n                top: -12px;\n            }\n        }\n    }\n    label {\n        transition: color linear .3s, top linear .3s;\n        //visibility: hidden;\n        position: absolute;\n        left: 8px;\n        top: 12px;\n        pointer-events: none;\n\n        \n        background-color: $white;\n        display: block;\n        padding: 0px 4px;\n        color: $grey;\n\n        &.hasValue {\n            visibility: visible;\n            top: -12px;\n        }\n    }\n    \n}",
                    "styleUrl": "./tf-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n    <input type=\"text\"  [(ngModel)]=\"value\"/>\n    <label [ngClass]=\"{'hasValue': value !== null && value !== ''}\">{{label}}</label>"
        },
        {
            "name": "UnauthorizedLayoutComponent",
            "id": "component-UnauthorizedLayoutComponent-9aab08b2639bbf68276e4410653a924a3e4198eabfdb0b43faf0bff80577b95b6f56d139d8f17bc19e412d16326609f73b4a66fffa084efcc01bfb6fee78f80b",
            "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-unauthorizedLayout",
            "styleUrls": [
                "./unauthorizedLayout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./unauthorizedLayout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tf-unauthorizedLayout',\n  templateUrl: './unauthorizedLayout.component.html',\n  styleUrls: ['./unauthorizedLayout.component.scss']\n})\nexport class UnauthorizedLayoutComponent implements OnInit {\n  @Input() logoUrl: string = '';\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}",
                    "styleUrl": "./unauthorizedLayout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<tf-navbar [logoUrl]=\"logoUrl\"></tf-navbar>\n<ng-content></ng-content>\n<tf-footer></tf-footer>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-33ee7fd337b8a66a9ab31b6e10f9b42cf4d8f66b910213faf367fb012655bb67f1f37fc5d4ed90727f56875d3aa039fc027ac3bebd86b7ca95307f2d0ac0e629",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TechfabricModule } from '../../projects/core/src/lib/core.module';\nimport { StoreModule } from '@ngrx/store';\nimport { AzureAdModule } from '../../projects/core/src/lib/store/azureAd/azureAd.module';\nimport { MsalModule } from '@azure/msal-angular';\nimport { InteractionType, PublicClientApplication } from '@azure/msal-browser';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MsalNgrxModule } from 'projects/msal/src/lib/msal.module';\n// import { MsalAuthService } from 'projects/msal/src/lib/msalAuth.service';\nimport { AdConfigWrapper, MSAL_CONFIG_TOKEN } from 'projects/msal/src/lib/msal.config';\n\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\n\nimport { environment } from 'src/environments/environment';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nlet adConfigWrapper = <AdConfigWrapper><unknown>environment;\n\nconsole.log(adConfigWrapper)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    HttpClientModule,\n    StoreModule.forRoot({}),\n    RouterModule.forRoot([]),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({maxAge: 25, logOnly: environment.production}),\n    TechfabricModule,\n    // AzureAdModule.forRoot(\"https://localhost:7073/Configuration/AzureAdConfiguration\"),\n  ],\n  providers: [\n    {\n      provide: MSAL_CONFIG_TOKEN,\n      useValue: {\n        clientId: adConfigWrapper.azureAd.clientId,\n        tenantId: adConfigWrapper.azureAd.tenantId,\n        redirectUri: adConfigWrapper.azureAd.redirectUrl\n      }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "TechfabricModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AzureAdModule",
            "id": "module-AzureAdModule-e8144338fe3454d1c094b18f47b65d293eb4e38958680e49a5b3a9479d7c2c99792a35bdbdf8ee8b64a0e6600640a9bc7384194c1a61e3d7598094bfece85184",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [
                        {
                            "name": "identityServiceUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ ngModule: typeof AzureAdModule; providers: {}; }",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "identityServiceUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { NgModule, InjectionToken, APP_INITIALIZER } from \"@angular/core\";\nimport { StoreModule } from '@ngrx/store';\nimport { azureAdFeatureKey, azureAdReducer } from \"./azureAd.reducers\";\nimport { MsalModule, MSAL_INSTANCE, MSAL_BROADCAST_CONFIG, MSAL_GUARD_CONFIG, MSAL_INTERCEPTOR_CONFIG, MsalService } from \"@azure/msal-angular\";\nimport { AzureAdConfigurationService } from \"./azureAdConfigurationService\";\nimport { Configuration, InteractionType, PublicClientApplication } from \"@azure/msal-browser\";\nimport { AzureAdEffects, MsalServiceCustom } from \"./azureAd.effects\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { MsalNgrxModule } from \"projects/msal/src/lib/msal.module\";\n\n\n\nconst IDENTITY_SERVICE_URL = new InjectionToken<string>('IDENTITY_SERVICE_URL');\n\n\nexport function msalConfigFactory(azureAdConfigService: AzureAdConfigurationService) : any{\n\n}\n\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\n\n@NgModule({\n    providers: [\n        MsalServiceCustom,\n    ],\n    imports: [  \n        StoreModule.forFeature(azureAdFeatureKey, azureAdReducer),\n        EffectsModule.forFeature([AzureAdEffects]),\n    ]\n})\nexport class AzureAdModule {\n    static forRoot(identityServiceUrl: string){\n        return {\n            ngModule: AzureAdModule,\n            providers: [\n                AzureAdConfigurationService,\n                { provide: IDENTITY_SERVICE_URL, useValue: identityServiceUrl},\n                { provide: APP_INITIALIZER, useFactory: (azureAdConfigService: AzureAdConfigurationService) => azureAdConfigService.init(identityServiceUrl), deps: [AzureAdConfigurationService, IDENTITY_SERVICE_URL]},\n                {\n                    provide: MSAL_INSTANCE,\n                    useValue: new PublicClientApplication({\n                        auth: {\n                          clientId: 'fdc8b9bc-0bd2-4fae-b7b3-7d05b7596de0',\n                          authority: 'https://login.microsoftonline.com/a4aa9f35-9917-4518-b764-5fbbb893a6cd',\n                          redirectUri: 'http://localhost:4200'\n                        },\n                        cache: {\n                          cacheLocation: 'localStorage',\n                          storeAuthStateInCookie: isIE\n                        }\n                      })\n                },\n                {\n                    provide: MSAL_GUARD_CONFIG,\n                    useValue: {\n                        interactionType: InteractionType.Redirect, \n                        authRequest: {\n                          scopes: ['user.read']\n                        }\n                      }\n                },\n                {\n                    provide: MSAL_INTERCEPTOR_CONFIG,\n                    useValue: {\n                        interactionType: InteractionType.Redirect,\n                        protectedResourceMap: new Map([\n                          ['Enter_the_graph_endpoint_Here/v1.0/me', ['user.read']]\n                        ])\n                      }\n                },\n                MsalService\n            ],\n        }\n    }\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "MsalServiceCustom"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ConfigurationModule",
            "id": "module-ConfigurationModule-eba589835c67a929065717dddc97004a8c828abf487e520acad2384f203be573e3e15c5ad670111ce56c423a7b87e19a65257b9a50742fdd58b40f49a977a73d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/store/configuration/configuration.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [],
                    "optional": false,
                    "returnType": "{ ngModule: typeof ConfigurationModule; providers: {}; }",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { StoreModule } from '@ngrx/store';\nimport { configurationFeatureKey, configurationReducer } from \"./configuration.reducers\";\n\n@NgModule({\n    providers: [],\n    imports: [\n        StoreModule.forFeature(configurationFeatureKey, configurationReducer)\n    ]\n})\nexport class ConfigurationModule {\n    static forRoot(){\n        return {\n            ngModule: ConfigurationModule,\n            providers: [\n            ]\n        }\n    }\n    \n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MsalNgrxModule",
            "id": "module-MsalNgrxModule-21e3616055f3de9b2e8765c8db07c94be2de4c48cf3d7250dd2d21e90b5e99c7b9301222d6aa47d20f9c1cd79908d809ea9fe1877f0735d25350660ce48b9061",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/msal/src/lib/msal.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n// import { MsalAuthService } from './msalAuth.service';\nimport { MSAL_CONFIG_TOKEN } from './msal.config';\nimport { MsalEffects } from './store/msal.effects';\nimport { msalConfigurationFeatureKey, msalReducer } from './store/msal.reducers';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    StoreModule.forFeature(msalConfigurationFeatureKey, msalReducer),\n    EffectsModule.forFeature([MsalEffects])\n  ],\n  providers: [\n    // MsalAuthService\n  ],\n  exports: [\n  ]\n})\nexport class MsalNgrxModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SignInPageModule",
            "id": "module-SignInPageModule-fd7068291fbe9c89211a85fd737d302409bc2349ce17ccd898ff1a55e6f6abc2bb66863ffad96326f06e8909199305f0cb063cd85c44fd1e011cad2b8213243e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/store/signIn/signInPageModule.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { signInPageFeatureKey, signInPageReducer } from \"./signInPage.reducers\";\n\n@NgModule({\n    providers: [],\n    imports: [\n        StoreModule.forFeature(signInPageFeatureKey, signInPageReducer)\n    ]\n})\nexport class SignInPageModule {\n    \n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TechfabricAngularControlsModule",
            "id": "module-TechfabricAngularControlsModule-5209ac96565d1843d00513b290aec963fcf20ed3c479d9efb1215a64c72686ca69f6b2a0ac67a844c680e2ca3cf7510caaa50f5c4d3920d8438012eaf669b830",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TechfabricAngularControlsComponent } from './techfabric-angular-controls.component';\n\n\n\n@NgModule({\n  declarations: [\n    TechfabricAngularControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TechfabricAngularControlsComponent\n  ]\n})\nexport class TechfabricAngularControlsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TechfabricAngularControlsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TechfabricAngularControlsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TechfabricModule",
            "id": "module-TechfabricModule-af35be77e8988d6170031a993bc6895f8138e9f5715652c1ee3258c80f5e1d8291e2b90409cb367649748dd74c1fff08530b8d3ecd8e519d5fbe274bfa0ac72a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/core.module.ts",
            "methods": [],
            "sourceCode": "import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MsalNgrxModule } from 'projects/msal/src/lib/msal.module';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CardComponent } from './components/card/card.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ExpanderComponent } from './components/expander/expander.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { InputComponent } from './components/input/input.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SignInFormComponent } from './components/signInForm/signInForm.component';\nimport { SignUpFormComponent } from './components/signUpForm/signUpForm.component';\nimport { SliderComponent } from './components/slider/slider.component';\nimport { UnauthorizedLayoutComponent } from './layouts/unauthorizedLayout/unauthorizedLayout.component';\nimport { SignInPageComponent } from './pages/signInPage/signInPage.component';\nimport { SignUpPageComponent } from './pages/signUpPage/signUpPage.component';\nimport { ConfigurationModule } from './store/configuration/configuration.module';\nimport { SignInPageModule } from './store/signIn/signInPageModule';\n\n\n\n\nlet components = [\n  ButtonComponent,\n  CardComponent,\n  CheckboxComponent,\n  ExpanderComponent,\n  SliderComponent,\n  NavbarComponent,\n  SignInFormComponent,\n  SignInPageComponent,\n  InputComponent,\n  FooterComponent,\n  SignUpFormComponent,\n  SignUpPageComponent,\n  UnauthorizedLayoutComponent\n];\n\n@NgModule({\n  declarations: components,\n  imports: [\n    CommonModule,\n    BrowserModule,\n    DragDropModule,\n    FontAwesomeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfigurationModule,\n    SignInPageModule,\n    RouterModule.forChild([\n      {path: 'signIn', component: SignInPageComponent},\n      {path: 'signUp', component: SignUpPageComponent}\n    ]),\n    MsalNgrxModule\n  ],\n  exports: components\n})\nexport class TechfabricModule {\n  \n } \n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ExpanderComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "SignInFormComponent"
                        },
                        {
                            "name": "SignInPageComponent"
                        },
                        {
                            "name": "SignUpFormComponent"
                        },
                        {
                            "name": "SignUpPageComponent"
                        },
                        {
                            "name": "SliderComponent"
                        },
                        {
                            "name": "UnauthorizedLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ConfigurationModule"
                        },
                        {
                            "name": "MsalNgrxModule"
                        },
                        {
                            "name": "SignInPageModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ExpanderComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "SignInFormComponent"
                        },
                        {
                            "name": "SignInPageComponent"
                        },
                        {
                            "name": "SignUpFormComponent"
                        },
                        {
                            "name": "SignUpPageComponent"
                        },
                        {
                            "name": "SliderComponent"
                        },
                        {
                            "name": "UnauthorizedLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "acquireTokenPopup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Popup`)"
            },
            {
                "name": "acquireTokenSilent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Silent`)"
            },
            {
                "name": "ACTION_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[TF-MSAL]'"
            },
            {
                "name": "adConfigWrapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<AdConfigWrapper><unknown>environment"
            },
            {
                "name": "azureAdFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'azureAd'"
            },
            {
                "name": "azureAdReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n    initialState,\n    on(AzureAdActions.setConfig, (state, config) => ({\n        ...state,\n        clientId: config.clientId,\n        instanceId: config.instanceId,\n        tenantId: config.tenantId,\n        redirectUri: config.redirectUri\n    }))\n)"
            },
            {
                "name": "ButtonInEverySection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: true,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                        <tf-button></tf-button>\n                    </div>\n                    <div preview>\n                        <tf-button></tf-button>\n                    </div>\n                    <div content>\n                        <tf-button></tf-button>\n                    </div>\n                </tf-expander>`\n})"
            },
            {
                "name": "ButtonInPreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: true,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                        \n                    </div>\n                    <div preview>\n                        <tf-button></tf-button>\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
            },
            {
                "name": "ButtonInTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                        <tf-button></tf-button>\n                    </div>\n                    <div preview>\n                        test\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
            },
            {
                "name": "ButtonInTitleAndPreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: true,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                        <tf-button></tf-button>\n                    </div>\n                    <div preview>\n                        <tf-button></tf-button>\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/core.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  ButtonComponent,\n  CardComponent,\n  CheckboxComponent,\n  ExpanderComponent,\n  SliderComponent,\n  NavbarComponent,\n  SignInFormComponent,\n  SignInPageComponent,\n  InputComponent,\n  FooterComponent,\n  SignUpFormComponent,\n  SignUpPageComponent,\n  UnauthorizedLayoutComponent\n]"
            },
            {
                "name": "configurationFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfConfiguration'"
            },
            {
                "name": "configurationReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n    initialState,\n    on(ConfigurationActions.setConfiguration, (state, config) => ({\n        ...state,\n        ...config\n    }))\n)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ButtonComponent, CheckboxComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignUpFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div header>\n                        Header\n                    </div>\n                    <div well>\n                        Well\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                    </div>\n                    <div preview>\n                        test\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n\n    },\n    template: ` <tf-footer>\n                </tf-footer>`\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        displayName: 'Tyler H.',\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` <tf-navbar [logoUrl]=\"logoUrl\" [displayName]=\"displayName\">\n                </tf-navbar>`\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` <tf-signInForm [logoUrl]=\"logoUrl\">\n                </tf-signInForm>`\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` <tf-signUpForm [logoUrl]=\"logoUrl\">\n                </tf-signUpForm>`\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        displayName: 'Tyler H.',\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` \n                <tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\n                </tf-unauthorizedLayout>`,\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations,\n    },\n    props: {\n        displayName: 'Tyler H.',\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` \n                <tf-signInPage >\n                </tf-signInPage>`,\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        displayName: 'Tyler H.',\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` \n                <tf-signUpPage [logoUrl]=\"logoUrl\">\n                </tf-signUpPage>`,\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n  },\n  template: ` <tf-button>\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DefaultBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n  },\n  template: ` <tf-button>\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DefaultGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Ghost\n  },\n  template: ` <tf-button [type]=\"type\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DefaultGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Ghost\n  },\n  template: ` <tf-button [type]=\"type\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DefaultNoContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div header>\n                        Header\n                    </div>\n                    <div well>\n                        Well\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
            },
            {
                "name": "DefaultNoFooter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div header>\n                        Header\n                    </div>\n                    <div well>\n                        Well\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                </app-card>`\n})"
            },
            {
                "name": "DefaultNoHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div well>\n                        Well\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
            },
            {
                "name": "DefaultNoWell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div header>\n                        Header\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
            },
            {
                "name": "DefaultPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Primary\n  },\n  template: ` <tf-button [type]=\"type\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DefaultPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Primary\n  },\n  template: ` <tf-button [type]=\"type\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DefaultWithTopBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"true\">\n                    <div header>\n                        Header\n                    </div>\n                    <div well>\n                        Well\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    disabled: true\n  },\n  template: ` <tf-button [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DisabledBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    disabled: true\n  },\n  template: ` <tf-button [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DisabledGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Ghost,\n    disabled: true\n  },\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DisabledGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Ghost,\n    disabled: true\n  },\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DisabledPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Basic,\n    disabled: true\n  },\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "DisabledPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Basic,\n    disabled: true\n  },\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  azureAd: {\n    clientId: 'fdc8b9bc-0bd2-4fae-b7b3-7d05b7596de0',\n    tenantId: 'a4aa9f35-9917-4518-b764-5fbbb893a6cd',\n    redirectUri: 'http://localhost:4200/signIn'\n  }\n}"
            },
            {
                "name": "getAuthResult",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n    selectMsalState,\n    (state: MsalState) => state.authResult\n)"
            },
            {
                "name": "getError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n    selectMsalState,\n    (state: MsalState) => state.error\n)"
            },
            {
                "name": "IDENTITY_SERVICE_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<string>('IDENTITY_SERVICE_URL')"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MsalState",
                "defaultValue": "{\n    authResult: null,\n    error: null,\n    loading: false,\n    loaded: false\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IAzureAdConfiguration",
                "defaultValue": "{\n    clientId: null,\n    instanceId: null,\n    tenantId: null,\n    redirectUri: null\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SignInPageState",
                "defaultValue": "{\n    showLegacySignIn: true,\n    showMicrosoftSignIn: true,\n    username: '',\n    password: ''\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IConfiguration",
                "defaultValue": "{\n    logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{}"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/msalAuth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      showLegacyLogin: true,\n      showMicrosoftLogin: true,\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n  },\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\n              </tf-signInForm>`\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      showLegacyLogin: true,\n      showMicrosoftLogin: true,\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n  },\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\n              </tf-signUpForm>`\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations,\n      providers: [\n        provideMockStore({initialState: LegacyAndMicrosoftLoginState})\n      ]\n  },\n  props: {\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\n      showLegacyLogin: true,\n      showMicrosoftLogin: true,\n  },\n  template: ` \n              <tf-signInPage>\n              </tf-signInPage>`,\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\n      showLegacyLogin: true,\n      showMicrosoftLogin: true,\n  },\n  template: ` \n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\n              </tf-signUpPage>`,\n})"
            },
            {
                "name": "LegacyAndMicrosoftLoginState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "JSON.parse(JSON.stringify(initialState))"
            },
            {
                "name": "loginFail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Fail`,\n    props<{ error: string}>()\n)"
            },
            {
                "name": "loginPopup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Popup`)"
            },
            {
                "name": "loginRedirect",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Redirect`)"
            },
            {
                "name": "loginSuccessful",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Successful`,\n    props<{ authResult: AuthenticationResult}>()\n)"
            },
            {
                "name": "logout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Logout`)"
            },
            {
                "name": "microsoftOnlyState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "JSON.parse(JSON.stringify(initialState))"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      showLegacyLogin: false,\n      showMicrosoftLogin: true,\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n  },\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\n              </tf-signInForm>`\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      showLegacyLogin: false,\n      showMicrosoftLogin: true,\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n  },\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\n              </tf-signUpForm>`\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations,\n      providers: [\n        provideMockStore({initialState: microsoftOnlyState})\n      ]\n  },\n  props: {\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\n      showLegacyLogin: false,\n      showMicrosoftLogin: true,\n  },\n  template: ` \n              <tf-signInPage>\n              </tf-signInPage>`,\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\n      showLegacyLogin: false,\n      showMicrosoftLogin: true,\n  },\n  template: ` \n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\n              </tf-signUpPage>`,\n})"
            },
            {
                "name": "MSAL_CONFIG_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/msal.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<AdConfig>('TF_MSAL_CONFIG')"
            },
            {
                "name": "msalConfigurationFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfMsal'"
            },
            {
                "name": "msalReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n    initialState,\n    on(MsalActions.loginRedirect, (state) => ({\n        ...state,\n        loading: true,\n        loaded: false\n    })),\n    on(MsalActions.loginPopup, (state) => ({\n        ...state,\n        loading: true,\n        loaded: false\n    })),\n    on(MsalActions.loginSuccessful, (state, payload) => ({\n        ...state,\n        authResult: payload.authResult\n    })),\n    on(MsalActions.loginFail, (state) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        user: null\n    })),\n    on(MsalActions.logout, (state) => ({\n        ...state,\n        ...initialState\n    }))\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SelectableWithBanner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: true,\n        isSelectable: true,\n        isSelected: true,\n        hasPrimaryBanner: true\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview [isSelectable]=\"isSelectable\" [(isSelected)]=\"isSelected\" [hasPrimaryBanner]=\"hasPrimaryBanner\">\n                    <div header>\n                    </div>\n                    <div preview>\n                        Preview Text\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
            },
            {
                "name": "selectAzureAdConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AzureAdState>(azureAdFeatureKey)"
            },
            {
                "name": "selectConfigurationState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IConfiguration>(configurationFeatureKey)"
            },
            {
                "name": "selectLogoUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n    selectConfigurationState,\n    (state: IConfiguration) => state.logoUrl\n)"
            },
            {
                "name": "selectMsalState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<MsalState>(msalConfigurationFeatureKey)"
            },
            {
                "name": "selectSignInPageConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<SignInPageState>(signInPageFeatureKey)"
            },
            {
                "name": "setConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[AzureAd] setConfig',\n    props<IAzureAdConfiguration>()\n)"
            },
            {
                "name": "setConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Configuration] setConfiguration',\n    props<IConfiguration>()\n)"
            },
            {
                "name": "SIGN_IN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[AzureAd] signIn'"
            },
            {
                "name": "signInLegacy",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n    '[SignIn Page] SignIn',\n    props<{ username: string, password: string}>()\n)"
            },
            {
                "name": "signInPageFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'signInPage'"
            },
            {
                "name": "signInPageReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n    initialState,\n)"
            },
            {
                "name": "signInSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[AzureAd] signInSuccess',\n    props<any>()\n)"
            },
            {
                "name": "signInWithAd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n    '[SignIn Page] SignInWithMicrosoft'\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpanderComponent>",
                "defaultValue": "(args: ExpanderComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FooterComponent>",
                "defaultValue": "(args: FooterComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NavbarComponent>",
                "defaultValue": "(args: NavbarComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignInFormComponent>",
                "defaultValue": "(args: SignInFormComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignUpFormComponent>",
                "defaultValue": "(args: SignUpFormComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SliderComponent>",
                "defaultValue": "(args: SliderComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UnauthorizedLayoutComponent>",
                "defaultValue": "(args: UnauthorizedLayoutComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignInPageComponent>",
                "defaultValue": "(args: SignInPageComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignUpPageComponent>",
                "defaultValue": "(args: SignUpPageComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TfButtonComponent>",
                "defaultValue": "(args: TfButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TfInputComponent>",
                "defaultValue": "(args: TfInputComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [
            {
                "name": "msalConfigFactory",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "azureAdConfigService",
                        "type": "AzureAdConfigurationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "azureAdConfigService",
                        "type": "AzureAdConfigurationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ButtonType",
                "childs": [
                    {
                        "name": "Basic",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Ghost",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Primary",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/core/src/lib/components/button/button.models.ts"
            },
            {
                "name": "ButtonType",
                "childs": [
                    {
                        "name": "Basic",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Ghost",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Primary",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.models.ts"
            }
        ],
        "groupedVariables": {
            "projects/msal/src/lib/store/msal.actions.ts": [
                {
                    "name": "acquireTokenPopup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Popup`)"
                },
                {
                    "name": "acquireTokenSilent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Silent`)"
                },
                {
                    "name": "ACTION_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[TF-MSAL]'"
                },
                {
                    "name": "loginFail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Fail`,\n    props<{ error: string}>()\n)"
                },
                {
                    "name": "loginPopup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Popup`)"
                },
                {
                    "name": "loginRedirect",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Redirect`)"
                },
                {
                    "name": "loginSuccessful",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Successful`,\n    props<{ authResult: AuthenticationResult}>()\n)"
                },
                {
                    "name": "logout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Logout`)"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "adConfigWrapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<AdConfigWrapper><unknown>environment"
                },
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.reducers.ts": [
                {
                    "name": "azureAdFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'azureAd'"
                },
                {
                    "name": "azureAdReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n    initialState,\n    on(AzureAdActions.setConfig, (state, config) => ({\n        ...state,\n        clientId: config.clientId,\n        instanceId: config.instanceId,\n        tenantId: config.tenantId,\n        redirectUri: config.redirectUri\n    }))\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAzureAdConfiguration",
                    "defaultValue": "{\n    clientId: null,\n    instanceId: null,\n    tenantId: null,\n    redirectUri: null\n}"
                }
            ],
            "projects/core/src/lib/components/expander/expander.stories.ts": [
                {
                    "name": "ButtonInEverySection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: true,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                        <tf-button></tf-button>\n                    </div>\n                    <div preview>\n                        <tf-button></tf-button>\n                    </div>\n                    <div content>\n                        <tf-button></tf-button>\n                    </div>\n                </tf-expander>`\n})"
                },
                {
                    "name": "ButtonInPreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: true,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                        \n                    </div>\n                    <div preview>\n                        <tf-button></tf-button>\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
                },
                {
                    "name": "ButtonInTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                        <tf-button></tf-button>\n                    </div>\n                    <div preview>\n                        test\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
                },
                {
                    "name": "ButtonInTitleAndPreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: true,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                        <tf-button></tf-button>\n                    </div>\n                    <div preview>\n                        <tf-button></tf-button>\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
                },
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ButtonComponent, CheckboxComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\n                    <div header>\n                    </div>\n                    <div preview>\n                        test\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
                },
                {
                    "name": "SelectableWithBanner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: true,\n        isSelectable: true,\n        isSelected: true,\n        hasPrimaryBanner: true\n    },\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview [isSelectable]=\"isSelectable\" [(isSelected)]=\"isSelected\" [hasPrimaryBanner]=\"hasPrimaryBanner\">\n                    <div header>\n                    </div>\n                    <div preview>\n                        Preview Text\n                    </div>\n                    <div content>\n                        content\n                    </div>\n                </tf-expander>`\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpanderComponent>",
                    "defaultValue": "(args: ExpanderComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/core.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/core.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  ButtonComponent,\n  CardComponent,\n  CheckboxComponent,\n  ExpanderComponent,\n  SliderComponent,\n  NavbarComponent,\n  SignInFormComponent,\n  SignInPageComponent,\n  InputComponent,\n  FooterComponent,\n  SignUpFormComponent,\n  SignUpPageComponent,\n  UnauthorizedLayoutComponent\n]"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.reducers.ts": [
                {
                    "name": "configurationFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfConfiguration'"
                },
                {
                    "name": "configurationReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n    initialState,\n    on(ConfigurationActions.setConfiguration, (state, config) => ({\n        ...state,\n        ...config\n    }))\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IConfiguration",
                    "defaultValue": "{\n    logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/core/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/msal/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/techfabric-angular-controls/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/core/src/lib/components/button/button.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "DefaultBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n  },\n  template: ` <tf-button>\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DefaultGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Ghost\n  },\n  template: ` <tf-button [type]=\"type\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DefaultPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Primary\n  },\n  template: ` <tf-button [type]=\"type\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DisabledBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    disabled: true\n  },\n  template: ` <tf-button [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DisabledGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Ghost,\n    disabled: true\n  },\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DisabledPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Basic,\n    disabled: true\n  },\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/components/card/card.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div header>\n                        Header\n                    </div>\n                    <div well>\n                        Well\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
                },
                {
                    "name": "DefaultNoContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div header>\n                        Header\n                    </div>\n                    <div well>\n                        Well\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
                },
                {
                    "name": "DefaultNoFooter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div header>\n                        Header\n                    </div>\n                    <div well>\n                        Well\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                </app-card>`\n})"
                },
                {
                    "name": "DefaultNoHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div well>\n                        Well\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
                },
                {
                    "name": "DefaultNoWell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"false\">\n                    <div header>\n                        Header\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
                },
                {
                    "name": "DefaultWithTopBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        headerText: 'Title',\n        displayPreview: false,\n    },\n    template: ` <app-card [hasTopBar]=\"true\">\n                    <div header>\n                        Header\n                    </div>\n                    <div well>\n                        Well\n                    </div>\n                    <div content>\n                        Content\n                    </div>\n                    <div footer>\n                        Footer\n                    </div>\n                </app-card>`\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/components/footer/footer.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n\n    },\n    template: ` <tf-footer>\n                </tf-footer>`\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FooterComponent>",
                    "defaultValue": "(args: FooterComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/components/navbar/navbar.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        displayName: 'Tyler H.',\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` <tf-navbar [logoUrl]=\"logoUrl\" [displayName]=\"displayName\">\n                </tf-navbar>`\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NavbarComponent>",
                    "defaultValue": "(args: NavbarComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/components/signInForm/signInForm.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` <tf-signInForm [logoUrl]=\"logoUrl\">\n                </tf-signInForm>`\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      showLegacyLogin: true,\n      showMicrosoftLogin: true,\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n  },\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\n              </tf-signInForm>`\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      showLegacyLogin: false,\n      showMicrosoftLogin: true,\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n  },\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\n              </tf-signInForm>`\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignInFormComponent>",
                    "defaultValue": "(args: SignInFormComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` <tf-signUpForm [logoUrl]=\"logoUrl\">\n                </tf-signUpForm>`\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      showLegacyLogin: true,\n      showMicrosoftLogin: true,\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n  },\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\n              </tf-signUpForm>`\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      showLegacyLogin: false,\n      showMicrosoftLogin: true,\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n  },\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\n              </tf-signUpForm>`\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignUpFormComponent>",
                    "defaultValue": "(args: SignUpFormComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        displayName: 'Tyler H.',\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` \n                <tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\n                </tf-unauthorizedLayout>`,\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UnauthorizedLayoutComponent>",
                    "defaultValue": "(args: UnauthorizedLayoutComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/pages/signInPage/signInPage.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations,\n    },\n    props: {\n        displayName: 'Tyler H.',\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` \n                <tf-signInPage >\n                </tf-signInPage>`,\n})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{}"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations,\n      providers: [\n        provideMockStore({initialState: LegacyAndMicrosoftLoginState})\n      ]\n  },\n  props: {\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\n      showLegacyLogin: true,\n      showMicrosoftLogin: true,\n  },\n  template: ` \n              <tf-signInPage>\n              </tf-signInPage>`,\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLoginState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "JSON.parse(JSON.stringify(initialState))"
                },
                {
                    "name": "microsoftOnlyState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "JSON.parse(JSON.stringify(initialState))"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations,\n      providers: [\n        provideMockStore({initialState: microsoftOnlyState})\n      ]\n  },\n  props: {\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\n      showLegacyLogin: false,\n      showMicrosoftLogin: true,\n  },\n  template: ` \n              <tf-signInPage>\n              </tf-signInPage>`,\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignInPageComponent>",
                    "defaultValue": "(args: SignInPageComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignUpFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    moduleMetadata: {\n        declarations\n    },\n    props: {\n        displayName: 'Tyler H.',\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\n    },\n    template: ` \n                <tf-signUpPage [logoUrl]=\"logoUrl\">\n                </tf-signUpPage>`,\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\n      showLegacyLogin: true,\n      showMicrosoftLogin: true,\n  },\n  template: ` \n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\n              </tf-signUpPage>`,\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\n      showLegacyLogin: false,\n      showMicrosoftLogin: true,\n  },\n  template: ` \n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\n              </tf-signUpPage>`,\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignUpPageComponent>",
                    "defaultValue": "(args: SignUpPageComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "DefaultBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n  },\n  template: ` <tf-button>\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DefaultGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Ghost\n  },\n  template: ` <tf-button [type]=\"type\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DefaultPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Primary\n  },\n  template: ` <tf-button [type]=\"type\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DisabledBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    disabled: true\n  },\n  template: ` <tf-button [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DisabledGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Ghost,\n    disabled: true\n  },\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "DisabledPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: {\n      declarations\n  },\n  props: {\n    type: ButtonType.Basic,\n    disabled: true\n  },\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\n                Button\n              </tf-button>`\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TfButtonComponent>",
                    "defaultValue": "(args: TfButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/components/input/input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/core/src/lib/components/slider/slider.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SliderComponent>",
                    "defaultValue": "(args: SliderComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TfInputComponent>",
                    "defaultValue": "(args: TfInputComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  azureAd: {\n    clientId: 'fdc8b9bc-0bd2-4fae-b7b3-7d05b7596de0',\n    tenantId: 'a4aa9f35-9917-4518-b764-5fbbb893a6cd',\n    redirectUri: 'http://localhost:4200/signIn'\n  }\n}"
                }
            ],
            "projects/msal/src/lib/store/msal.selectors.ts": [
                {
                    "name": "getAuthResult",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n    selectMsalState,\n    (state: MsalState) => state.authResult\n)"
                },
                {
                    "name": "getError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n    selectMsalState,\n    (state: MsalState) => state.error\n)"
                },
                {
                    "name": "selectMsalState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<MsalState>(msalConfigurationFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.module.ts": [
                {
                    "name": "IDENTITY_SERVICE_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<string>('IDENTITY_SERVICE_URL')"
                },
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "projects/msal/src/lib/store/msal.reducers.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MsalState",
                    "defaultValue": "{\n    authResult: null,\n    error: null,\n    loading: false,\n    loaded: false\n}"
                },
                {
                    "name": "msalConfigurationFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfMsal'"
                },
                {
                    "name": "msalReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n    initialState,\n    on(MsalActions.loginRedirect, (state) => ({\n        ...state,\n        loading: true,\n        loaded: false\n    })),\n    on(MsalActions.loginPopup, (state) => ({\n        ...state,\n        loading: true,\n        loaded: false\n    })),\n    on(MsalActions.loginSuccessful, (state, payload) => ({\n        ...state,\n        authResult: payload.authResult\n    })),\n    on(MsalActions.loginFail, (state) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        user: null\n    })),\n    on(MsalActions.logout, (state) => ({\n        ...state,\n        ...initialState\n    }))\n)"
                }
            ],
            "projects/core/src/lib/store/signIn/signInPage.reducers.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SignInPageState",
                    "defaultValue": "{\n    showLegacySignIn: true,\n    showMicrosoftSignIn: true,\n    username: '',\n    password: ''\n}"
                },
                {
                    "name": "signInPageFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'signInPage'"
                },
                {
                    "name": "signInPageReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n    initialState,\n)"
                }
            ],
            "projects/msal/src/lib/msalAuth.service.ts": [
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/msalAuth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "projects/msal/src/lib/msal.config.ts": [
                {
                    "name": "MSAL_CONFIG_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/msal.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<AdConfig>('TF_MSAL_CONFIG')"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.selectors.ts": [
                {
                    "name": "selectAzureAdConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AzureAdState>(azureAdFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.selectors.ts": [
                {
                    "name": "selectConfigurationState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IConfiguration>(configurationFeatureKey)"
                },
                {
                    "name": "selectLogoUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n    selectConfigurationState,\n    (state: IConfiguration) => state.logoUrl\n)"
                }
            ],
            "projects/core/src/lib/store/signIn/signInPage.selectors.ts": [
                {
                    "name": "selectSignInPageConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<SignInPageState>(signInPageFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.actions.ts": [
                {
                    "name": "setConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[AzureAd] setConfig',\n    props<IAzureAdConfiguration>()\n)"
                },
                {
                    "name": "SIGN_IN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[AzureAd] signIn'"
                },
                {
                    "name": "signInSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[AzureAd] signInSuccess',\n    props<any>()\n)"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.actions.ts": [
                {
                    "name": "setConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Configuration] setConfiguration',\n    props<IConfiguration>()\n)"
                }
            ],
            "projects/core/src/lib/store/signIn/signInPage.actions.ts": [
                {
                    "name": "signInLegacy",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n    '[SignIn Page] SignIn',\n    props<{ username: string, password: string}>()\n)"
                },
                {
                    "name": "signInWithAd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n    '[SignIn Page] SignInWithMicrosoft'\n)"
                }
            ]
        },
        "groupedFunctions": {
            "projects/core/src/lib/store/azureAd/azureAd.module.ts": [
                {
                    "name": "msalConfigFactory",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "azureAdConfigService",
                            "type": "AzureAdConfigurationService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "azureAdConfigService",
                            "type": "AzureAdConfigurationService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "projects/core/src/lib/components/button/button.models.ts": [
                {
                    "name": "ButtonType",
                    "childs": [
                        {
                            "name": "Basic",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Ghost",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Primary",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/core/src/lib/components/button/button.models.ts"
                }
            ],
            "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.models.ts": [
                {
                    "name": "ButtonType",
                    "childs": [
                        {
                            "name": "Basic",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Ghost",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Primary",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.models.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/core/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoFooter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoWell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultWithTopBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpanderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInEverySection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInPreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInTitleAndPreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectableWithBanner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/core.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/core.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/core.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CoreService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnauthorizedLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLoginState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "microsoftOnlyState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SIGN_IN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AzureAdEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalServiceCustom",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAzureAdConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "msalConfigFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IDENTITY_SERVICE_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azureAdFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azureAdReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAzureAdConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AzureAdState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAdConfigurationService.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AzureAdConfigurationService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/msalTransformService.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalTransformService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configurationFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configurationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectConfigurationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectLogoUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ConfigurationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInLegacy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInWithAd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInPageFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInPageReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectSignInPageConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SignInPageState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msal.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msal.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdConfigWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msal.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MSAL_CONFIG_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msalAuth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalAuthService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msalAuth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "acquireTokenPopup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "acquireTokenSilent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTION_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginFail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginPopup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginRedirect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginSuccessful",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "logout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "msalConfigurationFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "msalReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getAuthResult",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectMsalState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MsalState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TfButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TfInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TechfabricAngularControlsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TechfabricAngularControlsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "adConfigWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}