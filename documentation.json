{
    "pipes": [],
    "interfaces": [
        {
            "name": "AdConfig",
            "id": "interface-AdConfig-e2a024aae287ea99d8e16a575fc610a6ff3e6a0ee1b2b202face78d67355b9ca50cad84a8a9a847c795bb7fa2eb12a774d292148c26c9741398d95f7ef419c8b",
            "file": "projects/msal/src/lib/msal.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface AdConfigWrapper {\r\n    azureAd: AdConfig\r\n}\r\nexport interface AdConfig {\r\n    redirectUrl: string,\r\n    clientId: string,\r\n    tenantId: string\r\n}\r\n\r\n\r\nexport const MSAL_CONFIG_TOKEN = new InjectionToken<AdConfig>('TF_MSAL_CONFIG');\r\n\r\n// export const MSAL_CONFIG = {\r\n//     redirectUrl: env.azureAd.redirectUrl,\r\n//     clientId: env.azureAd.clientId,\r\n//     tenantId: env.azureAd.tenantId\r\n// }\r\n\r\n// export const MsalConfigProvider = [\r\n//     {\r\n//         provide: MSAL_CONFIG_TOKEN,\r\n//         useValue: MSAL_CONFIG\r\n//     }\r\n// ];",
            "properties": [
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "redirectUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "tenantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AdConfigWrapper",
            "id": "interface-AdConfigWrapper-e2a024aae287ea99d8e16a575fc610a6ff3e6a0ee1b2b202face78d67355b9ca50cad84a8a9a847c795bb7fa2eb12a774d292148c26c9741398d95f7ef419c8b",
            "file": "projects/msal/src/lib/msal.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface AdConfigWrapper {\r\n    azureAd: AdConfig\r\n}\r\nexport interface AdConfig {\r\n    redirectUrl: string,\r\n    clientId: string,\r\n    tenantId: string\r\n}\r\n\r\n\r\nexport const MSAL_CONFIG_TOKEN = new InjectionToken<AdConfig>('TF_MSAL_CONFIG');\r\n\r\n// export const MSAL_CONFIG = {\r\n//     redirectUrl: env.azureAd.redirectUrl,\r\n//     clientId: env.azureAd.clientId,\r\n//     tenantId: env.azureAd.tenantId\r\n// }\r\n\r\n// export const MsalConfigProvider = [\r\n//     {\r\n//         provide: MSAL_CONFIG_TOKEN,\r\n//         useValue: MSAL_CONFIG\r\n//     }\r\n// ];",
            "properties": [
                {
                    "name": "azureAd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdConfig",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AzureAdState",
            "id": "interface-AzureAdState-845988a9d9c29e7922599ec7622dedecc4748e9961feb68d77ad34bcbe3ec29e4cbb1671fafc7c05cb151f8b2ead5faa4cf29c7e342fdfccafb38825eb42f825",
            "file": "projects/core/src/lib/store/azureAd/azureAd.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IAzureAdConfiguration } from \"./azureAd.models\";\r\n\r\nexport interface AzureAdState extends IAzureAdConfiguration {\r\n\r\n}",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "IAzureAdConfiguration"
        },
        {
            "name": "ConfigurationState",
            "id": "interface-ConfigurationState-07303a7b9638b72b4ca9213d0fe17c9d9cd3051639bb4871f348cbe8c2b0d784c352fc0caa876cada9f6c5e2963bef6ce99e9988e075cd08b88904794fcc4ed2",
            "file": "projects/core/src/lib/store/configuration/configuration.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IConfiguration } from \"./configuration.models\";\r\n\r\nexport interface ConfigurationState  extends IConfiguration{\r\n\r\n}",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "IConfiguration"
        },
        {
            "name": "IAzureAdConfiguration",
            "id": "interface-IAzureAdConfiguration-ff6d161a2fd9fd3720c54cc3ee904d676b862a3f36621dd1869f1d639501fbea4b47c0840c2c3f5eb2e1df042e0ca2d361281200877381a9b891a417d1c7b015",
            "file": "projects/core/src/lib/store/azureAd/azureAd.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IAzureAdConfiguration {\r\n    clientId: string | null;\r\n    instanceId: string | null;\r\n    tenantId: string | null;\r\n    redirectUri: string | null;\r\n}",
            "properties": [
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "instanceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "redirectUri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "tenantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IConfiguration",
            "id": "interface-IConfiguration-5eb1b92f79755f0bac4944138dd31975d6d54baa9d7d3d9044172330e79ae92af35dcbd74821f47a9fbcc36fe1d9818e1746ccf48fecf9bfdd51ec8f13169fa5",
            "file": "projects/core/src/lib/store/configuration/configuration.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IConfiguration {\r\n    logoUrl: string | null;\r\n}",
            "properties": [
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MsalAuthConfig",
            "id": "interface-MsalAuthConfig-9cda679abaf520f70c38facb4cbd5bad7857069bc198a73297f35d4107bc64c0b110d0002cf6064eb152ae9a7377dd11f7b42a7db065a81f4d4d8b1015fdb867",
            "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AuthenticationResult, BrowserAuthOptions } from \"@azure/msal-browser\";\r\n\r\nexport interface MsalState {\r\n    authResult: AuthenticationResult | null,\r\n    error: string | null,\r\n    loading: boolean,\r\n    loaded: boolean,\r\n    authConfig: MsalAuthConfig\r\n}\r\n\r\nexport interface MsalAuthConfig {\r\n    tenantId: string,\r\n    clientId: string,\r\n    redirectUri: string\r\n}",
            "properties": [
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "redirectUri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "tenantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MsalState",
            "id": "interface-MsalState-84be3efc9d6a3bd12309c1513f2350e71f55009a37d2f93bbcaf16f7a199d4e45044f12e912b178ec33685fb49c9a4bcbb3d06a9264f553767e9eebff036fafd",
            "file": "projects/msal/src/lib/store/msal.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AccountInfo, AuthenticationResult } from \"@azure/msal-browser\";\r\nimport { AdConfig } from '../msal.config';\r\n\r\nexport interface MsalState {\r\n    config: AdConfig | null;\r\n    authResult: AuthenticationResult | null;\r\n    error: string | null;\r\n    loading: boolean;\r\n    loaded: boolean;\r\n}",
            "properties": [
                {
                    "name": "authResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationResult | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdConfig | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MsalState",
            "id": "interface-MsalState-9cda679abaf520f70c38facb4cbd5bad7857069bc198a73297f35d4107bc64c0b110d0002cf6064eb152ae9a7377dd11f7b42a7db065a81f4d4d8b1015fdb867-1",
            "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AuthenticationResult, BrowserAuthOptions } from \"@azure/msal-browser\";\r\n\r\nexport interface MsalState {\r\n    authResult: AuthenticationResult | null,\r\n    error: string | null,\r\n    loading: boolean,\r\n    loaded: boolean,\r\n    authConfig: MsalAuthConfig\r\n}\r\n\r\nexport interface MsalAuthConfig {\r\n    tenantId: string,\r\n    clientId: string,\r\n    redirectUri: string\r\n}",
            "properties": [
                {
                    "name": "authConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MsalAuthConfig",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "authResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationResult | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "MsalState-1"
        },
        {
            "name": "SignInPageState",
            "id": "interface-SignInPageState-b29bde1113ad52496e133b3fd3f75dac3659ff51fd0c5ff7359c6b04eed24cfe6d315d6e7937bbadadf6546995ac9a07040cf95063313a2cbb1be36797284697",
            "file": "projects/core/src/lib/store/signIn/signInPage.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SignInPageState {\r\n    showLegacySignIn: boolean;\r\n    showMicrosoftSignIn: boolean;\r\n    username: string;\r\n    password: string;\r\n}",
            "properties": [
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "showLegacySignIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "showMicrosoftSignIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TfConfigState",
            "id": "interface-TfConfigState-9e5c08611f52fb79c5bfe2ec7e5a1d6a3909735a9a6ab5a0310117911db14cd31e050e7f1a83f413e6d23b9f9e61047b87992efec90bb62c1ce20dd054e7dab2",
            "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TfConfigState {\r\n    logoUrl: string\r\n}",
            "properties": [
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TfNavigationItem",
            "id": "interface-TfNavigationItem-c508f1ba01a7c2538620744ac1713c6ca5ad8ef618927dc1e35b24a46f0899cc59c9d435341aa9122a4066c9d2fd901ae299636aeadd3bef6290897100f63160",
            "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TfNavigationState {\r\n    navigationItems: TfNavigationItem[];\r\n}\r\n\r\nexport interface TfNavigationItem {\r\n    displayIcon: any | null;\r\n    displayText: string;\r\n    routeToPath: string | null;\r\n    childNavigationItems: TfNavigationItem[];\r\n    navigationItemType: TfNavigationItemType;\r\n}\r\n\r\nexport enum TfNavigationItemType {\r\n    Navbar,\r\n    Sidebar,\r\n    NavbarAndSidebar\r\n}",
            "properties": [
                {
                    "name": "childNavigationItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfNavigationItem[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "displayIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "displayText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "navigationItemType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfNavigationItemType",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "routeToPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TfNavigationState",
            "id": "interface-TfNavigationState-c508f1ba01a7c2538620744ac1713c6ca5ad8ef618927dc1e35b24a46f0899cc59c9d435341aa9122a4066c9d2fd901ae299636aeadd3bef6290897100f63160",
            "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TfNavigationState {\r\n    navigationItems: TfNavigationItem[];\r\n}\r\n\r\nexport interface TfNavigationItem {\r\n    displayIcon: any | null;\r\n    displayText: string;\r\n    routeToPath: string | null;\r\n    childNavigationItems: TfNavigationItem[];\r\n    navigationItemType: TfNavigationItemType;\r\n}\r\n\r\nexport enum TfNavigationItemType {\r\n    Navbar,\r\n    Sidebar,\r\n    NavbarAndSidebar\r\n}",
            "properties": [
                {
                    "name": "navigationItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfNavigationItem[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TfSidebarState",
            "id": "interface-TfSidebarState-2c6b5e82ba7b6cb0f1c1eb4481e9c5564ad11ad1e755bc72ccce706b2c786530cdf3c1b7236e3ae1bf8a0f9147151453f9646cd1354dfc03ed57d08214c9b567",
            "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TfSidebarState {\r\n    type: TfSidebarType,\r\n    display: TfSidebarDisplay\r\n}\r\n\r\nexport enum TfSidebarType {\r\n    ContentAware,\r\n    Fixed\r\n}\r\n\r\nexport enum TfSidebarDisplay {\r\n    None,\r\n    Preview,\r\n    Open\r\n}",
            "properties": [
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfSidebarDisplay",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfSidebarType",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AzureAdConfigurationService",
            "id": "injectable-AzureAdConfigurationService-7f849f7c094f1820711af453858a040eaa3b5760fde4739b11ad8577d81c91cbb9a22379453a267cf8f7df2bbd6936e0452cd1beddc16490ad7c03b70701c300",
            "file": "projects/core/src/lib/store/azureAd/azureAdConfigurationService.ts",
            "properties": [
                {
                    "name": "azureAdConfig",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAzureAdConfiguration | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "http",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient | null",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IAzureAdConfiguration } from \"./azureAd.models\";\r\nimport { map } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class AzureAdConfigurationService {\r\n    azureAdConfig: IAzureAdConfiguration | null = null;\r\n    private http: HttpClient | null = null;\r\n\r\n    constructor(private readonly httpHandler: HttpBackend){\r\n        this.http = new HttpClient(httpHandler);\r\n    }\r\n\r\n    init(endpoint: string): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            this.http?.get(endpoint).pipe(map(res => res))\r\n            .subscribe(value => {\r\n                this.azureAdConfig = <IAzureAdConfiguration>value;\r\n                resolve(true);\r\n            },\r\n            (error) => {\r\n                reject(error);\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AzureAdEffects",
            "id": "injectable-AzureAdEffects-a79c1cb1f7b54141169f988c47bd3942a9319b42923fecbf7f210419c9599aef5592928bde86ee9ddfa527a73fcbcefbad2d1d66f5dafaa2d7f323a392e3871a",
            "file": "projects/core/src/lib/store/azureAd/azureAd.effects.ts",
            "properties": [
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "loadMovies$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n        ofType(SIGN_IN),\r\n        mergeMap(() => this.msalService.signIn()\r\n          .pipe(\r\n            map(movies => signInSuccess({})),\r\n            catchError(() => EMPTY)\r\n          ))\r\n        )\r\n      )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { EMPTY } from 'rxjs';\r\nimport {map, mergeMap, catchError} from 'rxjs/operators';\r\nimport { signInSuccess, SIGN_IN } from './azureAd.actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MsalServiceCustom {\r\n    constructor(private http: HttpClient, private authService: MsalService){\r\n\r\n    }\r\n    signIn() {\r\n        console.log('triggered')\r\n        this.authService.loginRedirect();\r\n        return this.http.get('');\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class AzureAdEffects {\r\n    http: HttpClient;\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private readonly httpHandler: HttpBackend,\r\n        private authService: MsalService,\r\n        private msalService: MsalServiceCustom\r\n    ){\r\n        this.http = new HttpClient(httpHandler);\r\n    }\r\n    loadMovies$ = createEffect(() => this.actions$.pipe(\r\n        ofType(SIGN_IN),\r\n        mergeMap(() => this.msalService.signIn()\r\n          .pipe(\r\n            map(movies => signInSuccess({})),\r\n            catchError(() => EMPTY)\r\n          ))\r\n        )\r\n      );\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msalService",
                        "type": "MsalServiceCustom",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "httpHandler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msalService",
                        "type": "MsalServiceCustom",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CoreService",
            "id": "injectable-CoreService-c02152c508dac826dd8168894c0768e13b5f5b2d27af2c9e2664ad08df8fa9a15ce94f19c186d1e7c156f1bbd008457df49b67faf9dd3b587d115a87737999b0",
            "file": "projects/core/src/lib/core.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "MsalAuthService",
            "id": "injectable-MsalAuthService-ae45857b610156e80cf93c9be1569333216da76273ee34d90b8451176532f90a81abc464930d52f7b0f65f0daf844790f0497f7ec231e4b31851c3f2713cc57c",
            "file": "projects/msal/src/lib/msalAuth.service.ts",
            "properties": [
                {
                    "name": "cache",
                    "defaultValue": "{\r\n    cacheLocation: 'localStorage',\r\n    storeAuthStateInCookie: isIE\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CacheOptions",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userAgentApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PublicClientApplication",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "acquireTokenPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "acquireTokenSilent",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "auth",
                            "type": "AdConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cache",
                            "type": "CacheOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "auth",
                            "type": "AdConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cache",
                            "type": "CacheOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loginPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loginRedirect",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logoutPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logoutRedirect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { MSAL_CONFIG_TOKEN } from './msal.config';\r\nimport { AuthenticationResult, BrowserAuthOptions, CacheOptions, PublicClientApplication } from '@azure/msal-browser';\r\nimport { from } from 'rxjs';\r\nimport { MsalNgrxModule } from './msal.module';\r\nimport { loginSuccessful } from '../public-api';\r\nimport { Store } from '@ngrx/store';\r\nimport { AdConfig } from './msal.config';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MsalAuthService {\r\n  private userAgentApplication: PublicClientApplication;\r\n\r\n  public cache: CacheOptions = {\r\n    cacheLocation: 'localStorage',\r\n    storeAuthStateInCookie: isIE\r\n  }\r\n\r\n  constructor(\r\n    @Inject(MSAL_CONFIG_TOKEN) private msalConfig: any, private store: Store\r\n  ) {\r\n    this.userAgentApplication = new PublicClientApplication({\r\n      auth: {\r\n        clientId: this.msalConfig.clientId,\r\n        authority: `https://login.microsoftonline.com/${this.msalConfig.tenantId}`,\r\n        redirectUri: this.msalConfig.redirectUri\r\n      },\r\n      cache: this.cache \r\n    })\r\n    this.userAgentApplication.handleRedirectPromise().then( (authResult) => {\r\n      let result = <AuthenticationResult>authResult;\r\n      this.store.dispatch(loginSuccessful({authResult: result}));\r\n    })\r\n  }\r\n\r\n\r\n  async init(auth: AdConfig, cache: CacheOptions) {\r\n    return this.userAgentApplication = new PublicClientApplication({\r\n      auth: {\r\n        clientId: auth.clientId,\r\n        authority: `https://login.microsoftonline.com/${auth.tenantId}`,\r\n        redirectUri: auth.redirectUrl\r\n      },\r\n      cache\r\n    });\r\n  }\r\n\r\n\r\n\r\n  logoutRedirect() {\r\n    this.userAgentApplication.logoutRedirect()\r\n  }\r\n\r\n  logoutPopup(){\r\n    this.userAgentApplication.logoutPopup();\r\n  }\r\n\r\n  loginPopup(){\r\n    return from (\r\n      this.userAgentApplication.loginPopup()\r\n    );\r\n  }\r\n\r\n  loginRedirect(){\r\n    return from(\r\n      this.userAgentApplication.loginRedirect()\r\n    );\r\n  }\r\n\r\n  acquireTokenSilent() {\r\n    return from(\r\n      this.userAgentApplication.acquireTokenSilent(\r\n        this.msalConfig.consentScopes\r\n      )\r\n    );\r\n  }\r\n\r\n  acquireTokenPopup(){\r\n    return from(\r\n      this.userAgentApplication.acquireTokenPopup(this.msalConfig.consentScopes)\r\n    );\r\n  }\r\n\r\n  get user(){\r\n    return this.userAgentApplication.getActiveAccount();\r\n  }\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "msalConfig",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "msalConfig",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "user": {
                    "name": "user",
                    "getSignature": {
                        "name": "user",
                        "type": "",
                        "returnType": "",
                        "line": 88
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "MsalEffects",
            "id": "injectable-MsalEffects-aa212edc9df4f798a012dbbf2528392afade8e7a1136868f5454641a57704f4f5765038a71c466ad10f753ef5aeeda1e42d5ce5353eaf94fc719b02157d70cf1",
            "file": "projects/msal/src/lib/store/msal.effects.ts",
            "properties": [
                {
                    "name": "msalAuthUpdate",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.msalAuthUpdate.type),\r\n        mergeMap((action: any) => \r\n            this.msalAuthService.init(action, this.msalAuthService.cache)\r\n        )\r\n    ), { dispatch: false})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "msalLoginPopup$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.loginPopup.type),\r\n        switchMap((paqyload) => \r\n            this.msalAuthService.loginPopup().pipe(\r\n                map(\r\n                    (authResult) => {\r\n                        return MsalActions.loginSuccessful({ authResult })\r\n                    }\r\n                ),\r\n                catchError(error => {\r\n                    return of(MsalActions.loginFail({ error }))\r\n                })\r\n            )\r\n        )\r\n    ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "msalLoginRedirect$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.loginRedirect),\r\n        switchMap(() => this.msalAuthService.loginRedirect())\r\n        )\r\n    , {dispatch: false})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { MsalService } from \"@azure/msal-angular\";\r\nimport { AccountInfo, AuthenticationResult, BrowserAuthOptions } from \"@azure/msal-browser\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { catchError, map, mergeMap, of, switchMap } from \"rxjs\";\r\nimport { MsalAuthService } from \"../msalAuth.service\";\r\n\r\nimport * as MsalActions from './msal.actions';\r\n\r\n@Injectable()\r\nexport class MsalEffects {\r\n    \r\n    constructor(\r\n        private actions$: Actions,\r\n        private msalAuthService: MsalAuthService){\r\n    }\r\n\r\n    msalAuthUpdate = createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.msalAuthUpdate.type),\r\n        mergeMap((action: any) => \r\n            this.msalAuthService.init(action, this.msalAuthService.cache)\r\n        )\r\n    ), { dispatch: false})\r\n\r\n    msalLoginPopup$ = createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.loginPopup.type),\r\n        switchMap((paqyload) => \r\n            this.msalAuthService.loginPopup().pipe(\r\n                map(\r\n                    (authResult) => {\r\n                        return MsalActions.loginSuccessful({ authResult })\r\n                    }\r\n                ),\r\n                catchError(error => {\r\n                    return of(MsalActions.loginFail({ error }))\r\n                })\r\n            )\r\n        )\r\n    ));\r\n\r\n    msalLoginRedirect$ = createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.loginRedirect),\r\n        switchMap(() => this.msalAuthService.loginRedirect())\r\n        )\r\n    , {dispatch: false});\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msalAuthService",
                        "type": "MsalAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msalAuthService",
                        "type": "MsalAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MsalEffects",
            "id": "injectable-MsalEffects-21b2709b9e5c42d4d5c24755fd3ab81b2c5caf54a70237f5df6267a5de64f4b40311ae085858a9eebc71e8ecd8ec3e35c24d16eaffe55b83aa3b5dc123471e9c-1",
            "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.effects.ts",
            "properties": [
                {
                    "name": "msalLoginPopup$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.loginPopup.type),\r\n        switchMap(() => \r\n            this.msalAuthService.loginPopup().pipe(\r\n                map(\r\n                    (authResult) => {\r\n                        return MsalActions.loginSuccessful({ authResult })\r\n                    }\r\n                ),\r\n                catchError(error => {\r\n                    return of(MsalActions.loginFail({ error }))\r\n                })\r\n            )\r\n        )\r\n    ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "msalLoginRedirect$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.loginRedirect),\r\n        switchMap(() => this.msalAuthService.loginRedirect())\r\n        )\r\n    , {dispatch: false})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { MsalService } from \"@azure/msal-angular\";\r\nimport { AccountInfo, AuthenticationResult } from \"@azure/msal-browser\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { catchError, map, of, switchMap } from \"rxjs\";\r\nimport { TechfabricAngularMsalNgrxService } from \"../techfabric-angular-msal-ngrx.service\";\r\n\r\nimport * as MsalActions from './msal.actions';\r\n\r\n@Injectable()\r\nexport class MsalEffects {\r\n    \r\n    constructor(\r\n        private actions$: Actions,\r\n        private msalAuthService: TechfabricAngularMsalNgrxService){\r\n    }\r\n\r\n    msalLoginPopup$ = createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.loginPopup.type),\r\n        switchMap(() => \r\n            this.msalAuthService.loginPopup().pipe(\r\n                map(\r\n                    (authResult) => {\r\n                        return MsalActions.loginSuccessful({ authResult })\r\n                    }\r\n                ),\r\n                catchError(error => {\r\n                    return of(MsalActions.loginFail({ error }))\r\n                })\r\n            )\r\n        )\r\n    ));\r\n\r\n    msalLoginRedirect$ = createEffect(() => this.actions$.pipe(\r\n        ofType(MsalActions.loginRedirect),\r\n        switchMap(() => this.msalAuthService.loginRedirect())\r\n        )\r\n    , {dispatch: false});\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msalAuthService",
                        "type": "TechfabricAngularMsalNgrxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msalAuthService",
                        "type": "TechfabricAngularMsalNgrxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "MsalEffects-1"
        },
        {
            "name": "MsalServiceCustom",
            "id": "injectable-MsalServiceCustom-a79c1cb1f7b54141169f988c47bd3942a9319b42923fecbf7f210419c9599aef5592928bde86ee9ddfa527a73fcbcefbad2d1d66f5dafaa2d7f323a392e3871a",
            "file": "projects/core/src/lib/store/azureAd/azureAd.effects.ts",
            "properties": [],
            "methods": [
                {
                    "name": "signIn",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { EMPTY } from 'rxjs';\r\nimport {map, mergeMap, catchError} from 'rxjs/operators';\r\nimport { signInSuccess, SIGN_IN } from './azureAd.actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MsalServiceCustom {\r\n    constructor(private http: HttpClient, private authService: MsalService){\r\n\r\n    }\r\n    signIn() {\r\n        console.log('triggered')\r\n        this.authService.loginRedirect();\r\n        return this.http.get('');\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class AzureAdEffects {\r\n    http: HttpClient;\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private readonly httpHandler: HttpBackend,\r\n        private authService: MsalService,\r\n        private msalService: MsalServiceCustom\r\n    ){\r\n        this.http = new HttpClient(httpHandler);\r\n    }\r\n    loadMovies$ = createEffect(() => this.actions$.pipe(\r\n        ofType(SIGN_IN),\r\n        mergeMap(() => this.msalService.signIn()\r\n          .pipe(\r\n            map(movies => signInSuccess({})),\r\n            catchError(() => EMPTY)\r\n          ))\r\n        )\r\n      );\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MsalTransformService",
            "id": "injectable-MsalTransformService-1d82e0f888746be4b8370be373f2b006d56fde4b1df7d4a6958f5a036a29afd36de9c3652df765c130ba8580f0055a7dd528790c78f2f4aade56b02b975fd7d8",
            "file": "projects/core/src/lib/store/azureAd/msalTransformService.ts",
            "properties": [
                {
                    "name": "azureAdConfig",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAzureAdConfiguration | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "http",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient | null",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpBackend, HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IAzureAdConfiguration } from \"./azureAd.models\";\r\nimport { filter, map } from \"rxjs\";\r\nimport { MsalBroadcastService } from \"@azure/msal-angular\";\r\nimport { EventMessage } from \"@azure/msal-browser\";\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class MsalTransformService {\r\n    azureAdConfig: IAzureAdConfiguration | null = null;\r\n    private http: HttpClient | null = null;\r\n\r\n    constructor(private backgroundService: MsalBroadcastService){\r\n        console.log('called transform service')\r\n    }\r\n\r\n    init(){\r\n        console.log('called transform service')\r\n    }\r\n\r\n\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "backgroundService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "backgroundService",
                        "type": "MsalBroadcastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TechfabricAngularAppService",
            "id": "injectable-TechfabricAngularAppService-6248a557f5cfe13682909abc3de81c654c91bde728054ce3b3dfdbe7e6ad7494abe42aa52ecfc2894a9f10a0900898ef85e7fe2db99d6d92df15bb14a4c4e3d1",
            "file": "projects/techfabric-angular-app/src/lib/techfabric-angular-app.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechfabricAngularAppService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "TechfabricAngularControlsService",
            "id": "injectable-TechfabricAngularControlsService-0e7098a30710988c34edb35340c0d65dd983ca3b3b3d493d6589f1e63175139199ec07ca79cfef53dda7c30b0d816a20b203e3498780397c930125c84151baf4",
            "file": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TechfabricAngularControlsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "TechfabricAngularMsalNgrxService",
            "id": "injectable-TechfabricAngularMsalNgrxService-848e70e103491b4dad2e526b49379053936c3aad543d8b41c147159f1542b3154cb2237829439c2ae016fdc0570ffe876e2cb07d97b86869b25d3a91eb272daa",
            "file": "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.service.ts",
            "properties": [
                {
                    "name": "userAgentApplication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PublicClientApplication",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "acquireTokenPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "acquireTokenSilent",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loginPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loginRedirect",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logoutPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logoutRedirect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AuthenticationResult, PublicClientApplication } from '@azure/msal-browser';\r\nimport { Store } from '@ngrx/store';\r\nimport { from } from 'rxjs';\r\nimport { loginSuccessful } from './store';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TechfabricAngularMsalNgrxService {\r\n  private userAgentApplication: PublicClientApplication;\r\n\r\n  constructor(private store: Store) {\r\n    this.userAgentApplication = new PublicClientApplication({\r\n      auth: {\r\n        clientId: '',\r\n        authority: '',\r\n        redirectUri: ''\r\n      },\r\n      cache: {\r\n        cacheLocation: 'localStorage',\r\n        storeAuthStateInCookie: isIE\r\n      }\r\n    })\r\n    this.userAgentApplication.handleRedirectPromise().then( (authResult: any) => {\r\n      let result = <AuthenticationResult>authResult;\r\n      this.store.dispatch(loginSuccessful({authResult: result}));\r\n    })\r\n  }\r\n\r\n\r\n  logoutRedirect() {\r\n    this.userAgentApplication.logoutRedirect()\r\n  }\r\n\r\n  logoutPopup(){\r\n    this.userAgentApplication.logoutPopup();\r\n  }\r\n\r\n  loginPopup(){\r\n    return from (\r\n      this.userAgentApplication.loginPopup()\r\n    );\r\n  }\r\n\r\n  loginRedirect(){\r\n    return from(\r\n      this.userAgentApplication.loginRedirect()\r\n    );\r\n  }\r\n\r\n  acquireTokenSilent() {\r\n    return from(\r\n      this.userAgentApplication.acquireTokenSilent({scopes: []})\r\n    );\r\n  }\r\n\r\n  acquireTokenPopup(){\r\n    return from(\r\n      this.userAgentApplication.acquireTokenPopup({scopes: []})\r\n    );\r\n  }\r\n\r\n  get user(){\r\n    return this.userAgentApplication.getActiveAccount();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "user": {
                    "name": "user",
                    "getSignature": {
                        "name": "user",
                        "type": "",
                        "returnType": "",
                        "line": 67
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2cbb88c25aceed974fd92a29abab5e87c5c20f2d7cc8dbf8498be044a1baadb8d6f6873b23cb97a45eaa0140ad516e59540d67ec9ba9960856e3fdac8798882c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'techfabric-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "signIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'techfabric-angular';\r\n  constructor(){}\r\n\r\n  signIn(){\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f8e59b712909852d98eef0f3105db6386bd4815ef9ddd1361329a2d8ff29fdff96a8d58e415d86a265d8c813465013b6a5a76d3d4174f1fa992154455b9ef1a3",
            "file": "projects/core/src/lib/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "ButtonType.Basic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ButtonType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { ButtonType } from './button.models'; \r\n\r\n@Component({\r\n  selector: 'tf-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() type: ButtonType = ButtonType.Basic;\r\n  @Input() text: string = '';\r\n  @Input() disabled: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get buttonClassName(): string {\r\n    switch(this.type){\r\n      case ButtonType.Basic: return 'basic';\r\n      case ButtonType.Ghost: return 'ghost';\r\n      case ButtonType.Primary: return 'primary';\r\n      default: return 'basic';\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: inline-block;\r\n    button {\r\n        padding: 10px 14px;\r\n        border-radius: 6px;\r\n        box-sizing: content-box;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        &.basic {\r\n            background-color: transparent;\r\n            border: 1px solid $grey;\r\n            color: $primary;\r\n            font-style: medium;\r\n        }\r\n        &.primary {\r\n            background-color: $primary;\r\n            color: $white;\r\n            border: none;\r\n        }\r\n        &.ghost {\r\n            background-color: $white;\r\n            color: $primary;\r\n            border: none;\r\n            font-weight: 500;\r\n        }\r\n\r\n        &[disabled] {\r\n            cursor: not-allowed;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "buttonClassName": {
                    "name": "buttonClassName",
                    "getSignature": {
                        "name": "buttonClassName",
                        "type": "string",
                        "returnType": "string",
                        "line": 18
                    }
                }
            },
            "templateData": "<button class=\"{{buttonClassName}}\" [disabled]=\"disabled\">\r\n  <ng-content></ng-content>\r\n</button>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-bcc51e78c5568bc6de24b482ff623afc900e31ad4e7dae248c267ec9abb27e9b254558e66571dcf3adaeca8ac027b388cd82b0fe78c2c20e1d9fc3addb640e6a",
            "file": "projects/core/src/lib/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasTopBar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'content'"
                        }
                    ]
                },
                {
                    "name": "footer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'footer'"
                        }
                    ]
                },
                {
                    "name": "header",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'header'"
                        }
                    ]
                },
                {
                    "name": "well",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'well'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "doesElementHaveContent",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldDisplayContent",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayFooter",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayHeader",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldDisplayWell",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewChecked, AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent {\n  @Input() hasTopBar: boolean = false;\n\n  @ViewChild('header') header: any = null;\n  @ViewChild('well') well: any = null;\n  @ViewChild('content') content: any = null;\n  @ViewChild('footer') footer: any = null;\n  constructor() { }\n\n  shouldDisplayHeader(): boolean {\n    return this.doesElementHaveContent(this.header);\n  }\n  shouldDisplayWell(): boolean {\n    return this.doesElementHaveContent(this.well);\n  }\n  shouldDisplayContent(): boolean {\n    return this.doesElementHaveContent(this.content);\n  }\n  shouldDisplayFooter(): boolean {\n    return this.doesElementHaveContent(this.footer);\n  }\n\n  private doesElementHaveContent(element: any): boolean{\n    try{\n      return element.nativeElement.children.length > 0 || element.nativeElement.innerText != \"\";\n    }\n    catch(ex){\n      return false;\n    }\n  }\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n:host{\r\n    display: block;\r\n    border-radius: 8px;\r\n    overflow-y: hidden;\r\n    box-shadow: $box-shadow;\r\n    section {\r\n        padding: 20px;\r\n\r\n        &.bar {\r\n            height: 12px;\r\n            padding: 0px;\r\n            background-color: $primary;\r\n        }\r\n\r\n        &.header {\r\n\r\n        }\r\n\r\n        &.well {\r\n            border-top: 1px solid $grey-light;\r\n            background-color: $grey-light;\r\n        }\r\n\r\n        &.content {\r\n            border-top: 1px solid $grey-light;\r\n        }\r\n\r\n        &.footer {\r\n            border-top: 1px solid $grey-light;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "templateData": "<section class=\"bar\" *ngIf=\"hasTopBar\"></section>\n<section #header class=\"header\" [style.display]=\"shouldDisplayHeader() ? 'block': 'none'\">\n  <ng-content select=\"[header]\"></ng-content>\n</section>\n<section #well class=\"well\" [style.display]=\"shouldDisplayWell() ? 'block': 'none'\">\n  <ng-content select=\"[well]\"></ng-content>\n</section>\n<section #content class=\"content\" [style.display]=\"shouldDisplayContent() ? 'block': 'none'\">\n  <ng-content select=\"[content]\"></ng-content>\n</section>\n<section #footer class=\"footer\" [style.display]=\"shouldDisplayFooter() ? 'block': 'none'\">\n  <ng-content select=\"[footer]\"></ng-content>\n</section>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-bd9f9da237ed606fc3d887b137cfbdd554be7442217cfc4d8b29bc4ba08ec33e0d882e1aa0fa3b73e61a1b1618df7b9ee4c0a739a8f061c9c567f9f30169fe1e",
            "file": "projects/core/src/lib/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "16",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "icon",
                    "defaultValue": "faCheck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'tf-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  @Input() size: number = 16;\r\n  @Input() value: boolean = false;\r\n  @Output() valueChange = new EventEmitter<boolean>();\r\n  @Input() disabled: boolean = false;\r\n  icon = faCheck;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toggle(){\r\n    if(!this.disabled){\r\n      this.value = !this.value;\r\n      this.valueChange.emit(this.value);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host{\r\n    display:inline-block;\r\n    box-sizing: border-box;\r\n    div {\r\n        border-radius: 2px;\r\n\r\n        line-height: 1px;\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: $white;\r\n        border: 1px solid $grey;\r\n        box-sizing: border-box;\r\n        &.checked{\r\n            background-color: $primary;\r\n            border: 1px solid $primary;\r\n            &:hover{\r\n                background-color: $primary;\r\n            }\r\n\r\n            fa-icon{\r\n                opacity: 1;\r\n            }\r\n            &.disabled {\r\n                background-color: $primary;\r\n            }\r\n        }\r\n\r\n        fa-icon {\r\n            display: inline-block;\r\n            opacity: 0;\r\n        }\r\n        &:hover{\r\n            background-color: $grey-light;\r\n            cursor: pointer;\r\n        }\r\n        &:active{\r\n            background-color: $primary-lighter;\r\n        }\r\n\r\n        &.disabled{\r\n            background-color: $grey-light;\r\n            &:hover{\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngStyle]=\"{'height.px': size, 'width.px': size}\" [ngClass]=\"{'checked': value, 'disabled': disabled}\" (click)=\"toggle()\">\r\n  <fa-icon [icon]=\"icon\" [ngStyle]=\"{'font-size.px': size}\"></fa-icon>\r\n</div>"
        },
        {
            "name": "CoreComponent",
            "id": "component-CoreComponent-b75af259bbff922755f1bd68335f3c1df547e3fa1d4c4bc88c9242e6818a9f9f84281000c9933decf3b240261f2c15677a4d68cb32c26ac389fbe641ceb745e3",
            "file": "projects/core/src/lib/core.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-core",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  core works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-core',\r\n  template: `\r\n    <p>\r\n      core works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class CoreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ExpanderComponent",
            "id": "component-ExpanderComponent-24790373e5f15de0d0baf2907ed30cf8a728e65a605a7d81aa1f0f16df9243a2542d010c22abe00899841a74a1e780a0c23b85a3480fbadbee4faaa22036a1bd",
            "file": "projects/core/src/lib/components/expander/expander.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-expander",
            "styleUrls": [
                "./expander.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expander.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayPreview",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasPrimaryBanner",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "headerText",
                    "defaultValue": "'Header'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelectable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isSelectedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "content"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getContentMaxHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { faMinus, faPlus} from '@fortawesome/free-solid-svg-icons'\n\n@Component({\n  selector: 'tf-expander',\n  templateUrl: './expander.component.html',\n  styleUrls: ['./expander.component.scss']\n})\nexport class ExpanderComponent implements OnInit {\n  @Input() isOpen: boolean = true;\n  @Input() headerText: string = 'Header';\n  @Input() displayPreview: boolean = false;\n  @Input() hasPrimaryBanner: boolean = false;\n  @Input() isSelectable: boolean = false;\n  @Input() isSelected: boolean = false;\n  @Output() isSelectedChange = new EventEmitter<boolean>();\n\n  @ViewChild(`content`) contentElement : any = null;\n  constructor() { \n  }\n\n  ngOnInit() {\n  }\n\n  get expandedIcon(): any {\n    return this.isOpen ? faMinus : faPlus;\n  }\n  \n\n  toggle(){\n    this.isOpen = !this.isOpen;\n    if(this.isSelectable){\n      this.isSelected = this.isOpen;\n    }\n  }\n  \n  getContentMaxHeight(){\n    let maxHeight = 0;\n    try{\n      let children  = [...this.contentElement?.nativeElement.children];\n      for(let elem of children){\n        maxHeight += elem.clientHeight;\n      }\n    }\n    catch(ex){\n\n    }\n    return maxHeight;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host{\r\n    display: block;\r\n    border-radius: 8px;\r\n    box-shadow: 0px 3px 10px rgba(0,0,0,0.16) !important;\r\n    overflow: hidden;\r\n\r\n    .hidden {\r\n        display: none;\r\n    }\r\n\r\n    section {\r\n        display: block;\r\n    }\r\n\r\n    content {\r\n        display: inline-block;\r\n    }\r\n\r\n    .primaryBanner {\r\n        display: block;\r\n        height: 8px;\r\n        background-color: $primary;\r\n    }\r\n\r\n    .header {\r\n        #iconWrapper {\r\n            display: inline-block;\r\n            background-color: $primary;\r\n            padding: 24px 14px;\r\n            cursor: pointer;\r\n            fa-icon{\r\n                color: white;\r\n            }\r\n\r\n            \r\n        }\r\n        #title {\r\n            padding-left: 22px;\r\n            padding-right: 46px; \r\n            display: inline-block;\r\n            font-size: 24px;\r\n            color: $secondary-light;\r\n            font-weight: 500;\r\n        }\r\n        #headerContent {\r\n            display: inline-block;\r\n        }\r\n\r\n\r\n        &.selectable {\r\n            #iconWrapper {\r\n                background-color: $white;\r\n            }   \r\n            #title {\r\n                padding-left: 12px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .preview {\r\n        padding: 20px;\r\n        background-color: $grey-light;\r\n    }\r\n    .content {\r\n        transition: padding linear .3s, height linear .3s;\r\n        padding: 0px 20px 0px 20px;\r\n        &.open{\r\n            padding: 20px 20px 20px 20px;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./expander.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "expandedIcon": {
                    "name": "expandedIcon",
                    "getSignature": {
                        "name": "expandedIcon",
                        "type": "any",
                        "returnType": "any",
                        "line": 26
                    }
                }
            },
            "templateData": "<section class=\"primaryBanner\" *ngIf=\"hasPrimaryBanner\">\n\n</section>\n<section class=\"header\" [ngClass]=\"{'selectable': isSelectable}\">\n  <div id=\"iconWrapper\" (click)=\"toggle()\" >\n    <tf-checkbox \n      *ngIf=\"isSelectable\" \n      [size]=\"24\" \n      [(value)]=\"isSelected\">\n    </tf-checkbox>\n    <fa-icon \n      [icon]=\"expandedIcon\" \n      *ngIf=\"!isSelectable\">\n    </fa-icon>\n  </div>\n  <div id=\"title\">\n    {{headerText}}\n  </div>\n  <div id=\"headerContent\">\n    <ng-content select=\"[header]\">\n\n    </ng-content>\n  </div>\n</section>\n<section class=\"preview\" [ngClass]=\"{'hidden': !displayPreview}\">\n  <ng-content select=\"[preview]\">\n\n  </ng-content>\n</section>\n<section class=\"content\" \n  #content \n  [ngStyle]=\"{'height.px': isOpen ? getContentMaxHeight() : 0}\" \n  [ngClass]=\"{'open': isOpen}\">\n  <ng-content select=\"[content]\">\n  </ng-content>\n</section>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-1c5d6b2a95133169fb4c27dae55562a8c09ea04842f274260dd5f68db9f1b004efedfb564274f3bfc4942723019b63d1cf2e211d11224956b8a36bf5f644ed71",
            "file": "projects/core/src/lib/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tf-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n:host {\r\n    display: block;\r\n    height: 60px;\r\n    background-color: $grey-darker;\r\n}",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-84f04bc993dbe9c45c4e53f625257b8e3084abf6852cc4373158e1915d4773ba0913a65016cd33602d77000193ce30bc45e9962c99e934dd9d15e1e22ac6ebc7",
            "file": "projects/core/src/lib/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string | number | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<string | number | null>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n@Component({\r\n  selector: 'tf-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss'],\r\n})\r\nexport class InputComponent implements OnInit {\r\n  @Input() label: string = '';\r\n  @Input() value: string | number | null = null;\r\n  @Output() valueChange: EventEmitter<string | number | null> = new EventEmitter<string | number | null>();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: block;\r\n    position: relative;\r\n    input {\r\n        width: 100%;\r\n        border: 1px solid $grey;\r\n        border-radius: 4px;\r\n        line-height: 30px;\r\n        font-size: 16px;\r\n        padding: 10px 12px;\r\n        transition: border-color linear .3s;\r\n\r\n        &:hover {\r\n            border-color: $grey-darker;\r\n        }\r\n\r\n        &:active, &:focus-visible{\r\n            border-color: $primary;\r\n            outline: none;\r\n            &::placeholder{\r\n                visibility: hidden;\r\n            }\r\n            + label {\r\n                visibility: visible;\r\n                color: $primary;\r\n                top: -12px;\r\n            }\r\n        }\r\n    }\r\n    label {\r\n        transition: color linear .3s, top linear .3s;\r\n        //visibility: hidden;\r\n        position: absolute;\r\n        left: 8px;\r\n        top: 12px;\r\n        pointer-events: none;\r\n\r\n        \r\n        background-color: $white;\r\n        display: block;\r\n        padding: 0px 4px;\r\n        color: $grey;\r\n\r\n        &.hasValue {\r\n            visibility: visible;\r\n            top: -12px;\r\n        }\r\n    }\r\n    \r\n}",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n    <input type=\"text\"  [(ngModel)]=\"value\"/>\r\n    <label [ngClass]=\"{'hasValue': value !== null && value !== ''}\">{{label}}</label>"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-0c7d5b7a33ce6d0bff9259696e46a1066273536ce9e9c4be6f3abec8fcb4ba969ab6d3e250916f1269d670c7ee93ad526a5d9e1967151a4cbba2e7627c4720f7",
            "file": "projects/core/src/lib/components/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hamburgerIcon",
                    "defaultValue": "faBars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'tf-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  @Input() logoUrl: string = '';\n  @Input() displayName: string = '';\n  hamburgerIcon: any = faBars;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n:host{\r\n    display: flex;\r\n    align-items: center;;\r\n    width: 100%;\r\n    box-shadow: $box-shadow;\r\n\r\n    .hamburgerWrapper {\r\n        padding: 10px 10px 10px 20px;\r\n        cursor: pointer;\r\n    }\r\n    .logo {\r\n        padding: 20px 10px;\r\n        img {\r\n            height: 32px;\r\n        }\r\n    }\r\n    .profile {\r\n        padding: 20px;\r\n        margin-left: auto;\r\n    }\r\n}",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"hamburgerWrapper d-sm-none\">\n  <fa-icon [icon]=\"hamburgerIcon\"></fa-icon>\n</div>\n<div class=\"logo\">\n  <img  [src]=\"logoUrl\" />\n</div>\n<div class=\"profile\">\n  {{displayName}}\n</div>"
        },
        {
            "name": "SignInFormComponent",
            "id": "component-SignInFormComponent-24b4b53170be71829fccbfd2af03641b664745074218c276385d125d7be53c7595f07ce68424806fc8287a4110637053b0c79184629a37b1e694795eb0ed4fa8",
            "file": "projects/core/src/lib/components/signInForm/signInForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signInForm",
            "styleUrls": [
                "./signInForm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signInForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBackButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickSignIn",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onClickSignInWithMicrosoft",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "microsoftIcon",
                    "defaultValue": "faMicrosoft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons';\r\n\r\n@Component({\r\n  selector: 'tf-signInForm',\r\n  templateUrl: './signInForm.component.html',\r\n  styleUrls: ['./signInForm.component.scss']\r\n})\r\nexport class SignInFormComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  @Input() showLegacyLogin: boolean = true;\r\n  @Input() showMicrosoftLogin: boolean = false;\r\n  @Input() showBackButton: boolean = true;\r\n\r\n\r\n  @Output() onClickSignIn: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() onClickSignInWithMicrosoft: EventEmitter<void> = new EventEmitter<void>();\r\n  \r\n\r\n  microsoftIcon: any = faMicrosoft;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    .logoContainer {\r\n        display: flex;\r\n        text-align: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        img {\r\n            width: 60%;\r\n            margin: 20px 0px;\r\n        }\r\n    }\r\n    .customSignIn > * {\r\n        margin-top: 16px;\r\n    }\r\n\r\n    .buttonContainer {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: flex-end;\r\n        align-content: flex-end;\r\n        tf-button {\r\n            margin-left: 16px;\r\n        }\r\n    }\r\n\r\n    .ssoIntegrationWrapper {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    \r\n\r\n    .orDividerContainer {\r\n        position: relative;\r\n        margin: 20px 0px;\r\n        text-align: center;\r\n        .orDivider {\r\n            height: 1px;\r\n            background-color: $grey;;\r\n        }\r\n        .or {\r\n            background-color: $white;\r\n            padding: 0px 10px;\r\n            position: absolute;\r\n            top: -13px;\r\n            left: calc(50% - 50px)\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./signInForm.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"logoContainer\" *ngIf=\"logoUrl !== ''\">\r\n  <img [src]=\"logoUrl\" />\r\n</div>\r\n<div class=\"customSignIn\" *ngIf=\"showLegacyLogin\">\r\n  <tf-input label=\"Username\"></tf-input>\r\n  <tf-input label=\"Password\"></tf-input>\r\n  <div class=\"buttonContainer\">\r\n    <tf-button [type]=\"1\" *ngIf=\"showBackButton\">Back</tf-button>\r\n    <tf-button [type]=\"2\">Sign In</tf-button>\r\n  </div>\r\n  \r\n</div>\r\n\r\n<div class=\"orDividerContainer\" *ngIf=\"showMicrosoftLogin\">\r\n  <div class=\"orDivider\"></div>\r\n  <div class=\"or\">Sign In With</div>\r\n</div>\r\n\r\n<div class=\"ssoIntegrationWrapper\">\r\n  <div *ngIf=\"showMicrosoftLogin\">\r\n    <tf-button (click)=\"onClickSignInWithMicrosoft.emit()\"><fa-icon [icon]=\"microsoftIcon\" style=\"color: #00a2ed\"></fa-icon> Microsoft</tf-button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignInPageComponent",
            "id": "component-SignInPageComponent-eb6df69c6d1ef98e0b02f25fd15adee8ff4d64272775cc4fa8e677421018ae86ae01281048c0b28dbe06330856cb0b235c2c7de2ce0af53ef3a76adcb850f415",
            "file": "projects/core/src/lib/pages/signInPage/signInPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signInPage",
            "styleUrls": [
                "./signInPage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signInPage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showLegacySignIn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftSignIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickSignInWithMicrosoft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { loginPopup, loginRedirect } from '@techfabric/msal-ngrx';\r\nimport { SIGN_IN } from '../../store/azureAd/azureAd.actions';\r\n\r\nimport { selectLogoUrl } from '../../store/configuration/configuration.selectors';\r\nimport { signInWithAd } from '../../store/signIn/signInPage.actions';\r\nimport { selectSignInPageConfiguration } from '../../store/signIn/signInPage.selectors';\r\n\r\n@Component({\r\n  selector: 'tf-signInPage',\r\n  templateUrl: './signInPage.component.html',\r\n  styleUrls: ['./signInPage.component.scss']\r\n})\r\nexport class SignInPageComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  @Input() showLegacySignIn: boolean = true;\r\n  @Input() showMicrosoftSignIn: boolean = false;\r\n  constructor(private store: Store) { }\r\n\r\n  ngOnInit() {\r\n    this.store.select(selectLogoUrl).subscribe(o => {\r\n      this.logoUrl = <string>o;\r\n    });\r\n    this.store.select(selectSignInPageConfiguration).subscribe(o => {\r\n      this.showLegacySignIn = o.showLegacySignIn;\r\n      this.showMicrosoftSignIn = o.showMicrosoftSignIn;\r\n    });\r\n  }\r\n\r\n\r\n  onClickSignInWithMicrosoft(): void {\r\n    console.log('login')\r\n    this.store.dispatch(loginRedirect());\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-content: space-between;\r\n    tf-signInForm{\r\n        justify-self: center;\r\n        align-self: center;\r\n    }\r\n}",
                    "styleUrl": "./signInPage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\r\n    <tf-signInForm [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftSignIn\" [showLegacyLogin]=\"showLegacySignIn\" (onClickSignInWithMicrosoft)=\"onClickSignInWithMicrosoft()\">\r\n\r\n    </tf-signInForm>\r\n</tf-unauthorizedLayout>"
        },
        {
            "name": "SignUpFormComponent",
            "id": "component-SignUpFormComponent-686a8ff43f9950fc9f0b57219515f675330eb33aedb786619f2745714c15dca37845b5ee384abbd2cf6a2cf38df6d45a18d1f2d3af1a8d4072aa349be051ce12",
            "file": "projects/core/src/lib/components/signUpForm/signUpForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signUpForm",
            "styleUrls": [
                "./signUpForm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signUpForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBackButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "microsoftIcon",
                    "defaultValue": "faMicrosoft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons';\r\n\r\n@Component({\r\n  selector: 'tf-signUpForm',\r\n  templateUrl: './signUpForm.component.html',\r\n  styleUrls: ['./signUpForm.component.scss']\r\n})\r\nexport class SignUpFormComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  @Input() showLegacyLogin: boolean = true;\r\n  @Input() showMicrosoftLogin: boolean = false;\r\n  @Input() showBackButton: boolean = true;\r\n\r\n  microsoftIcon: any = faMicrosoft;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    .logoContainer {\r\n        display: flex;\r\n        text-align: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        img {\r\n            width: 60%;\r\n            margin: 20px 0px;\r\n        }\r\n    }\r\n    .customSignIn > * {\r\n        margin-top: 16px;\r\n    }\r\n\r\n    .buttonContainer {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: flex-end;\r\n        align-content: flex-end;\r\n        tf-button {\r\n            margin-left: 16px;\r\n        }\r\n    }\r\n\r\n    .ssoIntegrationWrapper {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    \r\n\r\n    .orDividerContainer {\r\n        position: relative;\r\n        margin: 20px 0px;\r\n        text-align: center;\r\n        .orDivider {\r\n            height: 1px;\r\n            background-color: $grey;;\r\n        }\r\n        .or {\r\n            background-color: $white;\r\n            padding: 0px 10px;\r\n            position: absolute;\r\n            top: -13px;\r\n            left: calc(50% - 50px)\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./signUpForm.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"logoContainer\" *ngIf=\"logoUrl !== ''\">\r\n  <img [src]=\"logoUrl\" />\r\n</div>\r\n<div class=\"customSignIn\" *ngIf=\"showLegacyLogin\">\r\n  <tf-input label=\"Username\"></tf-input>\r\n  <tf-input label=\"Password\"></tf-input>\r\n  <tf-input label=\"Confirm Password\"></tf-input>\r\n  <div class=\"buttonContainer\">\r\n    <tf-button [type]=\"1\" *ngIf=\"showBackButton\">Back</tf-button>\r\n    <tf-button [type]=\"2\">Sign Up</tf-button>\r\n  </div>\r\n  \r\n</div>\r\n\r\n<div class=\"orDividerContainer\" *ngIf=\"showMicrosoftLogin\">\r\n  <div class=\"orDivider\"></div>\r\n  <div class=\"or\">Sign Up With</div>\r\n</div>\r\n\r\n<div class=\"ssoIntegrationWrapper\">\r\n  <div *ngIf=\"showMicrosoftLogin\">\r\n    <tf-button><fa-icon [icon]=\"microsoftIcon\" style=\"color: #00a2ed\"></fa-icon> Microsoft</tf-button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SignUpPageComponent",
            "id": "component-SignUpPageComponent-ca859f2aaa3aaefa632fc2fbf78a6f110beee4ff4fa5e1718aea041ed2bd6256479b46e3c86280ceb361e75f96f5474665b7866b877456e75273d5feb8c388b0",
            "file": "projects/core/src/lib/pages/signUpPage/signUpPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-signUpPage",
            "styleUrls": [
                "./signUpPage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signUpPage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showLegacyLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMicrosoftLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tf-signUpPage',\r\n  templateUrl: './signUpPage.component.html',\r\n  styleUrls: ['./signUpPage.component.scss']\r\n})\r\nexport class SignUpPageComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  @Input() showLegacyLogin: boolean = true;\r\n  @Input() showMicrosoftLogin: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-content: space-between;\r\n    tf-signUpForm{\r\n        justify-self: center;\r\n        align-self: center;\r\n    }\r\n}",
                    "styleUrl": "./signUpPage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\r\n  <tf-signUpForm [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n\r\n  </tf-signUpForm>\r\n</tf-unauthorizedLayout>"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-d418be3b087b3065870a2ba2b623fb82c12f87008c66b0373088d9277f16715e197bf3dc820e2e51f74f993a1cd51365e562c24a4745941dd2f334c42eb0ea96",
            "file": "projects/core/src/lib/components/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-slider",
            "styleUrls": [
                "./slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "maxValue",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "percentageValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backgroundElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'background'"
                        }
                    ]
                },
                {
                    "name": "circleElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'circle'"
                        }
                    ]
                },
                {
                    "name": "isDragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "position",
                    "defaultValue": "'test'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "onDragMoved",
                    "args": [
                        {
                            "name": "$event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { CdkDragStart, CdkDragEnd, CdkDragMove } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'tf-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent {\n  @Input() value: number = 0;\n  @Input() percentageValue: number = 0;\n  @Input() maxValue: number = 100;\n  constructor() { }\n\n  @ViewChild('background') backgroundElement: any;\n  @ViewChild('circle') circleElement: any;\n\n  private isDragging: boolean = false;\n  position: string = 'test';\n\n  onDragMoved($event: CdkDragMove){\n    this.percentageValue = ($event.pointerPosition.x - this.backgroundElementPosition.x) / (this.backgroundElementWidth) * 100;\n  }\n\n  get backgroundElementPosition(){\n    return {x: this.backgroundElement.nativeElement.offsetLeft, y: this.backgroundElement.nativeElement.offsetTop};\n  }\n\n  get backgroundElementWidth(){\n    return this.backgroundElement.nativeElement.offsetWidth;\n  }\n\n  get mousePosition(){\n    return {x: (<any>window)?.event?.clientX, y: (<any>window)?.event?.clientY};\n  }\n\n  get circlePosition(){\n    return {x: this.circleElement.nativeElement.offsetLeft, y: this.circleElement.nativeElement.offsetTop};\n  }\n\n  get circleRelativePosition(){\n    try{\n      let transform = this.circleElement.nativeElement.style.transform.replace('translate3d(', '').replace(')').replace('px', '');\n      let transformValues = transform.split(',');\n      return {x: parseInt(transformValues[0]), y: parseInt(transformValues[1])};\n    }\n    catch(ex) {\n      return {x: 0, y: 0};\n    }\n    \n    \n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: block;\r\n    height: 32px;\r\n    .background {\r\n        position: relative;\r\n        left: 0px;\r\n        right: 0px;\r\n        background-color: $grey;\r\n        height: 8px;\r\n        top: 12px;\r\n        border-radius: 8px;\r\n    }\r\n    .highlightBackground {\r\n        position: relative;\r\n        left: 0px;\r\n        background-color: $primary;\r\n        height: 8px;\r\n        top: 4px;\r\n        border-radius: 8px;\r\n    }\r\n    .circle {\r\n        position: absolute;\r\n        background-color: black;\r\n        box-shadow: $box-shadow;\r\n        width: 12px;\r\n        height: 12px;\r\n        border: 10px solid $white;\r\n        top: 16px;\r\n        border-radius: 80px;\r\n        cursor: pointer;\r\n    }\r\n}",
                    "styleUrl": "./slider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "accessors": {
                "backgroundElementPosition": {
                    "name": "backgroundElementPosition",
                    "getSignature": {
                        "name": "backgroundElementPosition",
                        "type": "",
                        "returnType": "",
                        "line": 25
                    }
                },
                "backgroundElementWidth": {
                    "name": "backgroundElementWidth",
                    "getSignature": {
                        "name": "backgroundElementWidth",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                },
                "mousePosition": {
                    "name": "mousePosition",
                    "getSignature": {
                        "name": "mousePosition",
                        "type": "",
                        "returnType": "",
                        "line": 33
                    }
                },
                "circlePosition": {
                    "name": "circlePosition",
                    "getSignature": {
                        "name": "circlePosition",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                },
                "circleRelativePosition": {
                    "name": "circleRelativePosition",
                    "getSignature": {
                        "name": "circleRelativePosition",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                }
            },
            "templateData": "<div class=\"sliderContainer\">\n  <div class=\"background\" #background></div>\n  <div class=\"highlightBackground\" \n    [style.width.%]=\"percentageValue\">\n  </div>\n  <div class=\"circle\" #circle \n    cdkDrag\n    cdkDragLockAxis=\"x\"\n    cdkDragBoundary=\".sliderContainer\" \n    (cdkDragMoved)=\"onDragMoved($event)\">\n  </div>\n</div>"
        },
        {
            "name": "TechfabricAngularControlsComponent",
            "id": "component-TechfabricAngularControlsComponent-092579a57eab761eb3d46efb94931af99f8617369aee4dbf3194d0f6644e48b231fc540736f1d551de620ec39107d521199dd255fe9c584a5350430f83b46140",
            "file": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-techfabricAngularControls",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  techfabric-angular-controls works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-techfabricAngularControls',\r\n  template: `\r\n    <p>\r\n      techfabric-angular-controls works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class TechfabricAngularControlsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "TechfabricAngularMsalNgrxComponent",
            "id": "component-TechfabricAngularMsalNgrxComponent-3a7ab1fb355615977d557e2a0d3f26b86671542d22f35dece2d22590ed72a54345fb2e1afb70ca2a134a3fe852502312fe8e5090b0ce2c03e848b63ca284f621",
            "file": "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-techfabricAngularMsalNgrx",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  techfabric-angular-msal-ngrx works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-techfabricAngularMsalNgrx',\r\n  template: `\r\n    <p>\r\n      techfabric-angular-msal-ngrx works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class TechfabricAngularMsalNgrxComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "TfButtonComponent",
            "id": "component-TfButtonComponent-a820c44ce8fa6911f6ea7fd9533c357121c243b08fa823780037175947b76c661c813672b202cf276494bd89643fb2c1f273e861a03b9e66c280beff4b71a748",
            "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-button",
            "styleUrls": [
                "./tf-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tf-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "ButtonType.Basic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ButtonType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { ButtonType } from './tf-button.models';\r\n\r\n@Component({\r\n  selector: 'tf-button',\r\n  templateUrl: './tf-button.component.html',\r\n  styleUrls: ['./tf-button.component.scss']\r\n})\r\nexport class TfButtonComponent implements OnInit {\r\n  @Input() type: ButtonType = ButtonType.Basic;\r\n  @Input() text: string = '';\r\n  @Input() disabled: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get buttonClassName(): string {\r\n    switch(this.type){\r\n      case ButtonType.Basic: return 'basic';\r\n      case ButtonType.Ghost: return 'ghost';\r\n      case ButtonType.Primary: return 'primary';\r\n      default: return 'basic';\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: inline-block;\r\n    button {\r\n        padding: 10px 14px;\r\n        border-radius: 6px;\r\n        box-sizing: content-box;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        &.basic {\r\n            background-color: transparent;\r\n            border: 1px solid $grey;\r\n            color: $primary;\r\n            font-style: medium;\r\n        }\r\n        &.primary {\r\n            background-color: $primary;\r\n            color: $white;\r\n            border: none;\r\n        }\r\n        &.ghost {\r\n            background-color: $white;\r\n            color: $primary;\r\n            border: none;\r\n            font-weight: 500;\r\n        }\r\n\r\n        &[disabled] {\r\n            cursor: not-allowed;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./tf-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "buttonClassName": {
                    "name": "buttonClassName",
                    "getSignature": {
                        "name": "buttonClassName",
                        "type": "string",
                        "returnType": "string",
                        "line": 18
                    }
                }
            },
            "templateData": "<button class=\"{{buttonClassName}}\" [disabled]=\"disabled\">\r\n  <ng-content></ng-content>\r\n</button>"
        },
        {
            "name": "TfInputComponent",
            "id": "component-TfInputComponent-886f116ae84a6915701579ed641f31cf23a484ea08a774fab0350548b7bfc33cb1f39d119ea924dc617f517ed84e2fb8d7ab53c72dd0dbf3459622809a7f05cd",
            "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-input",
            "styleUrls": [
                "./tf-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tf-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string | number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string | number | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<string | number | null>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tf-input',\r\n  templateUrl: './tf-input.component.html',\r\n  styleUrls: ['./tf-input.component.scss']\r\n})\r\nexport class TfInputComponent implements OnInit {\r\n  @Input() label: string = '';\r\n  @Input() value: string | number | null = null;\r\n  @Output() valueChange: EventEmitter<string | number | null> = new EventEmitter<string | number | null>();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: block;\r\n    position: relative;\r\n    input {\r\n        width: 100%;\r\n        border: 1px solid $grey;\r\n        border-radius: 4px;\r\n        line-height: 30px;\r\n        font-size: 16px;\r\n        padding: 10px 12px;\r\n        transition: border-color linear .3s;\r\n\r\n        &:hover {\r\n            border-color: $grey-darker;\r\n        }\r\n\r\n        &:active, &:focus-visible{\r\n            border-color: $primary;\r\n            outline: none;\r\n            &::placeholder{\r\n                visibility: hidden;\r\n            }\r\n            + label {\r\n                visibility: visible;\r\n                color: $primary;\r\n                top: -12px;\r\n            }\r\n        }\r\n    }\r\n    label {\r\n        transition: color linear .3s, top linear .3s;\r\n        //visibility: hidden;\r\n        position: absolute;\r\n        left: 8px;\r\n        top: 12px;\r\n        pointer-events: none;\r\n\r\n        \r\n        background-color: $white;\r\n        display: block;\r\n        padding: 0px 4px;\r\n        color: $grey;\r\n\r\n        &.hasValue {\r\n            visibility: visible;\r\n            top: -12px;\r\n        }\r\n    }\r\n    \r\n}",
                    "styleUrl": "./tf-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n    <input type=\"text\"  [(ngModel)]=\"value\"/>\r\n    <label [ngClass]=\"{'hasValue': value !== null && value !== ''}\">{{label}}</label>"
        },
        {
            "name": "TfNavbarComponent",
            "id": "component-TfNavbarComponent-4bb8d09fe97cacd50a6f4f0e52d55e22eb8812fa3df2f974f95164f0da089564b24746bf2162404afe73d4fec432e032732e3bf0b26be78bf631f4bd029379b3",
            "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-navbar",
            "styleUrls": [
                "./tf-navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tf-navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "barsIcon",
                    "defaultValue": "faBars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "navItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfNavigationItem[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TfConfigState } from '../../store/tf-config/tf-config.models';\nimport { selectLogoUrl, selectTfConfig } from '../../store/tf-config/tf-config.selectors';\nimport { TfNavigationItem } from '../../store/tf-navigation/tf-navigation.models';\n\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { getNavbarNavigationItems } from '../../store/tf-navigation/tf-navigation.selectors';\n\n@Component({\n  selector: 'tf-navbar',\n  templateUrl: './tf-navbar.component.html',\n  styleUrls: ['./tf-navbar.component.scss']\n})\nexport class TfNavbarComponent implements OnInit {\n  constructor(private store: Store) { }\n\n  barsIcon: any = faBars;\n  logoUrl: string = '';\n  navItems: TfNavigationItem[] = [];\n\n\n  ngOnInit() {\n    this.store.select(selectLogoUrl).subscribe( (logoUrl: string) => {\n      this.logoUrl = logoUrl;\n    });\n    this.store.select(getNavbarNavigationItems).subscribe((navigationItems: TfNavigationItem[]) => {\n      this.navItems = navigationItems;\n      console.log(this.navItems)\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n\r\n:host {\r\n    display: flex;\r\n    box-shadow: $box-shadow;\r\n    padding: 20px;\r\n\r\n    align-items: center;\r\n    fa-icon{\r\n        font-size: 18px;\r\n        padding: 5px 10px;\r\n        margin-right: 20px;\r\n        cursor: pointer;\r\n    }\r\n    .logo{\r\n        max-height: 40px;\r\n    }\r\n    .navItems {\r\n        display: flex;\r\n        flex-grow: 1;\r\n    }\r\n}",
                    "styleUrl": "./tf-navbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fa-icon [icon]=\"barsIcon\"></fa-icon>\n<img class=\"logo\" [src]=\"logoUrl\">\n\n<div class=\"navItems\">\n  <tf-navbar-navItem *ngFor=\"let navItem of navItems\" [model]=\"navItem\">\n  </tf-navbar-navItem>\n</div>"
        },
        {
            "name": "TfNavbarNavItemComponent",
            "id": "component-TfNavbarNavItemComponent-df95c5e1e8c756a0be3e7dcf21a035bb80affa4b338dd24847f65478b34a3373844f30941010da0b828c8a4104d839f08a6ddeec24b7a6683cdfa250b93fe926",
            "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-navbar-navItem",
            "styleUrls": [
                "./tf-navbar-nav-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tf-navbar-nav-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "model",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "TfNavigationItem | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "navItemWrapperElem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wrapper'"
                        }
                    ]
                },
                {
                    "name": "offsetHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "offsetWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "mouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Input, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { TfNavigationItem } from '../../store/tf-navigation/tf-navigation.models';\n\n@Component({\n  selector: 'tf-navbar-navItem',\n  templateUrl: './tf-navbar-nav-item.component.html',\n  styleUrls: ['./tf-navbar-nav-item.component.scss']\n})\nexport class TfNavbarNavItemComponent implements OnInit {\n  @Input() model: TfNavigationItem | null = null;\n\n  isOpen: boolean = false;\n\n  offsetHeight: number = 0;\n  offsetWidth: number = 0;\n  constructor() { }\n\n  @ViewChild('wrapper') navItemWrapperElem: any;\n\n\n  ngOnInit() {\n  }\n\n  onClickMenu(){\n    console.log(this.navItemWrapperElem)\n    this.offsetHeight = this.navItemWrapperElem.offsetTop + this.navItemWrapperElem.nativeElement.offsetHeight;\n    this.offsetWidth = this.navItemWrapperElem.offsetLeft + this.navItemWrapperElem.nativeElement.offsetWidth;\n    this.isOpen = true;\n  }\n\n  mouseLeave(){\n    console.log('left')\n    this.isOpen = false;\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n:host{\r\n    position: inherit;\r\n    .navItemWrapper {\r\n        position: relative;\r\n        padding: 10px 20px;\r\n        transition: border-bottom linear .3s;\r\n        font-size: 20px;\r\n        &:hover{\r\n            cursor: pointer;\r\n            border-bottom: 4px solid $primary;\r\n        }\r\n\r\n        .children {\r\n            box-shadow: $box-shadow;\r\n            position: fixed;\r\n            border-radius: 8px;\r\n            cursor: pointer;\r\n            background-color: $white;\r\n\r\n            div {\r\n                padding: 10px 20px;\r\n\r\n                &:hover{\r\n                    background-color: $grey-light;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n}",
                    "styleUrl": "./tf-navbar-nav-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<span (mouseleave)=\"mouseLeave()\" class=\"navItemWrapper\" #wrapper>\n    <span (click)=\"onClickMenu()\" class=\"displayText\">{{model.displayText}}</span>\n    <div class=\"children\" *ngIf=\"model.childNavigationItems !== null && isOpen\" [style.top.px]=\"offsetHeight\" [style.left.px]=\"offsetWidth+10\">\n        <div *ngFor=\"let navItem of model.childNavigationItems\" >\n            {{navItem.displayText}}\n        </div>\n    </div>\n</span>\n\n"
        },
        {
            "name": "TfSidebarComponent",
            "id": "component-TfSidebarComponent-53178cebaae1978c78d0342acc75c51d828c01c80155c48f32cb26d4e56e7828472c23ec859167a129ba1666398ac4f8462f6ae89c71ffe4c60d512340b701db",
            "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-sidebar",
            "styleUrls": [
                "./tf-sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tf-sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tf-sidebar',\n  templateUrl: './tf-sidebar.component.html',\n  styleUrls: ['./tf-sidebar.component.scss']\n})\nexport class TfSidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles.scss';\r\n:host{\r\n    height: 100%;\r\n    width: 80px;\r\n    box-shadow: $box-shadow;\r\n}",
                    "styleUrl": "./tf-sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "UnauthorizedLayoutComponent",
            "id": "component-UnauthorizedLayoutComponent-d57576ed7a6643ff71b7086a8758f6412697f991cc93c92d986645fd59fdc09447304a74d05e3785d204d3593a83555dfd58dcd3c58353bb41d187c4ea25a33b",
            "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tf-unauthorizedLayout",
            "styleUrls": [
                "./unauthorizedLayout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./unauthorizedLayout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tf-unauthorizedLayout',\r\n  templateUrl: './unauthorizedLayout.component.html',\r\n  styleUrls: ['./unauthorizedLayout.component.scss']\r\n})\r\nexport class UnauthorizedLayoutComponent implements OnInit {\r\n  @Input() logoUrl: string = '';\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n}",
                    "styleUrl": "./unauthorizedLayout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<tf-navbar [logoUrl]=\"logoUrl\"></tf-navbar>\r\n<ng-content></ng-content>\r\n<tf-footer></tf-footer>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-f929cfb2a907854bc47515dde23494239968125438626fab6aa1637e3f2044187919ed21d36f7a23141c77054b86258917ac0cd343544deb1f3419a8ca1da2f1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TechfabricModule } from 'projects/core/src/lib/core.module';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { AzureAdModule } from '../../projects/core/src/lib/store/azureAd/azureAd.module';\r\nimport { MsalModule } from '@azure/msal-angular';\r\nimport { InteractionType, PublicClientApplication } from '@azure/msal-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { MsalNgrxModule } from 'projects/msal/src/lib/msal.module';\r\n// import { MsalAuthService } from 'projects/msal/src/lib/msalAuth.service';\r\nimport { AdConfigWrapper, MSAL_CONFIG_TOKEN } from 'projects/msal/src/lib/msal.config';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\nlet adConfigWrapper = <AdConfigWrapper><unknown>environment;\r\n\r\nconsole.log(adConfigWrapper)\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot({}),\r\n    RouterModule.forRoot([]),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({maxAge: 25, logOnly: environment.production}),\r\n    TechfabricModule,\r\n    MsalNgrxModule\r\n    // AzureAdModule.forRoot(\"https://localhost:7073/Configuration/AzureAdConfiguration\"),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MSAL_CONFIG_TOKEN,\r\n      useValue: {\r\n        clientId: environment.azureAd.clientId,\r\n        tenantId: environment.azureAd.tenantId,\r\n        redirectUri: environment.azureAd.redirectUri\r\n      }\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AzureAdModule",
            "id": "module-AzureAdModule-7e25c2e1601fac3ee1a9801be4362fceaef24e2d50f58aa09146be0273f4837f44d8a2a2d71bf2878c418a560a0cf8f4343f2e2fa4cb8744bfa1aa4eda49a931",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [
                        {
                            "name": "identityServiceUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ ngModule: typeof AzureAdModule; providers: {}; }",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "identityServiceUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { NgModule, InjectionToken, APP_INITIALIZER } from \"@angular/core\";\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { azureAdFeatureKey, azureAdReducer } from \"./azureAd.reducers\";\r\nimport { MsalModule, MSAL_INSTANCE, MSAL_BROADCAST_CONFIG, MSAL_GUARD_CONFIG, MSAL_INTERCEPTOR_CONFIG, MsalService } from \"@azure/msal-angular\";\r\nimport { AzureAdConfigurationService } from \"./azureAdConfigurationService\";\r\nimport { Configuration, InteractionType, PublicClientApplication } from \"@azure/msal-browser\";\r\nimport { AzureAdEffects, MsalServiceCustom } from \"./azureAd.effects\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\n\r\n\r\nconst IDENTITY_SERVICE_URL = new InjectionToken<string>('IDENTITY_SERVICE_URL');\r\n\r\n\r\nexport function msalConfigFactory(azureAdConfigService: AzureAdConfigurationService) : any{\r\n\r\n}\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n@NgModule({\r\n    providers: [\r\n        MsalServiceCustom,\r\n    ],\r\n    imports: [  \r\n        StoreModule.forFeature(azureAdFeatureKey, azureAdReducer),\r\n        EffectsModule.forFeature([AzureAdEffects]),\r\n    ]\r\n})\r\nexport class AzureAdModule {\r\n    static forRoot(identityServiceUrl: string){\r\n        return {\r\n            ngModule: AzureAdModule,\r\n            providers: [\r\n                AzureAdConfigurationService,\r\n                { provide: IDENTITY_SERVICE_URL, useValue: identityServiceUrl},\r\n                { provide: APP_INITIALIZER, useFactory: (azureAdConfigService: AzureAdConfigurationService) => azureAdConfigService.init(identityServiceUrl), deps: [AzureAdConfigurationService, IDENTITY_SERVICE_URL]},\r\n                {\r\n                    provide: MSAL_INSTANCE,\r\n                    useValue: new PublicClientApplication({\r\n                        auth: {\r\n                          clientId: 'fdc8b9bc-0bd2-4fae-b7b3-7d05b7596de0',\r\n                          authority: 'https://login.microsoftonline.com/a4aa9f35-9917-4518-b764-5fbbb893a6cd',\r\n                          redirectUri: 'http://localhost:4200'\r\n                        },\r\n                        cache: {\r\n                          cacheLocation: 'localStorage',\r\n                          storeAuthStateInCookie: isIE\r\n                        }\r\n                      })\r\n                },\r\n                {\r\n                    provide: MSAL_GUARD_CONFIG,\r\n                    useValue: {\r\n                        interactionType: InteractionType.Redirect, \r\n                        authRequest: {\r\n                          scopes: ['user.read']\r\n                        }\r\n                      }\r\n                },\r\n                {\r\n                    provide: MSAL_INTERCEPTOR_CONFIG,\r\n                    useValue: {\r\n                        interactionType: InteractionType.Redirect,\r\n                        protectedResourceMap: new Map([\r\n                          ['Enter_the_graph_endpoint_Here/v1.0/me', ['user.read']]\r\n                        ])\r\n                      }\r\n                },\r\n                MsalService\r\n            ],\r\n        }\r\n    }\r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "MsalServiceCustom"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ConfigurationModule",
            "id": "module-ConfigurationModule-91a17fd9cb8c8e6a5ef0d7f7cd6caec90dc16206053ef098c63d90d0d9ea2228b22a777dff64bd2ed15bedc34825c91ae7763286fe07164a447f614f04f5cf2e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/store/configuration/configuration.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [],
                    "optional": false,
                    "returnType": "{ ngModule: typeof ConfigurationModule; providers: {}; }",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { configurationFeatureKey, configurationReducer } from \"./configuration.reducers\";\r\n\r\n@NgModule({\r\n    providers: [],\r\n    imports: [\r\n        StoreModule.forFeature(configurationFeatureKey, configurationReducer)\r\n    ]\r\n})\r\nexport class ConfigurationModule {\r\n    static forRoot(){\r\n        return {\r\n            ngModule: ConfigurationModule,\r\n            providers: [\r\n            ]\r\n        }\r\n    }\r\n    \r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SignInPageModule",
            "id": "module-SignInPageModule-1a725305c2ff966b0c7feea412e519dd6b061be040691d9e8bc718551f22ccccb9eda147179faf11354f41954c72a9f5863c1be7e6b09de419b3cd997c97eaae",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/core/src/lib/store/signIn/signInPageModule.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { signInPageFeatureKey, signInPageReducer } from \"./signInPage.reducers\";\r\n\r\n@NgModule({\r\n    providers: [],\r\n    imports: [\r\n        StoreModule.forFeature(signInPageFeatureKey, signInPageReducer)\r\n    ]\r\n})\r\nexport class SignInPageModule {\r\n    \r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TechfabricAngularAppModule",
            "id": "module-TechfabricAngularAppModule-7fbefa79b5dbb82a1bfb8a8493b727be4f77be67d68a6f66d672d20e8d52030bc41f8aeeb05c1f74d1c769aea2c41496b3e78ac658976478380f49a15bea8bbd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/techfabric-angular-app/src/lib/techfabric-angular-app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { TfNavbarComponent } from './components/tf-navbar/tf-navbar.component';\nimport { configurationFeatureKey, tfConfigReducer } from './store/tf-config/tf-config.reducers';\nimport { navigationFeatureKey, tfNavigationReducer } from './store/tf-navigation/tf-navigation.reducers';\nimport { sidebarFeatureKey, tfSidebarReducer } from './store/tf-sidebar/tf-sidebar.reducers';\n\nlet components = [TfNavbarComponent]\n\n\n@NgModule({\n  declarations: [\n    ...components\n  ],\n  imports: [\n    FontAwesomeModule,\n    // EffectsModule.forFeature([]),\n    StoreModule.forFeature(navigationFeatureKey, tfNavigationReducer),\n    StoreModule.forFeature(configurationFeatureKey, tfConfigReducer),\n    StoreModule.forFeature(sidebarFeatureKey, tfSidebarReducer)\n  ],\n  exports: [\n    ...components\n  ]\n})\nexport class TechfabricAngularAppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TfNavbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TfNavbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TechfabricAngularControlsModule",
            "id": "module-TechfabricAngularControlsModule-6d254b0c078cd653e6f6f1967d3dfd2c10763871408d45bf2fd0f3f3e035113c983cfaa1b9583f2c1da9c7859a04d27db305bd4f34cae592d57cd82bf7fc6df6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TechfabricAngularControlsComponent } from './techfabric-angular-controls.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { TfInputComponent, TfButtonComponent }from './components';\r\n\r\nlet components = [\r\n  TfButtonComponent,\r\n  TfInputComponent\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...components\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    ...components\r\n  ]\r\n})\r\nexport class TechfabricAngularControlsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TfNavbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TfNavbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TechfabricAngularMsalNgrxModule",
            "id": "module-TechfabricAngularMsalNgrxModule-782abf43941f4b853525270cda4d8ab2a3e19554d3516f358ba8fac88e9ffa3b1d4aa8f51ab03f21751020b17df28d450022c47ceca640072c7e61afeb53acca",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { TechfabricAngularMsalNgrxComponent } from './techfabric-angular-msal-ngrx.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TechfabricAngularMsalNgrxComponent\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    TechfabricAngularMsalNgrxComponent\r\n  ]\r\n})\r\nexport class TechfabricAngularMsalNgrxModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TechfabricAngularMsalNgrxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TechfabricAngularMsalNgrxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "acquireTokenPopup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Popup`)"
            },
            {
                "name": "acquireTokenPopup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Popup`)"
            },
            {
                "name": "acquireTokenSilent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Silent`)"
            },
            {
                "name": "acquireTokenSilent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Silent`)"
            },
            {
                "name": "ACTION_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[TF-MSAL]'"
            },
            {
                "name": "ACTION_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[TF-MSAL]'"
            },
            {
                "name": "ACTION_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfConfig'"
            },
            {
                "name": "ACTION_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[TF-Navigation]'"
            },
            {
                "name": "ACTION_PREFIX",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[TF-Sidebar]'"
            },
            {
                "name": "adConfigWrapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<AdConfigWrapper><unknown>environment"
            },
            {
                "name": "addNavigationItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Add Navigation Item`,\r\n    props<TfNavigationItem>()\r\n)"
            },
            {
                "name": "azureAdFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'azureAd'"
            },
            {
                "name": "azureAdReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(AzureAdActions.setConfig, (state, config) => ({\r\n        ...state,\r\n        clientId: config.clientId,\r\n        instanceId: config.instanceId,\r\n        tenantId: config.tenantId,\r\n        redirectUri: config.redirectUri\r\n    }))\r\n)"
            },
            {
                "name": "ButtonInEverySection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "ButtonInPreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        \r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "ButtonInTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        test\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "ButtonInTitleAndPreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/techfabric-angular-app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[TfNavbarComponent]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  TfButtonComponent,\r\n  TfInputComponent\r\n]"
            },
            {
                "name": "configurationFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfConfig'"
            },
            {
                "name": "configurationFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfConfiguration'"
            },
            {
                "name": "configurationReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(ConfigurationActions.setConfiguration, (state, config) => ({\r\n        ...state,\r\n        ...config\r\n    }))\r\n)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ButtonComponent, CheckboxComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, ButtonComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignUpFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[ TfNavbarNavItemComponent ]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[ TfNavbarNavItemComponent ]"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                    </div>\r\n                    <div preview>\r\n                        test\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n\r\n    },\r\n    template: ` <tf-footer>\r\n                </tf-footer>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-navbar [logoUrl]=\"logoUrl\" [displayName]=\"displayName\">\r\n                </tf-navbar>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-signUpForm [logoUrl]=\"logoUrl\">\r\n                </tf-signUpForm>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-signInForm [logoUrl]=\"logoUrl\">\r\n                </tf-signInForm>`\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-signUpPage [logoUrl]=\"logoUrl\">\r\n                </tf-signUpPage>`,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\r\n                </tf-unauthorizedLayout>`,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations,\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-signInPage >\r\n                </tf-signInPage>`,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations,\r\n    },\r\n    props: {\r\n    },\r\n    template: ` \r\n                <tf-navbar>\r\n                </tf-navbar>`,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations,\r\n    },\r\n    props: {\r\n    },\r\n    template: ` \r\n                <tf-sidebar>\r\n                </tf-sidebar>`,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n  },\r\n  template: ` <tf-button>\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n  },\r\n  template: ` <tf-button>\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultNoContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "DefaultNoFooter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "DefaultNoHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "DefaultNoWell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "DefaultPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Primary\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Primary\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DefaultWithTopBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"true\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DisabledBasic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DisabledGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DisabledGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DisabledPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Basic,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "DisabledPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Basic,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  azureAd: {\r\n    clientId: 'fdc8b9bc-0bd2-4fae-b7b3-7d05b7596de0',\r\n    tenantId: 'a4aa9f35-9917-4518-b764-5fbbb893a6cd',\r\n    redirectUri: 'http://localhost:4200/signIn'\r\n  }\r\n}"
            },
            {
                "name": "getAuthResult",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectMsalState,\r\n    (state: MsalState) => state.authResult\r\n)"
            },
            {
                "name": "getAuthResult",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectMsalState,\r\n    (state: MsalState) => state.authResult\r\n)"
            },
            {
                "name": "getError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectMsalState,\r\n    (state: MsalState) => state.error\r\n)"
            },
            {
                "name": "getError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectMsalState,\r\n    (state: MsalState) => state.error\r\n)"
            },
            {
                "name": "getNavbarNavigationItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getTfNavigationState,\r\n    (state: TfNavigationState) => state.navigationItems.filter(n => n.navigationItemType === TfNavigationItemType.Navbar || n.navigationItemType === TfNavigationItemType.NavbarAndSidebar)\r\n)"
            },
            {
                "name": "getSidebarNavigationItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getTfNavigationState,\r\n    (state: TfNavigationState) => state.navigationItems.filter(n => n.navigationItemType === TfNavigationItemType.Sidebar || n.navigationItemType === TfNavigationItemType.NavbarAndSidebar)\r\n)"
            },
            {
                "name": "getTfNavigationItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    getTfNavigationState, \r\n    (state: TfNavigationState) => state.navigationItems\r\n)"
            },
            {
                "name": "getTfNavigationState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<TfNavigationState>(navigationFeatureKey)"
            },
            {
                "name": "IDENTITY_SERVICE_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<string>('IDENTITY_SERVICE_URL')"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MsalState",
                "defaultValue": "{\r\n    authResult: null,\r\n    error: null,\r\n    loading: false,\r\n    loaded: false,\r\n    config: null,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MsalState",
                "defaultValue": "{\r\n    authResult: null,\r\n    error: null,\r\n    loading: false,\r\n    loaded: false,\r\n    authConfig: {\r\n        clientId: '',\r\n        tenantId: '',\r\n        redirectUri: ''\r\n    }\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IAzureAdConfiguration",
                "defaultValue": "{\r\n    clientId: null,\r\n    instanceId: null,\r\n    tenantId: null,\r\n    redirectUri: null\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SignInPageState",
                "defaultValue": "{\r\n    showLegacySignIn: true,\r\n    showMicrosoftSignIn: true,\r\n    username: '',\r\n    password: ''\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TfConfigState",
                "defaultValue": "{\r\n    logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TfNavigationState",
                "defaultValue": "{\r\n    navigationItems: []\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IConfiguration",
                "defaultValue": "{\r\n    logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TfSidebarState",
                "defaultValue": "{\r\n    type: TfSidebarType.Fixed,\r\n    display: TfSidebarDisplay.None\r\n}"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/msalAuth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signUpForm>`\r\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signInForm>`\r\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signUpPage>`,\r\n})"
            },
            {
                "name": "LegacyAndMicrosoftLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations,\r\n      providers: [\r\n        provideMockStore({initialState: LegacyAndMicrosoftLoginState})\r\n      ]\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signInPage>\r\n              </tf-signInPage>`,\r\n})"
            },
            {
                "name": "LegacyAndMicrosoftLoginState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "JSON.parse(JSON.stringify(initialState))"
            },
            {
                "name": "loginFail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Fail`,\r\n    props<{ error: string}>()\r\n)"
            },
            {
                "name": "loginFail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Fail`,\r\n    props<{ error: string}>()\r\n)"
            },
            {
                "name": "loginPopup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Popup`)"
            },
            {
                "name": "loginPopup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Popup`)"
            },
            {
                "name": "loginRedirect",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Redirect`)"
            },
            {
                "name": "loginRedirect",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Redirect`)"
            },
            {
                "name": "loginSuccessful",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Successful`,\r\n    props<{ authResult: AuthenticationResult}>()\r\n)"
            },
            {
                "name": "loginSuccessful",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Login Successful`,\r\n    props<{ authResult: AuthenticationResult}>()\r\n)"
            },
            {
                "name": "logout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Logout`)"
            },
            {
                "name": "logout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Logout`)"
            },
            {
                "name": "microsoftOnlyState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "JSON.parse(JSON.stringify(initialState))"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signUpForm>`\r\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signInForm>`\r\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n              </tf-signUpPage>`,\r\n})"
            },
            {
                "name": "MicrosoftSignInOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations,\r\n      providers: [\r\n        provideMockStore({initialState: microsoftOnlyState})\r\n      ]\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signInPage>\r\n              </tf-signInPage>`,\r\n})"
            },
            {
                "name": "MSAL_CONFIG_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/msal.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<AdConfig>('TF_MSAL_CONFIG')"
            },
            {
                "name": "msalAuthUpdate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Auth Update`,\r\n    props<AdConfig>()\r\n)"
            },
            {
                "name": "msalConfigurationFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfMsal'"
            },
            {
                "name": "msalConfigurationFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfMsal'"
            },
            {
                "name": "msalReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(MsalActions.loginRedirect, (state) => ({\r\n        ...state,\r\n        loading: true,\r\n        loaded: false\r\n    })),\r\n    on(MsalActions.loginPopup, (state) => ({\r\n        ...state,\r\n        loading: true,\r\n        loaded: false\r\n    })),\r\n    on(MsalActions.loginSuccessful, (state, payload) => ({\r\n        ...state,\r\n        authResult: payload.authResult\r\n    })),\r\n    on(MsalActions.loginFail, (state) => ({\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n        user: null\r\n    })),\r\n    on(MsalActions.logout, (state) => ({\r\n        ...state,\r\n        ...initialState\r\n    }))\r\n)"
            },
            {
                "name": "msalReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(MsalActions.loginRedirect, (state) => ({\r\n        ...state,\r\n        loading: true,\r\n        loaded: false\r\n    })),\r\n    on(MsalActions.loginPopup, (state) => ({\r\n        ...state,\r\n        loading: true,\r\n        loaded: false\r\n    })),\r\n    on(MsalActions.loginSuccessful, (state, payload) => ({\r\n        ...state,\r\n        authResult: payload.authResult\r\n    })),\r\n    on(MsalActions.loginFail, (state) => ({\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n        user: null\r\n    })),\r\n    on(MsalActions.logout, (state) => ({\r\n        ...state,\r\n        ...initialState\r\n    }))\r\n)"
            },
            {
                "name": "navigationFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfNavigation'"
            },
            {
                "name": "removeNavigationItemByDisplayName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX} Remove Navigation Item By Name`,\r\n    props<{ displayText: string }>()\r\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SelectableWithBanner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n        isSelectable: true,\r\n        isSelected: true,\r\n        hasPrimaryBanner: true\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview [isSelectable]=\"isSelectable\" [(isSelected)]=\"isSelected\" [hasPrimaryBanner]=\"hasPrimaryBanner\">\r\n                    <div header>\r\n                    </div>\r\n                    <div preview>\r\n                        Preview Text\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
            },
            {
                "name": "selectAzureAdConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AzureAdState>(azureAdFeatureKey)"
            },
            {
                "name": "selectConfigurationState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<IConfiguration>(configurationFeatureKey)"
            },
            {
                "name": "selectLogoUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectTfConfig,\r\n    (state: TfConfigState) => state.logoUrl\r\n)"
            },
            {
                "name": "selectLogoUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectConfigurationState,\r\n    (state: IConfiguration) => state.logoUrl\r\n)"
            },
            {
                "name": "selectMsalState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/msal/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<MsalState>(msalConfigurationFeatureKey)"
            },
            {
                "name": "selectMsalState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<MsalState>(msalConfigurationFeatureKey)"
            },
            {
                "name": "selectSignInPageConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<SignInPageState>(signInPageFeatureKey)"
            },
            {
                "name": "selectTfConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<TfConfigState>(configurationFeatureKey)"
            },
            {
                "name": "setAuth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(`${ACTION_PREFIX}`,\r\n    props<{ clientId: string, tenantId: string, redirectUrl: string}>()\r\n)"
            },
            {
                "name": "setConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[AzureAd] setConfig',\r\n    props<IAzureAdConfiguration>()\r\n)"
            },
            {
                "name": "setConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    `${ACTION_PREFIX} Set Config`,\r\n    props<TfConfigState>()\r\n)"
            },
            {
                "name": "setConfiguration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Configuration] setConfiguration',\r\n    props<IConfiguration>()\r\n)"
            },
            {
                "name": "setSidebarDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    `${ACTION_PREFIX} Set Display`,\r\n    props<{payload: TfSidebarDisplay}>()\r\n)"
            },
            {
                "name": "setSidebarType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    `${ACTION_PREFIX} Set Type`,\r\n    props<{payload: TfSidebarType}>()\r\n)"
            },
            {
                "name": "sidebarFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'tfSidebar'"
            },
            {
                "name": "SIGN_IN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[AzureAd] signIn'"
            },
            {
                "name": "signInLegacy",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[SignIn Page] SignIn',\r\n    props<{ username: string, password: string}>()\r\n)"
            },
            {
                "name": "signInPageFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'signInPage'"
            },
            {
                "name": "signInPageReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n)"
            },
            {
                "name": "signInSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[AzureAd] signInSuccess',\r\n    props<any>()\r\n)"
            },
            {
                "name": "signInWithAd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[SignIn Page] SignInWithMicrosoft'\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpanderComponent>",
                "defaultValue": "(args: ExpanderComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FooterComponent>",
                "defaultValue": "(args: FooterComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NavbarComponent>",
                "defaultValue": "(args: NavbarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SliderComponent>",
                "defaultValue": "(args: SliderComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignUpFormComponent>",
                "defaultValue": "(args: SignUpFormComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignInFormComponent>",
                "defaultValue": "(args: SignInFormComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignUpPageComponent>",
                "defaultValue": "(args: SignUpPageComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UnauthorizedLayoutComponent>",
                "defaultValue": "(args: UnauthorizedLayoutComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SignInPageComponent>",
                "defaultValue": "(args: SignInPageComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TfNavbarComponent>",
                "defaultValue": "(args: TfNavbarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TfNavbarNavItemComponent>",
                "defaultValue": "(args: TfNavbarNavItemComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TfSidebarComponent>",
                "defaultValue": "(args: TfSidebarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TfButtonComponent>",
                "defaultValue": "(args: TfButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TfInputComponent>",
                "defaultValue": "(args: TfInputComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "tfConfigReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState\r\n)"
            },
            {
                "name": "tfNavigationReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(TfNavigationActions.addNavigationItem, (state, item) => ({\r\n        ...state,\r\n        navigationItems: [...state.navigationItems, item]\r\n    })),\r\n    on(TfNavigationActions.removeNavigationItemByDisplayName, (state, props) => ({\r\n        ...state,\r\n        navigationItems: state.navigationItems.filter(i => i.displayText !== props.displayText)\r\n    }))\r\n)"
            },
            {
                "name": "tfSidebarReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(TfSidebarActions.setSidebarType, (state, action) => ({\r\n        ...state,\r\n        type: action.payload\r\n    })),\r\n    on(TfSidebarActions.setSidebarDisplay, (state, action) => ({\r\n        ...state,\r\n        display: action.payload\r\n    }))\r\n)"
            },
            {
                "name": "WithChildren",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "msalConfigFactory",
                "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "azureAdConfigService",
                        "type": "AzureAdConfigurationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "azureAdConfigService",
                        "type": "AzureAdConfigurationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ButtonType",
                "childs": [
                    {
                        "name": "Basic",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Ghost",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Primary",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/core/src/lib/components/button/button.models.ts"
            },
            {
                "name": "ButtonType",
                "childs": [
                    {
                        "name": "Basic",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Ghost",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Primary",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.models.ts"
            },
            {
                "name": "TfNavigationItemType",
                "childs": [
                    {
                        "name": "Navbar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Sidebar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "NavbarAndSidebar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.models.ts"
            },
            {
                "name": "TfSidebarDisplay",
                "childs": [
                    {
                        "name": "None",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Preview",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Open",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.models.ts"
            },
            {
                "name": "TfSidebarType",
                "childs": [
                    {
                        "name": "ContentAware",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Fixed",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.models.ts"
            }
        ],
        "groupedVariables": {
            "projects/msal/src/lib/store/msal.actions.ts": [
                {
                    "name": "acquireTokenPopup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Popup`)"
                },
                {
                    "name": "acquireTokenSilent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Silent`)"
                },
                {
                    "name": "ACTION_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[TF-MSAL]'"
                },
                {
                    "name": "loginFail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Fail`,\r\n    props<{ error: string}>()\r\n)"
                },
                {
                    "name": "loginPopup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Popup`)"
                },
                {
                    "name": "loginRedirect",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Redirect`)"
                },
                {
                    "name": "loginSuccessful",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Successful`,\r\n    props<{ authResult: AuthenticationResult}>()\r\n)"
                },
                {
                    "name": "logout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Logout`)"
                },
                {
                    "name": "msalAuthUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Auth Update`,\r\n    props<AdConfig>()\r\n)"
                }
            ],
            "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts": [
                {
                    "name": "acquireTokenPopup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Popup`)"
                },
                {
                    "name": "acquireTokenSilent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Acquire Token Silent`)"
                },
                {
                    "name": "ACTION_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[TF-MSAL]'"
                },
                {
                    "name": "loginFail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Fail`,\r\n    props<{ error: string}>()\r\n)"
                },
                {
                    "name": "loginPopup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Popup`)"
                },
                {
                    "name": "loginRedirect",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Redirect`)"
                },
                {
                    "name": "loginSuccessful",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Login Successful`,\r\n    props<{ authResult: AuthenticationResult}>()\r\n)"
                },
                {
                    "name": "logout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Logout`)"
                },
                {
                    "name": "setAuth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX}`,\r\n    props<{ clientId: string, tenantId: string, redirectUrl: string}>()\r\n)"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.actions.ts": [
                {
                    "name": "ACTION_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfConfig'"
                },
                {
                    "name": "setConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    `${ACTION_PREFIX} Set Config`,\r\n    props<TfConfigState>()\r\n)"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts": [
                {
                    "name": "ACTION_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[TF-Navigation]'"
                },
                {
                    "name": "addNavigationItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Add Navigation Item`,\r\n    props<TfNavigationItem>()\r\n)"
                },
                {
                    "name": "removeNavigationItemByDisplayName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(`${ACTION_PREFIX} Remove Navigation Item By Name`,\r\n    props<{ displayText: string }>()\r\n)"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts": [
                {
                    "name": "ACTION_PREFIX",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[TF-Sidebar]'"
                },
                {
                    "name": "setSidebarDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    `${ACTION_PREFIX} Set Display`,\r\n    props<{payload: TfSidebarDisplay}>()\r\n)"
                },
                {
                    "name": "setSidebarType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    `${ACTION_PREFIX} Set Type`,\r\n    props<{payload: TfSidebarType}>()\r\n)"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "adConfigWrapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<AdConfigWrapper><unknown>environment"
                },
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.reducers.ts": [
                {
                    "name": "azureAdFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'azureAd'"
                },
                {
                    "name": "azureAdReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(AzureAdActions.setConfig, (state, config) => ({\r\n        ...state,\r\n        clientId: config.clientId,\r\n        instanceId: config.instanceId,\r\n        tenantId: config.tenantId,\r\n        redirectUri: config.redirectUri\r\n    }))\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAzureAdConfiguration",
                    "defaultValue": "{\r\n    clientId: null,\r\n    instanceId: null,\r\n    tenantId: null,\r\n    redirectUri: null\r\n}"
                }
            ],
            "projects/core/src/lib/components/expander/expander.stories.ts": [
                {
                    "name": "ButtonInEverySection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "ButtonInPreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        \r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "ButtonInTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        test\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "ButtonInTitleAndPreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div preview>\r\n                        <tf-button></tf-button>\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ButtonComponent, CheckboxComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview>\r\n                    <div header>\r\n                    </div>\r\n                    <div preview>\r\n                        test\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "SelectableWithBanner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: true,\r\n        isSelectable: true,\r\n        isSelected: true,\r\n        hasPrimaryBanner: true\r\n    },\r\n    template: ` <tf-expander [headerText]=\"headerText\" [displayPreview]=displayPreview [isSelectable]=\"isSelectable\" [(isSelected)]=\"isSelected\" [hasPrimaryBanner]=\"hasPrimaryBanner\">\r\n                    <div header>\r\n                    </div>\r\n                    <div preview>\r\n                        Preview Text\r\n                    </div>\r\n                    <div content>\r\n                        content\r\n                    </div>\r\n                </tf-expander>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/expander/expander.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpanderComponent>",
                    "defaultValue": "(args: ExpanderComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/techfabric-angular-app/src/lib/techfabric-angular-app.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/techfabric-angular-app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[TfNavbarComponent]"
                }
            ],
            "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  TfButtonComponent,\r\n  TfInputComponent\r\n]"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts": [
                {
                    "name": "configurationFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfConfig'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfConfigState",
                    "defaultValue": "{\r\n    logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n}"
                },
                {
                    "name": "tfConfigReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState\r\n)"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.reducers.ts": [
                {
                    "name": "configurationFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfConfiguration'"
                },
                {
                    "name": "configurationReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(ConfigurationActions.setConfiguration, (state, config) => ({\r\n        ...state,\r\n        ...config\r\n    }))\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IConfiguration",
                    "defaultValue": "{\r\n    logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/msal/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/core/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/techfabric-angular-app/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/techfabric-angular-controls/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/techfabric-angular-msal-ngrx/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/core/src/lib/components/button/button.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "DefaultBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n  },\r\n  template: ` <tf-button>\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DefaultGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DefaultPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Primary\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Basic,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/card/card.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultNoContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultNoFooter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultNoHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultNoWell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"false\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "DefaultWithTopBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        headerText: 'Title',\r\n        displayPreview: false,\r\n    },\r\n    template: ` <app-card [hasTopBar]=\"true\">\r\n                    <div header>\r\n                        Header\r\n                    </div>\r\n                    <div well>\r\n                        Well\r\n                    </div>\r\n                    <div content>\r\n                        Content\r\n                    </div>\r\n                    <div footer>\r\n                        Footer\r\n                    </div>\r\n                </app-card>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/footer/footer.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n\r\n    },\r\n    template: ` <tf-footer>\r\n                </tf-footer>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FooterComponent>",
                    "defaultValue": "(args: FooterComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/navbar/navbar.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-navbar [logoUrl]=\"logoUrl\" [displayName]=\"displayName\">\r\n                </tf-navbar>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NavbarComponent>",
                    "defaultValue": "(args: NavbarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-signUpForm [logoUrl]=\"logoUrl\">\r\n                </tf-signUpForm>`\r\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signUpForm>`\r\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signUpForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signUpForm>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignUpFormComponent>",
                    "defaultValue": "(args: SignUpFormComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/signInForm/signInForm.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, ButtonComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` <tf-signInForm [logoUrl]=\"logoUrl\">\r\n                </tf-signInForm>`\r\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signInForm>`\r\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n  },\r\n  template: ` <tf-signInForm [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"true\">\r\n              </tf-signInForm>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignInFormComponent>",
                    "defaultValue": "(args: SignInFormComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignUpFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-signUpPage [logoUrl]=\"logoUrl\">\r\n                </tf-signUpPage>`,\r\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showLegacyLogin]=\"showLegacyLogin\" [showMicrosoftLogin]=\"showMicrosoftLogin\">\r\n              </tf-signUpPage>`,\r\n})"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signUpPage [logoUrl]=\"logoUrl\" [showMicrosoftLogin]=\"showMicrosoftLogin\" [showLegacyLogin]=\"showLegacyLogin\">\r\n              </tf-signUpPage>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignUpPageComponent>",
                    "defaultValue": "(args: SignUpPageComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-unauthorizedLayout [logoUrl]=\"logoUrl\">\r\n                </tf-unauthorizedLayout>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UnauthorizedLayoutComponent>",
                    "defaultValue": "(args: UnauthorizedLayoutComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/pages/signInPage/signInPage.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[InputComponent, SignInFormComponent, NavbarComponent, ButtonComponent, FooterComponent, UnauthorizedLayoutComponent]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations,\r\n    },\r\n    props: {\r\n        displayName: 'Tyler H.',\r\n        logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg'\r\n    },\r\n    template: ` \r\n                <tf-signInPage >\r\n                </tf-signInPage>`,\r\n})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{}"
                },
                {
                    "name": "LegacyAndMicrosoftLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations,\r\n      providers: [\r\n        provideMockStore({initialState: LegacyAndMicrosoftLoginState})\r\n      ]\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: true,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signInPage>\r\n              </tf-signInPage>`,\r\n})"
                },
                {
                    "name": "LegacyAndMicrosoftLoginState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "JSON.parse(JSON.stringify(initialState))"
                },
                {
                    "name": "microsoftOnlyState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "JSON.parse(JSON.stringify(initialState))"
                },
                {
                    "name": "MicrosoftSignInOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations,\r\n      providers: [\r\n        provideMockStore({initialState: microsoftOnlyState})\r\n      ]\r\n  },\r\n  props: {\r\n      logoUrl: 'https://assets-global.website-files.com/5e4d87b2291197807847f220/5e4fd127dca002ab4d52b079_Techfabric%20dark.svg',\r\n      showLegacyLogin: false,\r\n      showMicrosoftLogin: true,\r\n  },\r\n  template: ` \r\n              <tf-signInPage>\r\n              </tf-signInPage>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SignInPageComponent>",
                    "defaultValue": "(args: SignInPageComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[ TfNavbarNavItemComponent ]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations,\r\n    },\r\n    props: {\r\n    },\r\n    template: ` \r\n                <tf-navbar>\r\n                </tf-navbar>`,\r\n})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TfNavbarComponent>",
                    "defaultValue": "(args: TfNavbarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TfNavbarNavItemComponent>",
                    "defaultValue": "(args: TfNavbarNavItemComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithChildren",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[ TfNavbarNavItemComponent ]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    moduleMetadata: {\r\n        declarations,\r\n    },\r\n    props: {\r\n    },\r\n    template: ` \r\n                <tf-sidebar>\r\n                </tf-sidebar>`,\r\n})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TfSidebarComponent>",
                    "defaultValue": "(args: TfSidebarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "DefaultBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n  },\r\n  template: ` <tf-button>\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DefaultGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DefaultPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Primary\r\n  },\r\n  template: ` <tf-button [type]=\"type\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledBasic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Ghost,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "DisabledPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  moduleMetadata: {\r\n      declarations\r\n  },\r\n  props: {\r\n    type: ButtonType.Basic,\r\n    disabled: true\r\n  },\r\n  template: ` <tf-button [type]=\"type\" [disabled]=\"disabled\">\r\n                Button\r\n              </tf-button>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TfButtonComponent>",
                    "defaultValue": "(args: TfButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/input/input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/core/src/lib/components/slider/slider.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/components/slider/slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SliderComponent>",
                    "defaultValue": "(args: SliderComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TfInputComponent>",
                    "defaultValue": "(args: TfInputComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  azureAd: {\r\n    clientId: 'fdc8b9bc-0bd2-4fae-b7b3-7d05b7596de0',\r\n    tenantId: 'a4aa9f35-9917-4518-b764-5fbbb893a6cd',\r\n    redirectUri: 'http://localhost:4200/signIn'\r\n  }\r\n}"
                }
            ],
            "projects/msal/src/lib/store/msal.selectors.ts": [
                {
                    "name": "getAuthResult",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectMsalState,\r\n    (state: MsalState) => state.authResult\r\n)"
                },
                {
                    "name": "getError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectMsalState,\r\n    (state: MsalState) => state.error\r\n)"
                },
                {
                    "name": "selectMsalState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<MsalState>(msalConfigurationFeatureKey)"
                }
            ],
            "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts": [
                {
                    "name": "getAuthResult",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectMsalState,\r\n    (state: MsalState) => state.authResult\r\n)"
                },
                {
                    "name": "getError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectMsalState,\r\n    (state: MsalState) => state.error\r\n)"
                },
                {
                    "name": "selectMsalState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<MsalState>(msalConfigurationFeatureKey)"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts": [
                {
                    "name": "getNavbarNavigationItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getTfNavigationState,\r\n    (state: TfNavigationState) => state.navigationItems.filter(n => n.navigationItemType === TfNavigationItemType.Navbar || n.navigationItemType === TfNavigationItemType.NavbarAndSidebar)\r\n)"
                },
                {
                    "name": "getSidebarNavigationItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getTfNavigationState,\r\n    (state: TfNavigationState) => state.navigationItems.filter(n => n.navigationItemType === TfNavigationItemType.Sidebar || n.navigationItemType === TfNavigationItemType.NavbarAndSidebar)\r\n)"
                },
                {
                    "name": "getTfNavigationItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    getTfNavigationState, \r\n    (state: TfNavigationState) => state.navigationItems\r\n)"
                },
                {
                    "name": "getTfNavigationState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<TfNavigationState>(navigationFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.module.ts": [
                {
                    "name": "IDENTITY_SERVICE_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<string>('IDENTITY_SERVICE_URL')"
                },
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "projects/msal/src/lib/store/msal.reducers.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MsalState",
                    "defaultValue": "{\r\n    authResult: null,\r\n    error: null,\r\n    loading: false,\r\n    loaded: false,\r\n    config: null,\r\n}"
                },
                {
                    "name": "msalConfigurationFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfMsal'"
                },
                {
                    "name": "msalReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(MsalActions.loginRedirect, (state) => ({\r\n        ...state,\r\n        loading: true,\r\n        loaded: false\r\n    })),\r\n    on(MsalActions.loginPopup, (state) => ({\r\n        ...state,\r\n        loading: true,\r\n        loaded: false\r\n    })),\r\n    on(MsalActions.loginSuccessful, (state, payload) => ({\r\n        ...state,\r\n        authResult: payload.authResult\r\n    })),\r\n    on(MsalActions.loginFail, (state) => ({\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n        user: null\r\n    })),\r\n    on(MsalActions.logout, (state) => ({\r\n        ...state,\r\n        ...initialState\r\n    }))\r\n)"
                }
            ],
            "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MsalState",
                    "defaultValue": "{\r\n    authResult: null,\r\n    error: null,\r\n    loading: false,\r\n    loaded: false,\r\n    authConfig: {\r\n        clientId: '',\r\n        tenantId: '',\r\n        redirectUri: ''\r\n    }\r\n}"
                },
                {
                    "name": "msalConfigurationFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfMsal'"
                },
                {
                    "name": "msalReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(MsalActions.loginRedirect, (state) => ({\r\n        ...state,\r\n        loading: true,\r\n        loaded: false\r\n    })),\r\n    on(MsalActions.loginPopup, (state) => ({\r\n        ...state,\r\n        loading: true,\r\n        loaded: false\r\n    })),\r\n    on(MsalActions.loginSuccessful, (state, payload) => ({\r\n        ...state,\r\n        authResult: payload.authResult\r\n    })),\r\n    on(MsalActions.loginFail, (state) => ({\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n        user: null\r\n    })),\r\n    on(MsalActions.logout, (state) => ({\r\n        ...state,\r\n        ...initialState\r\n    }))\r\n)"
                }
            ],
            "projects/core/src/lib/store/signIn/signInPage.reducers.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SignInPageState",
                    "defaultValue": "{\r\n    showLegacySignIn: true,\r\n    showMicrosoftSignIn: true,\r\n    username: '',\r\n    password: ''\r\n}"
                },
                {
                    "name": "signInPageFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'signInPage'"
                },
                {
                    "name": "signInPageReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n)"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfNavigationState",
                    "defaultValue": "{\r\n    navigationItems: []\r\n}"
                },
                {
                    "name": "navigationFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfNavigation'"
                },
                {
                    "name": "tfNavigationReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(TfNavigationActions.addNavigationItem, (state, item) => ({\r\n        ...state,\r\n        navigationItems: [...state.navigationItems, item]\r\n    })),\r\n    on(TfNavigationActions.removeNavigationItemByDisplayName, (state, props) => ({\r\n        ...state,\r\n        navigationItems: state.navigationItems.filter(i => i.displayText !== props.displayText)\r\n    }))\r\n)"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TfSidebarState",
                    "defaultValue": "{\r\n    type: TfSidebarType.Fixed,\r\n    display: TfSidebarDisplay.None\r\n}"
                },
                {
                    "name": "sidebarFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'tfSidebar'"
                },
                {
                    "name": "tfSidebarReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(TfSidebarActions.setSidebarType, (state, action) => ({\r\n        ...state,\r\n        type: action.payload\r\n    })),\r\n    on(TfSidebarActions.setSidebarDisplay, (state, action) => ({\r\n        ...state,\r\n        display: action.payload\r\n    }))\r\n)"
                }
            ],
            "projects/msal/src/lib/msalAuth.service.ts": [
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/msalAuth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.service.ts": [
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ],
            "projects/msal/src/lib/msal.config.ts": [
                {
                    "name": "MSAL_CONFIG_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/msal/src/lib/msal.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<AdConfig>('TF_MSAL_CONFIG')"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.selectors.ts": [
                {
                    "name": "selectAzureAdConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AzureAdState>(azureAdFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.selectors.ts": [
                {
                    "name": "selectConfigurationState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<IConfiguration>(configurationFeatureKey)"
                },
                {
                    "name": "selectLogoUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectConfigurationState,\r\n    (state: IConfiguration) => state.logoUrl\r\n)"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.selectors.ts": [
                {
                    "name": "selectLogoUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectTfConfig,\r\n    (state: TfConfigState) => state.logoUrl\r\n)"
                },
                {
                    "name": "selectTfConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<TfConfigState>(configurationFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/signIn/signInPage.selectors.ts": [
                {
                    "name": "selectSignInPageConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<SignInPageState>(signInPageFeatureKey)"
                }
            ],
            "projects/core/src/lib/store/azureAd/azureAd.actions.ts": [
                {
                    "name": "setConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[AzureAd] setConfig',\r\n    props<IAzureAdConfiguration>()\r\n)"
                },
                {
                    "name": "SIGN_IN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[AzureAd] signIn'"
                },
                {
                    "name": "signInSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[AzureAd] signInSuccess',\r\n    props<any>()\r\n)"
                }
            ],
            "projects/core/src/lib/store/configuration/configuration.actions.ts": [
                {
                    "name": "setConfiguration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Configuration] setConfiguration',\r\n    props<IConfiguration>()\r\n)"
                }
            ],
            "projects/core/src/lib/store/signIn/signInPage.actions.ts": [
                {
                    "name": "signInLegacy",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[SignIn Page] SignIn',\r\n    props<{ username: string, password: string}>()\r\n)"
                },
                {
                    "name": "signInWithAd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[SignIn Page] SignInWithMicrosoft'\r\n)"
                }
            ]
        },
        "groupedFunctions": {
            "projects/core/src/lib/store/azureAd/azureAd.module.ts": [
                {
                    "name": "msalConfigFactory",
                    "file": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "azureAdConfigService",
                            "type": "AzureAdConfigurationService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "azureAdConfigService",
                            "type": "AzureAdConfigurationService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "projects/core/src/lib/components/button/button.models.ts": [
                {
                    "name": "ButtonType",
                    "childs": [
                        {
                            "name": "Basic",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Ghost",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Primary",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/core/src/lib/components/button/button.models.ts"
                }
            ],
            "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.models.ts": [
                {
                    "name": "ButtonType",
                    "childs": [
                        {
                            "name": "Basic",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Ghost",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Primary",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.models.ts"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.models.ts": [
                {
                    "name": "TfNavigationItemType",
                    "childs": [
                        {
                            "name": "Navbar",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Sidebar",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "NavbarAndSidebar",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.models.ts"
                }
            ],
            "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.models.ts": [
                {
                    "name": "TfSidebarDisplay",
                    "childs": [
                        {
                            "name": "None",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Preview",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Open",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.models.ts"
                },
                {
                    "name": "TfSidebarType",
                    "childs": [
                        {
                            "name": "ContentAware",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Fixed",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.models.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/core/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoFooter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultNoWell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultWithTopBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpanderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInEverySection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInPreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonInTitleAndPreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectableWithBanner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/expander/expander.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signInForm/signInForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/signUpForm/signUpForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/components/slider/slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/core.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/core.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CoreService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnauthorizedLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/layouts/unauthorizedLayout/unauthorizedLayout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLoginState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "microsoftOnlyState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signInPage/signInPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LegacyAndMicrosoftLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MicrosoftSignInOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/pages/signUpPage/signUpPage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SIGN_IN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AzureAdEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalServiceCustom",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAzureAdConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "msalConfigFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IDENTITY_SERVICE_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azureAdFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "azureAdReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAzureAdConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAd.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AzureAdState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/azureAdConfigurationService.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AzureAdConfigurationService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/azureAd/msalTransformService.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalTransformService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configurationFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configurationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectConfigurationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectLogoUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/configuration/configuration.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ConfigurationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInLegacy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInWithAd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInPageFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "signInPageReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectSignInPageConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/lib/store/signIn/signInPage.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SignInPageState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/core/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msal.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msal.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdConfigWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msal.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MSAL_CONFIG_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msalAuth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalAuthService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/msalAuth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "acquireTokenPopup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "acquireTokenSilent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTION_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginFail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginPopup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginRedirect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginSuccessful",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "logout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "msalAuthUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalEffects",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "msalConfigurationFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "msalReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getAuthResult",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectMsalState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/lib/store/msal.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MsalState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/msal/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TfNavbarNavItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar-nav-item/tf-navbar-nav-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithChildren",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TfNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-navbar/tf-navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TfSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/components/tf-sidebar/tf-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTION_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TfConfigState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configurationFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tfConfigReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectLogoUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-config/tf-config.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectTfConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTION_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addNavigationItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "removeNavigationItemByDisplayName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TfNavigationItem",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TfNavigationState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navigationFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tfNavigationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getNavbarNavigationItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getSidebarNavigationItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTfNavigationItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-navigation/tf-navigation.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTfNavigationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTION_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setSidebarDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setSidebarType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TfSidebarState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sidebarFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/store/tf-sidebar/tf-sidebar.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tfSidebarReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/techfabric-angular-app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/lib/techfabric-angular-app.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TechfabricAngularAppService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-app/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TfButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledBasic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-button/tf-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TfInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/components/tf-input/tf-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TechfabricAngularControlsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/lib/techfabric-angular-controls.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TechfabricAngularControlsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-controls/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "acquireTokenPopup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "acquireTokenSilent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACTION_PREFIX",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginFail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginPopup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginRedirect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginSuccessful",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "logout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setAuth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MsalEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "msalConfigurationFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.reducers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "msalReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getAuthResult",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectMsalState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MsalAuthConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/store/msal.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MsalState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TechfabricAngularMsalNgrxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TechfabricAngularMsalNgrxService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/lib/techfabric-angular-msal-ngrx.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/techfabric-angular-msal-ngrx/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "adConfigWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}